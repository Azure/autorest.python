parameters:
    folderName: ""
    package: "autorest.python"

steps:
    - script: npm run test -- --command=ci --folder=${{ parameters.folderName }}
      displayName: Execute ${{ parameters.folderName }} tests - Python $(PythonVersion)
      workingDirectory: $(Build.SourcesDirectory)/autorest.python/packages/${{parameters.package}}

    - script: npm run test -- --command=lint --folder=${{ parameters.folderName }}
      displayName: Lint ${{ parameters.folderName }} - Python $(PythonVersion) --folder=${{ parameters.folderName }}
      workingDirectory: $(Build.SourcesDirectory)/autorest.python/packages/${{parameters.package}}
      condition: and(eq(variables['PythonVersion'], '3.8'), or(contains( '${{ parameters.folderName }}', 'version-tolerant'), eq('${{parameters.package}}', 'typespec-python')))

    - script: npm run test -- --command=mypy --folder=${{ parameters.folderName }}
      displayName: Mypy ${{ parameters.folderName }} - Python $(PythonVersion)
      workingDirectory: $(Build.SourcesDirectory)/autorest.python/packages/${{parameters.package}}
      condition: and(eq(variables['PythonVersion'], '3.11'), or(contains('${{ parameters.folderName }}', 'version-tolerant'), eq('${{parameters.package}}', 'typespec-python')))

    - script: npm run test -- --command=pyright --folder=${{ parameters.folderName }}
      displayName: Pyright ${{ parameters.folderName }} - Python $(PythonVersion)
      workingDirectory: $(Build.SourcesDirectory)/autorest.python/packages/${{parameters.package}}
      condition: and(eq(variables['PythonVersion'], '3.10'), or(contains('${{ parameters.folderName }}', 'version-tolerant'), eq('${{parameters.package}}', 'typespec-python')))

    - script: npm run test -- --command=apiview --folder=${{ parameters.folderName }}
      displayName: ApiView ${{ parameters.folderName }} - Python $(PythonVersion)
      workingDirectory: $(Build.SourcesDirectory)/autorest.python/packages/${{parameters.package}}
      condition: eq(variables['PythonVersion'], '3.11')
