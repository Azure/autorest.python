trigger:
  branches:
    include:
      - autorestv3

pr:
  branches:
    include:
      - autorestv3

variables:
  NodeVersion: "12.x"
  PythonVersion: "3.6"
  TestFolder: "$(Build.SourcesDirectory)/test/"

jobs:
  - job: "AutoRest_Python_CI"
    displayName: "Run AutoRest CI Checks"

    strategy:
      matrix:
        Linux_Python27:
          OSName: "Linux"
          OSVmImage: "MMSUbuntu20.04"
          PythonVersion: "2.7"
        Linux_Python36:
          OSName: "Linux"
          OSVmImage: "MMSUbuntu20.04"
          PythonVersion: "3.6"
          CoverageArg: ""
        Linux_Python38:
          OSName: "Linux"
          OSVmImage: "MMSUbuntu20.04"
          PythonVersion: "3.8"

    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
      vmImage: $(OSVmImage)

    steps:
      - task: NodeTool@0
        displayName: "Install Node.js $(NodeVersion)"
        inputs:
          versionSpec: "$(NodeVersion)"

      - task: UsePythonVersion@0
        displayName: "Use Python 3.6"
        inputs:
          versionSpec: 3.6

      - script: |
          cd $(Build.SourcesDirectory)
          pip install -r dev_requirements.txt
          npm install -g autorest
          npm install
        displayName: 'Prepare Environment for Generation'

      - task: UsePythonVersion@0
        displayName: 'Use Python $(PythonVersion)'
        inputs:
          versionSpec: $(PythonVersion)

      - script: |
          pip install pip==20.2
          pip install tox coverage==4.5.4
        displayName: "Install Env Specific Reqs in Target PyVersion $(PythonVersion)"

      - script: |
          cd $(TestFolder)/multiapi
          tox -e ci
        displayName: 'Execute "multiapi" Tests - Python $(PythonVersion)'
      - task: PublishTestResults@2
        displayName: 'Publish "multiapi" Test Results'
        condition: always()
        inputs:
          testRunTitle: "$(OSName) Python $(PythonVersion) - multiapi"
          searchFolder: "$(TestFolder)/multiapi"

      - script: |
          npm run coverage-push -- $(Build.Repository.Name) $(Build.SourceBranch) $(github-token) $(storage-coverage-user) $(storage-coverage-pass)
        workingDirectory: node_modules/@microsoft.azure/autorest.testserver
        displayName: "Publish coverage report to stroage account"
