trigger:
  branches:
    include:
      - autorestv3

pr:
  branches:
    include:
      - autorestv3

variables:
  NodeVersion: "12.x"
  PythonVersion: "3.6"
  TestFolder: "$(Build.SourcesDirectory)/test/"
  AUTOREST_TESTSERVER_COVERAGE_DIRECTORY: "$(Build.SourcesDirectory)/coverage/"

parameters:
  - name: VerificationPackages
    type: object
    default:
    - name: azure-messaging-webpubsubservice
      service: webpubsub

jobs:
  - job: "AutoRest_Python_CI"
    displayName: "Run AutoRest CI Checks"

    strategy:
      matrix:
        Linux_Python27:
          OSName: "Linux"
          OSVmImage: "MMSUbuntu20.04"
          PythonVersion: "2.7"
        Linux_Python36:
          OSName: "Linux"
          OSVmImage: "MMSUbuntu20.04"
          PythonVersion: "3.6"
          CoverageArg: ""
        Linux_Python38:
          OSName: "Linux"
          OSVmImage: "MMSUbuntu20.04"
          PythonVersion: "3.8"

    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
      vmImage: $(OSVmImage)

    steps:
      - task: NodeTool@0
        displayName: "Install Node.js $(NodeVersion)"
        inputs:
          versionSpec: "$(NodeVersion)"

      - task: UsePythonVersion@0
        displayName: "Use Python 3.6"
        inputs:
          versionSpec: 3.6

      - script: |
          cd $(Build.SourcesDirectory)
          pip install -r dev_requirements.txt
          npm install -g autorest
          npm install
        displayName: 'Prepare Environment for Generation'

      - script: |
          cd $(TestFolder)/vanilla/version-tolerant
          tox -e ci
          tox -e lint
        displayName: 'Execute version-tolerant "vanilla" Tests - Python $(PythonVersion)'
        condition: and(succeededOrFailed(), ne(variables['PythonVersion'], '2.7'))
      - task: PublishTestResults@2
        displayName: 'Publish version-tolerant "vanilla" Test Results'
        condition: and(succeededOrFailed(), ne(variables['PythonVersion'], '2.7'))
        inputs:
          testRunTitle: "$(OSName) Python $(PythonVersion) - version-tolerant vanilla"
          searchFolder: "$(TestFolder)/vanilla/version-tolerant"
