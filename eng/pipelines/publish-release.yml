# This is a manual pipeline, don't trigger automatically
trigger: none
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  NodeVersion: '12.x'
  TestFolder: '$(Build.SourcesDirectory)/test/'

steps:
  - task: NodeTool@0
    displayName: 'Install Node.js $(NodeVersion)'
    inputs:
      versionSpec: '$(NodeVersion)'

  - task: UsePythonVersion@0
    displayName: 'Use Python 3.6'
    inputs:
      versionSpec: 3.6

  - script: |
      cd $(Build.SourcesDirectory)
      pip install -r dev_requirements.txt
      npm install -g autorest
      npm install
    displayName: 'Prepare Environment for Generation'

  - script: |
      pylint autorest
    displayName: 'Pylint'

  - script: |
      mypy autorest
    displayName: 'Mypy'

  - script: |
      pytest test/unittests
    displayName: 'Unit tests'

  - script: |
      pip install tox coverage==4.5.4
    displayName: 'Install Env Specific Reqs in Target PyVersion $(PythonVersion)'

  - script: |
      cd $(TestFolder)/azure/legacy
      tox -e ci
    displayName: 'Execute legacy "azure" Tests - Python $(PythonVersion)'

  - script: |
      cd $(TestFolder)/azure/low-level
      tox -e ci
    displayName: 'Execute low level "azure" Tests - Python $(PythonVersion)'

  - script: |
      cd $(TestFolder)/azure/version-tolerant
      tox -e ci
    displayName: 'Execute version tolerant "azure" Tests - Python $(PythonVersion)'

  - script: |
      cd $(TestFolder)/vanilla/legacy
      tox -e ci
    displayName: 'Execute legacy "vanilla" Tests - Python $(PythonVersion)'

  - script: |
      cd $(TestFolder)/vanilla/low-level
      tox -e ci
    displayName: 'Execute low level "vanilla" Tests - Python $(PythonVersion)'

  - script: |
      cd $(TestFolder)/vanilla/version-tolerant
      tox -e ci
    displayName: 'Execute version tolerant "vanilla" Tests - Python $(PythonVersion)'

  - script: |
      cd $(TestFolder)/dpg/low-level
      tox -e ci
    displayName: 'Execute low level "dpg" Tests - Python $(PythonVersion)'

  - script: |
      cd $(TestFolder)/dpg/version-tolerant
      tox -e ci
    displayName: 'Execute version tolerant "dpg" Tests - Python $(PythonVersion)'

  - script: |
      export RELEASE_VERSION=$(node -p -e "require('./package.json').version")
      npm pack
      npx publish-release --token $(azuresdk-github-pat) --repo autorest.python --owner azure --name "Autorest for Python v$RELEASE_VERSION" --tag v$RELEASE_VERSION --notes='Release version of Autorest for Python v5' --prerelease --editRelease false --assets autorest-python-$RELEASE_VERSION.tgz --target_commitish $(Build.SourceBranchName)
    displayName: 'Publish GitHub release'

  - script: |
      echo "//registry.npmjs.org/:_authToken=$(azure-sdk-npm-token)" > ./.npmrc
      npm publish --access public
    displayName: 'Publish to npm'
