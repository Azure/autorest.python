name: autrest.python - http-client-python - ci

trigger:
  branches:
    exclude:
      - '*'

pr:
  branches:
    exclude:
      - '*'

pool:
  name: "azsdk-pool-mms-ubuntu-2004-general"
  vmImage: "MMSUbuntu20.04"

variables:
  - group: Azure SDK Auto Release Pipeline Secrets

jobs:
- job: BuildAndCreatePr

  steps:
  - task: NodeTool@0
    displayName: 'Install Node.js 18.x'
    inputs:
      versionSpec: '18.x'

  - script: npm install -g pnpm@9.5.0
    displayName: Install pnpm 9.5.0

  - bash: |
        YmlPath=$(pwd)/eng/pipelines
        echo "##vso[task.setvariable variable=YmlPath]$YmlPath"
    displayName: find yml path

  # build and publish package for http-client-python
  - bash: |
      git config --global user.email "AutoPrFromHttpClientPython"
      git config --global user.name "AutoPrFromHttpClientPython"
      mkdir $(Build.SourcesDirectory)/typespec
      git clone -b $(HttpClientPythonBranch) https://github.com/microsoft/typespec.git $(Build.SourcesDirectory)/typespec

      mkdir $(Build.SourcesDirectory)/autorest.python
      git clone https://Azure:$(Yuchao-GitToken)@github.com/Azure/autorest.python.git $(Build.SourcesDirectory)/autorest.python
      
    displayName: clone repo

  - script: npm install
    displayName: npm install http-client-python
    workingDirectory: $(Build.SourcesDirectory)/typespec/packages/http-client-python

  - script: npm run build
    displayName: npm build http-client-python
    workingDirectory: $(Build.SourcesDirectory)/typespec/packages/http-client-python

  - script: npm pack
    displayName: npm pack http-client-python
    workingDirectory: $(Build.SourcesDirectory)/typespec/packages/http-client-python
  
  - bash: |
      AbsolutePkgPath=$(find "$(pwd)" -name "typespec-http-client-python-*" -maxdepth 1)
      echo "##vso[task.setvariable variable=AbsolutePkgPath]$AbsolutePkgPath"
    workingDirectory: $(Build.SourcesDirectory)/typespec/packages/http-client-python
    displayName: find package path

  - publish: $(AbsolutePkgPath)
    artifact: http-client-python
    condition: succeededOrFailed()

  - bash: |
      pip install -r $(YmlPath)/update-package-json-requirements.txt
      python $(YmlPath)/update-package-json.py --branch=auto-$(HttpClientPythonBranch) --build-id=$(Build.BuildId) --package-path=$(AbsolutePkgPath) --token=$(PIPELINE-TOKEN)
    workingDirectory: $(Build.SourcesDirectory)/autorest.python
    displayName: update package.json

  - bash: |
      pnpm install --no-frozen-lockfile
      pnpm build
    workingDirectory: $(Build.SourcesDirectory)/autorest.python
    displayName: pnpm install and build

  - script: |
        find test/azure/generated -type f ! -name '*apiview_mapping_python.json*' -delete
        find test/unbranded/generated -type f ! -name '*apiview_mapping_python.json*' -delete
        npm run regenerate
        git add . && git commit -m "Regenerate for typespec-python"
    workingDirectory: $(Build.SourcesDirectory)/autorest.python/packages/typespec-python
    displayName: regenerate for typespec-python

  # - bash: |
  #     source packages/autorest.python/venv/bin/activate
  #     inv regenerate
  #     black .
  #     git add . && git commit -m "Regenerate for autorest.python"
  #   workingDirectory: $(Build.SourcesDirectory)/autorest.python/packages/autorest.python
  #   displayName: regenerate for autorest.python

  - bash: |
      # git remote add azure https://github.com/Azure/autorest.python.git
      # git push azure HEAD
      git push origin HEAD
    workingDirectory: $(Build.SourcesDirectory)/autorest.python
    displayName: push commit to Azure/autorest.python
