name: autrest.python - http-client-python - ci

trigger:
  branches:
    exclude:
      - '*'

pr:
  branches:
    exclude:
      - '*'

pool:
  name: "azsdk-pool-mms-ubuntu-2004-general"
  vmImage: "MMSUbuntu20.04"

variables:
  - group: Release Secrets for GitHub
  - group: Azure SDK Auto Release Pipeline Secrets

resources:
  repositories:
    # - repository: azure-sdk-for-python
    #   type: github
    #   name: Azure/azure-sdk-for-python
    #   endpoint: azure
    #   ref: main
    - repository: autorest.python
      type: github
      name: Azure/autorest.python
      endpoint: azure
      ref: main

jobs:
- job: BuildAndCreatePr

  steps:
  - task: NodeTool@0
    displayName: 'Install Node.js 18.x'
    inputs:
      versionSpec: '18.x'

  - script: npm install -g pnpm@9.5.0
    displayName: Install pnpm 9.5.0

  - bash: |
        YmlPath=$(pwd)/eng/pipelines
        echo "##vso[task.setvariable variable=YmlPath]$YmlPath"
    displayName: find yml path

  # build and publish package for http-client-python
  - bash: |
      mkdir $(Build.SourcesDirectory)/typespec
      git clone https://$(azuresdk-github-pat)@github.com/microsoft/typespec.git $(Build.SourcesDirectory)/typespec
      cd $(Build.SourcesDirectory)/typespec
      git checkout $(HttpClientPythonBranch)
    displayName: clone microsoft/typespec

  - script: npm install
    displayName: npm install http-client-python
    workingDirectory: $(Build.SourcesDirectory)/typespec/packages/http-client-python

  - script: npm run build
    displayName: npm build http-client-python
    workingDirectory: $(Build.SourcesDirectory)/typespec/packages/http-client-python

  - script: npm pack
    displayName: npm pack http-client-python
    workingDirectory: $(Build.SourcesDirectory)/typespec/packages/http-client-python
  
  - bash: |
      AbsolutePkgPath=$(find "$(pwd)" -name "typespec-http-client-python-*" -maxdepth 1)
      echo "##vso[task.setvariable variable=AbsolutePkgPath]$AbsolutePkgPath"
    workingDirectory: $(Build.SourcesDirectory)/typespec/packages/http-client-python
    displayName: find package path

  - publish: $(AbsolutePkgPath)
    artifact: http-client-python
    condition: succeededOrFailed()

  - bash: |
      pip install $(YmlPath)/update-package-json-requirements.txt
      python $(YmlPath)/update-package-json.py --branch $(HttpClientPythonBranch) --build-id $(Build.BuildId) --package-path $(AbsolutePkgPath) --token $(PIPELINE-TOKEN)
    workingDirectory: $(Build.SourcesDirectory)/autorest.python
    displayName: update package.json

  - bash: |
      pnpm install --no-frozen-lockfile
      pnpm build
      git add .
      git commit -m "update package.json"
      git push origin HEAD

      source packages/autorest.python/venv/bin/activate
      cd $(Build.SourcesDirectory)/autorest.python/packages/typespec-python
      npm run regenerate
      cd $(Build.SourcesDirectory)/autorest.python
      git add .
      git commit -m "Regenerate for typespec-python"
      git push origin HEAD

      cd $(Build.SourcesDirectory)/autorest.python/packages/autorest.python
      inv regenerate

      cd $(Build.SourcesDirectory)/autorest.python
      black .
      git add .
      git commit -m "Regenerate for typespec-python"
      git push origin HEAD
    workingDirectory: $(Build.SourcesDirectory)/autorest.python
    displayName: regenerate and push
