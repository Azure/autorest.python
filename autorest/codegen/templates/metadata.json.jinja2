{% import 'operation_tools.jinja2' as op_tools %}
{
    "chosen_version": {{ chosen_version | tojson }},
    "total_api_version_list": {{ total_api_version_list | tojson }},
    "client": {
        "name": {{ code_model.class_name | tojson }},
        "filename": {{ ("_" + code_model.module_name + ".py") | tojson }},
        "description": {{ code_model.description | tojson }},
        "has_subscription_id": {{ "true" if "subscription_id" in code_model.global_parameters | map(attribute="serialized_name") | list else "false" }}
    },
    "config": {
        "credential": {{ code_model.options['credential'] | tojson }},
        "credential_scopes": {{ code_model.options['credential_scopes'] | tojson }},
        "package_version": {{ "true" if code_model.options['package_version'] else "false"}},
        "global_parameters": {
            "method": {
                {% for gp in code_model.global_parameters.method %}
                {{ gp.serialized_name | tojson }}: {
                    "method_signature": {{ gp.sync_method_signature | tojson }},
                    "description": {{ gp.description | tojson }},
                    "docstring_type": {{ gp.schema.docstring_type | tojson }},
                    "required": {{ gp.required | tojson }}
                }{{ "," if not loop.last else "" }}
                {% endfor %}
            },
            "constant": {
                {% for gp in code_model.global_parameters.constant %}
                {{ gp.serialized_name | tojson }}: {{ gp.schema.constant_value | tojson }}{{ "," if not loop.last else "" }}
                {% endfor %}
            }
        }
    },
    "operation_groups": {
        {% for operation_group in code_model.operation_groups %}
            {% if not operation_group.is_empty_operation_group %}
        {{ operation_group.name | tojson }}: {{ operation_group.class_name | tojson }}{{ "," if not loop.last else "" }}
            {% endif %}
        {% endfor %}
    },
    "operation_mixins": {
        {% for operation in mixin_operations %}
        {{ operation.name | tojson }} : {
            "doc": {{ op_tools.operation_docstring(operation) | tojson }},
            "signature": {{ op_tools.method_signature(operation, operation.name, False, False) | tojson }},
            "call": {{ operation.parameters.method | join(', ') | tojson }}
        }
        {% endfor %}
    }
}