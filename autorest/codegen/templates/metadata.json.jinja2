{% import 'operation_tools.jinja2' as op_tools %}
{% macro operation_call(operation) %}
{{ "async " if coroutine else "" }}def {{ operation_name }}(
{% if async_mode %}
    {% for param_signature in operation.parameters.sync_method_signature %}
    {{ param_signature }}
    {% endfor %}
    **kwargs  # type: Any
):
{% endif %}{% endmacro %}
{
    "chosen_version": {{ chosen_version | tojson }},
    "total_api_version_list": {{ total_api_version_list | tojson }},
    "client": {
        "name": {{ code_model.class_name | tojson }},
        "filename": {{ ("_" + code_model.module_name + ".py") | tojson }},
        "description": {{ code_model.description | tojson }},
        "has_subscription_id": {{ ("subscription_id" in code_model.global_parameters.method | map(attribute="subscription_id") | list) | tojson }}
    },
    "operation_groups": {
        {% for operation_group in code_model.operation_groups %}
            {% if not operation_group.is_empty_operation_group %}
        {{ operation_group.name | tojson }}: {{ operation_group.class_name | tojson }}{{ "," if not loop.last else "" }}
            {% endif %}
        {% endfor %}
    },
    "operation_mixins": {
        {% for operation in mixin_operations %}
        {{ operation.name | tojson }} : {
            "doc": {{ op_tools.operation_docstring(operation) | tojson }},
            "signature": {{ op_tools.method_signature(operation, operation.name, False, False) | tojson }},
            "call": {{ operation.parameters.method | join(', ') | tojson }}
        }
        {% endfor %}
    }
}