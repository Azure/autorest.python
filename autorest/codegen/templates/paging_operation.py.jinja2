{% import 'operation_tools.jinja2' as op_tools with context %}
{# actual template starts here #}
{% if code_model.options['tracing'] and operation.want_tracing %}
@distributed_trace
{% endif %}
{{ operation_serializer.method_signature_and_response_type_annotation(operation) }}
{% if operation.want_description_docstring %}
    {{ op_tools.description(operation, operation_serializer) | indent }}{% endif %}
{% if operation.deprecated %}
    warnings.warn('Method {{operation.name}} is deprecated', DeprecationWarning)
{% endif %}
    {% if operation.parameters.kwargs_to_pop(async_mode) %}
    {{ op_tools.serialize(operation_serializer.pop_kwargs_from_signature(operation)) | indent }}
    {% endif %}
    {{ op_tools.serialize(operation_serializer.set_up_params_for_pager(operation)) | indent }}

    return {{ operation.get_pager(async_mode) }}(
        get_next, extract_data
    )
{% if not code_model.options["metadata"] %}
{{ operation.python_name }}.metadata = {'url': '{{ request_builder.url|replace("'", "\\'") }}'}  # type: ignore
{% endif %}