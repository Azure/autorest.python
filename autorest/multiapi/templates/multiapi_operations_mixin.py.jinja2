# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
from msrest import Serializer, Deserializer
{% set imports = async_imports if async_mode else sync_imports %}
{% if imports %}
{{ imports }}
{% endif %}


class {{ client_name }}OperationsMixin(object):
{% for operation_name, metadata_sync_and_async in mixin_operations|dictsort %}

    {% set metadata = metadata_sync_and_async['async'] if async_mode else metadata_sync_and_async['sync'] %}
    {{ metadata['signature'] | indent }}        {{ metadata['doc'] | indent(8) }}
        api_version = self._get_api_version('{{ operation_name }}')
        {% for api in metadata['available_apis']|sort %}
        {% set if_statement = "if" if loop.first else "elif" %}
        {{ if_statement }} api_version == '{{ mod_to_api_version[api] }}':
            from {{ ".." if async_mode else "." }}{{ api }}{{ ".aio" if async_mode else "" }}.operations{{ "_async" if async_mode else "" }} import {{ client_name }}OperationsMixin as OperationClass
        {% endfor %}
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance._config = self._config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        return {{ "await " if async_mode and metadata['coroutine'] else "" }}mixin_instance.{{ operation_name }}({{ metadata['call'] }}{{ ", **kwargs" if metadata['call'] else "**kwargs" }})
{% endfor %}