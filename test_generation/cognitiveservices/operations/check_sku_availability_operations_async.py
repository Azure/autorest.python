# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.pipeline import ClientRawResponse
from msrest.exceptions import HttpOperationError

from .. import models
from .check_sku_availability_operations import CheckSkuAvailabilityOperations as _CheckSkuAvailabilityOperations


class CheckSkuAvailabilityOperations(_CheckSkuAvailabilityOperations):
    """CheckSkuAvailabilityOperations operations."""

    async def list_async(
            self, location, skus, kind, type, *, custom_headers=None, raw=False, **operation_config):
        """Check available SKUs.

        :param location: Resource location.
        :type location: str
        :param skus: The SKU of the resource.
        :type skus: list[str or ~cognitiveservices.models.SkuName]
        :param kind: The Kind of the resource. Possible values include:
         'Bing.Autosuggest.v7', 'Bing.CustomSearch', 'Bing.Search.v7',
         'Bing.Speech', 'Bing.SpellCheck.v7', 'ComputerVision',
         'ContentModerator', 'CustomSpeech', 'CustomVision.Prediction',
         'CustomVision.Training', 'Emotion', 'Face', 'LUIS', 'QnAMaker',
         'SpeakerRecognition', 'SpeechTranslation', 'TextAnalytics',
         'TextTranslation', 'WebLM'
        :type kind: str or ~cognitiveservices.models.Kind
        :param type: The Type of the resource.
        :type type: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: CheckSkuAvailabilityResultList or ClientRawResponse if
         raw=true
        :rtype: ~cognitiveservices.models.CheckSkuAvailabilityResultList or
         ~msrest.pipeline.ClientRawResponse
        :raises:
         :class:`HttpOperationError<msrest.exceptions.HttpOperationError>`
        """
        parameters = models.CheckSkuAvailabilityParameter(skus=skus, kind=kind, type=type)

        # Construct URL
        url = self.list_async.metadata['url']
        path_format_arguments = {
            'subscriptionId': self._serialize.url("self.config.subscription_id", self.config.subscription_id, 'str'),
            'location': self._serialize.url("location", location, 'str')
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}
        query_parameters['api-version'] = self._serialize.query("self.api_version", self.api_version, 'str')

        # Construct headers
        header_parameters = {}
        header_parameters['Accept'] = 'application/json'
        header_parameters['Content-Type'] = 'application/json; charset=utf-8'
        if custom_headers:
            header_parameters.update(custom_headers)

        # Construct body
        body_content = self._serialize.body(parameters, 'CheckSkuAvailabilityParameter')

        # Construct and send request
        request = self._client.post(url, query_parameters, header_parameters, body_content)
        response = await self._client.async_send(request, stream=False, **operation_config)

        if response.status_code not in [200]:
            raise HttpOperationError(self._deserialize, response)

        deserialized = None
        if response.status_code == 200:
            deserialized = self._deserialize('CheckSkuAvailabilityResultList', response)

        if raw:
            client_raw_response = ClientRawResponse(deserialized, response)
            return client_raw_response

        return deserialized
    list_async.metadata = {'url': '/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/checkSkuAvailability'}
