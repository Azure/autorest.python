@using AutoRest.Python.vanilla.Templates
@using System.Linq
@using AutoRest.Python
@inherits AutoRest.Python.PythonTemplate<AutoRest.Python.Model.CodeModelPy>
# coding=utf-8
# --------------------------------------------------------------------------
@Header("# ").TrimMultilineHeader()
# --------------------------------------------------------------------------
@EmptyLine
try:
@foreach (var modelType in Model.ModelTypes.OrderBy(o => o.ClassName))
  {
@:    from ._models_py3 import @modelType.Name@Model.GetExceptionNameIfExist(modelType, false)
  }
except (SyntaxError, ImportError):
@foreach (var modelType in Model.ModelTypes.OrderBy(o => o.ClassName))
  {
@:    from ._models import @modelType.Name@Model.GetExceptionNameIfExist(modelType, false)
  }
@if (Model.EnumTypes.Any())
  {
@:from ._@(Model.Name.ToPythonCase())_enums import (
  foreach (var enumType in @Model.EnumTypes.OrderBy(o => o.ClassName))
    {
    @:@(enumType.Name),
    }
@:)
  }
@EmptyLine
__all__ = [
@foreach (var modelType in Model.ModelTypes.OrderBy(o => o.ClassName))
  {
@:    '@modelType.Name'@Model.GetExceptionNameIfExist(modelType, true),
  }
@foreach (var enumType in @Model.EnumTypes)
  {
@:    '@(enumType.Name)',
  }
]
