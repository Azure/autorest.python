
schemas:
  primitives:
    -  &ref_87
      $key: components·parameters·apiversionparameter·schema
      type: string
      description: MISSING-SCHEMA-DESCRIPTION-STRING
      apiVersions:
        -
          version: '1.0'
      minLength: 1
      language:
        default:
          name: components·parameters·apiversionparameter·schema
          description: MISSING-SCHEMA-DESCRIPTION-STRING
      protocol:  {}
  objects:
    -  &ref_6
      $key: OperationListResult
      type: object
      description: Result of the request to list Storage operations. It contains a list of operations and a URL link to get the next set of results.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: value
          schema:
            $key: OperationListResult-value
            type: array
            description: List of Storage operations supported by the Storage resource provider.
            apiVersions:
              -
                version: '2019-04-01'
            elementType:  &ref_0
              $key: Operation
              type: object
              description: Storage REST API operation definition.
              apiVersions:
                -
                  version: '2019-04-01'
              properties:
                -
                  $key: name
                  schema:
                    $key: Operation-name
                    type: string
                    description: 'Operation name: {provider}/{resource}/{operation}'
                    apiVersions:
                      -
                        version: '2019-04-01'
                    language:
                      default:
                        name: Operation-name
                        description: 'Operation name: {provider}/{resource}/{operation}'
                    protocol:  {}
                  description: 'Operation name: {provider}/{resource}/{operation}'
                  serializedName: name
                  language:
                    default:
                      name: name
                      description: 'Operation name: {provider}/{resource}/{operation}'
                      uid: 'property:69'
                  protocol:  {}
                -
                  $key: display
                  schema:  &ref_1
                    $key: Operation-display
                    type: object
                    description: Display metadata associated with the operation.
                    apiVersions:
                      -
                        version: '2019-04-01'
                    properties:
                      -
                        $key: provider
                        schema:
                          $key: Operation-display-provider
                          type: string
                          description: 'Service provider: Microsoft Storage.'
                          apiVersions:
                            -
                              version: '2019-04-01'
                          language:
                            default:
                              name: Operation-display-provider
                              description: 'Service provider: Microsoft Storage.'
                          protocol:  {}
                        description: 'Service provider: Microsoft Storage.'
                        serializedName: provider
                        language:
                          default:
                            name: provider
                            description: 'Service provider: Microsoft Storage.'
                            uid: 'property:70'
                        protocol:  {}
                      -
                        $key: resource
                        schema:
                          $key: Operation-display-resource
                          type: string
                          description: Resource on which the operation is performed etc.
                          apiVersions:
                            -
                              version: '2019-04-01'
                          language:
                            default:
                              name: Operation-display-resource
                              description: Resource on which the operation is performed etc.
                          protocol:  {}
                        description: Resource on which the operation is performed etc.
                        serializedName: resource
                        language:
                          default:
                            name: resource
                            description: Resource on which the operation is performed etc.
                            uid: 'property:71'
                        protocol:  {}
                      -
                        $key: operation
                        schema:
                          $key: Operation-display-operation
                          type: string
                          description: 'Type of operation: get, read, delete, etc.'
                          apiVersions:
                            -
                              version: '2019-04-01'
                          language:
                            default:
                              name: Operation-display-operation
                              description: 'Type of operation: get, read, delete, etc.'
                          protocol:  {}
                        description: 'Type of operation: get, read, delete, etc.'
                        serializedName: operation
                        language:
                          default:
                            name: operation
                            description: 'Type of operation: get, read, delete, etc.'
                            uid: 'property:72'
                        protocol:  {}
                      -
                        $key: description
                        schema:
                          $key: Operation-display-description
                          type: string
                          description: Description of the operation.
                          apiVersions:
                            -
                              version: '2019-04-01'
                          language:
                            default:
                              name: Operation-display-description
                              description: Description of the operation.
                          protocol:  {}
                        description: Description of the operation.
                        serializedName: description
                        language:
                          default:
                            name: description
                            description: Description of the operation.
                            uid: 'property:73'
                        protocol:  {}
                    language:
                      default:
                        name: Operation-display
                        description: Display metadata associated with the operation.
                    protocol:  {}
                  description: Display metadata associated with the operation.
                  serializedName: display
                  language:
                    default:
                      name: display
                      description: Display metadata associated with the operation.
                      uid: 'property:74'
                  protocol:  {}
                -
                  $key: origin
                  schema:
                    $key: Operation-origin
                    type: string
                    description: The origin of operations.
                    apiVersions:
                      -
                        version: '2019-04-01'
                    language:
                      default:
                        name: Operation-origin
                        description: The origin of operations.
                    protocol:  {}
                  description: The origin of operations.
                  serializedName: origin
                  language:
                    default:
                      name: origin
                      description: The origin of operations.
                      uid: 'property:75'
                  protocol:  {}
                -
                  $key: properties
                  schema:  &ref_2
                    $key: OperationProperties
                    type: object
                    description: 'Properties of operation, include metric specifications.'
                    apiVersions:
                      -
                        version: '2019-04-01'
                    properties:
                      -
                        $key: serviceSpecification
                        schema:  &ref_3
                          $key: ServiceSpecification
                          type: object
                          description: 'One property of operation, include metric specifications.'
                          apiVersions:
                            -
                              version: '2019-04-01'
                          properties:
                            -
                              $key: metricSpecifications
                              schema:
                                $key: ServiceSpecification-metricSpecifications
                                type: array
                                description: Metric specifications of operation.
                                apiVersions:
                                  -
                                    version: '2019-04-01'
                                elementType:  &ref_4
                                  $key: MetricSpecification
                                  type: object
                                  description: Metric specification of operation.
                                  apiVersions:
                                    -
                                      version: '2019-04-01'
                                  properties:
                                    -
                                      $key: name
                                      schema:
                                        $key: MetricSpecification-name
                                        type: string
                                        description: Name of metric specification.
                                        apiVersions:
                                          -
                                            version: '2019-04-01'
                                        language:
                                          default:
                                            name: MetricSpecification-name
                                            description: Name of metric specification.
                                        protocol:  {}
                                      description: Name of metric specification.
                                      serializedName: name
                                      language:
                                        default:
                                          name: name
                                          description: Name of metric specification.
                                          uid: 'property:76'
                                      protocol:  {}
                                    -
                                      $key: displayName
                                      schema:
                                        $key: MetricSpecification-displayName
                                        type: string
                                        description: Display name of metric specification.
                                        apiVersions:
                                          -
                                            version: '2019-04-01'
                                        language:
                                          default:
                                            name: MetricSpecification-displayName
                                            description: Display name of metric specification.
                                        protocol:  {}
                                      description: Display name of metric specification.
                                      serializedName: displayName
                                      language:
                                        default:
                                          name: displayName
                                          description: Display name of metric specification.
                                          uid: 'property:77'
                                      protocol:  {}
                                    -
                                      $key: displayDescription
                                      schema:
                                        $key: MetricSpecification-displayDescription
                                        type: string
                                        description: Display description of metric specification.
                                        apiVersions:
                                          -
                                            version: '2019-04-01'
                                        language:
                                          default:
                                            name: MetricSpecification-displayDescription
                                            description: Display description of metric specification.
                                        protocol:  {}
                                      description: Display description of metric specification.
                                      serializedName: displayDescription
                                      language:
                                        default:
                                          name: displayDescription
                                          description: Display description of metric specification.
                                          uid: 'property:78'
                                      protocol:  {}
                                    -
                                      $key: unit
                                      schema:
                                        $key: MetricSpecification-unit
                                        type: string
                                        description: Unit could be Bytes or Count.
                                        apiVersions:
                                          -
                                            version: '2019-04-01'
                                        language:
                                          default:
                                            name: MetricSpecification-unit
                                            description: Unit could be Bytes or Count.
                                        protocol:  {}
                                      description: Unit could be Bytes or Count.
                                      serializedName: unit
                                      language:
                                        default:
                                          name: unit
                                          description: Unit could be Bytes or Count.
                                          uid: 'property:79'
                                      protocol:  {}
                                    -
                                      $key: dimensions
                                      schema:
                                        $key: MetricSpecification-dimensions
                                        type: array
                                        description: 'Dimensions of blobs, including blob type and access tier.'
                                        apiVersions:
                                          -
                                            version: '2019-04-01'
                                        elementType:  &ref_5
                                          $key: Dimension
                                          type: object
                                          description: 'Dimension of blobs, possibly be blob type or access tier.'
                                          apiVersions:
                                            -
                                              version: '2019-04-01'
                                          properties:
                                            -
                                              $key: name
                                              schema:
                                                $key: Dimension-name
                                                type: string
                                                description: Display name of dimension.
                                                apiVersions:
                                                  -
                                                    version: '2019-04-01'
                                                language:
                                                  default:
                                                    name: Dimension-name
                                                    description: Display name of dimension.
                                                protocol:  {}
                                              description: Display name of dimension.
                                              serializedName: name
                                              language:
                                                default:
                                                  name: name
                                                  description: Display name of dimension.
                                                  uid: 'property:80'
                                              protocol:  {}
                                            -
                                              $key: displayName
                                              schema:
                                                $key: Dimension-displayName
                                                type: string
                                                description: Display name of dimension.
                                                apiVersions:
                                                  -
                                                    version: '2019-04-01'
                                                language:
                                                  default:
                                                    name: Dimension-displayName
                                                    description: Display name of dimension.
                                                protocol:  {}
                                              description: Display name of dimension.
                                              serializedName: displayName
                                              language:
                                                default:
                                                  name: displayName
                                                  description: Display name of dimension.
                                                  uid: 'property:81'
                                              protocol:  {}
                                          language:
                                            default:
                                              name: Dimension
                                              description: 'Dimension of blobs, possibly be blob type or access tier.'
                                          protocol:  {}
                                        language:
                                          default:
                                            name: MetricSpecification-dimensions
                                            description: 'Dimensions of blobs, including blob type and access tier.'
                                        protocol:  {}
                                      description: 'Dimensions of blobs, including blob type and access tier.'
                                      serializedName: dimensions
                                      language:
                                        default:
                                          name: dimensions
                                          description: 'Dimensions of blobs, including blob type and access tier.'
                                          uid: 'property:82'
                                      protocol:  {}
                                    -
                                      $key: aggregationType
                                      schema:
                                        $key: MetricSpecification-aggregationType
                                        type: string
                                        description: Aggregation type could be Average.
                                        apiVersions:
                                          -
                                            version: '2019-04-01'
                                        language:
                                          default:
                                            name: MetricSpecification-aggregationType
                                            description: Aggregation type could be Average.
                                        protocol:  {}
                                      description: Aggregation type could be Average.
                                      serializedName: aggregationType
                                      language:
                                        default:
                                          name: aggregationType
                                          description: Aggregation type could be Average.
                                          uid: 'property:83'
                                      protocol:  {}
                                    -
                                      $key: fillGapWithZero
                                      schema:
                                        $key: typeForfillGapWithZero
                                        type: boolean
                                        description: The property to decide fill gap with zero or not.
                                        language:
                                          default:
                                            name: typeForfillGapWithZero
                                            description: The property to decide fill gap with zero or not.
                                        protocol:  {}
                                      description: The property to decide fill gap with zero or not.
                                      serializedName: fillGapWithZero
                                      language:
                                        default:
                                          name: fillGapWithZero
                                          description: The property to decide fill gap with zero or not.
                                          uid: 'property:84'
                                      protocol:  {}
                                    -
                                      $key: category
                                      schema:
                                        $key: MetricSpecification-category
                                        type: string
                                        description: 'The category this metric specification belong to, could be Capacity.'
                                        apiVersions:
                                          -
                                            version: '2019-04-01'
                                        language:
                                          default:
                                            name: MetricSpecification-category
                                            description: 'The category this metric specification belong to, could be Capacity.'
                                        protocol:  {}
                                      description: 'The category this metric specification belong to, could be Capacity.'
                                      serializedName: category
                                      language:
                                        default:
                                          name: category
                                          description: 'The category this metric specification belong to, could be Capacity.'
                                          uid: 'property:85'
                                      protocol:  {}
                                    -
                                      $key: resourceIdDimensionNameOverride
                                      schema:
                                        $key: MetricSpecification-resourceIdDimensionNameOverride
                                        type: string
                                        description: Account Resource Id.
                                        apiVersions:
                                          -
                                            version: '2019-04-01'
                                        language:
                                          default:
                                            name: MetricSpecification-resourceIdDimensionNameOverride
                                            description: Account Resource Id.
                                        protocol:  {}
                                      description: Account Resource Id.
                                      serializedName: resourceIdDimensionNameOverride
                                      language:
                                        default:
                                          name: resourceIdDimensionNameOverride
                                          description: Account Resource Id.
                                          uid: 'property:86'
                                      protocol:  {}
                                  language:
                                    default:
                                      name: MetricSpecification
                                      description: Metric specification of operation.
                                  protocol:  {}
                                language:
                                  default:
                                    name: ServiceSpecification-metricSpecifications
                                    description: Metric specifications of operation.
                                protocol:  {}
                              description: Metric specifications of operation.
                              serializedName: metricSpecifications
                              language:
                                default:
                                  name: metricSpecifications
                                  description: Metric specifications of operation.
                                  uid: 'property:87'
                              protocol:  {}
                          language:
                            default:
                              name: ServiceSpecification
                              description: 'One property of operation, include metric specifications.'
                          protocol:  {}
                        description: 'One property of operation, include metric specifications.'
                        serializedName: serviceSpecification
                        language:
                          default:
                            name: serviceSpecification
                            description: 'One property of operation, include metric specifications.'
                            uid: 'property:88'
                        protocol:  {}
                    language:
                      default:
                        name: OperationProperties
                        description: 'Properties of operation, include metric specifications.'
                    protocol:  {}
                  description: 'Properties of operation, include metric specifications.'
                  serializedName: properties
                  language:
                    default:
                      name: properties
                      description: 'Properties of operation, include metric specifications.'
                      uid: 'property:89'
                  protocol:  {}
              language:
                default:
                  name: Operation
                  description: Storage REST API operation definition.
              protocol:  {}
            language:
              default:
                name: OperationListResult-value
                description: List of Storage operations supported by the Storage resource provider.
            protocol:  {}
          description: List of Storage operations supported by the Storage resource provider.
          serializedName: value
          language:
            default:
              name: value
              description: List of Storage operations supported by the Storage resource provider.
              uid: 'property:90'
          protocol:  {}
      language:
        default:
          name: OperationListResult
          description: Result of the request to list Storage operations. It contains a list of operations and a URL link to get the next set of results.
      protocol:  {}
    - *ref_0
    - *ref_1
    - *ref_1
    - *ref_2
    - *ref_3
    - *ref_4
    - *ref_5
    - *ref_5
    - *ref_4
    - *ref_3
    - *ref_2
    - *ref_0
    - *ref_6
    -  &ref_8
      $key: StorageAccountCheckNameAvailabilityParameters
      type: object
      description: The parameters used to check the availability of the storage account name.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: name
          schema:
            $key: StorageAccountCheckNameAvailabilityParameters-name
            type: string
            description: The storage account name.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: StorageAccountCheckNameAvailabilityParameters-name
                description: The storage account name.
            protocol:  {}
          description: The storage account name.
          required: true
          serializedName: name
          language:
            default:
              name: name
              description: The storage account name.
              uid: 'property:91'
          protocol:  {}
        -
          $key: type
          schema:  &ref_7
            $key: Type
            choices:
              -
                name: '-each'
                description: description
                value: Microsoft.Storage/storageAccounts
            type: choice
            description: 'The type of resource, Microsoft.Storage/storageAccounts'
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: Type
                modelAsString: false
            language:
              default:
                name: Type
                description: 'The type of resource, Microsoft.Storage/storageAccounts'
            protocol:  {}
          description: 'The type of resource, Microsoft.Storage/storageAccounts'
          required: true
          serializedName: type
          language:
            default:
              name: type
              description: 'The type of resource, Microsoft.Storage/storageAccounts'
              uid: 'property:92'
          protocol:  {}
      language:
        default:
          name: StorageAccountCheckNameAvailabilityParameters
          description: The parameters used to check the availability of the storage account name.
      protocol:  {}
    - *ref_8
    -  &ref_9
      $key: SKUCapability
      type: object
      description: 'The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.'
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: name
          schema:
            $key: SKUCapability-name
            type: string
            description: 'The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.'
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: SKUCapability-name
                description: 'The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.'
            protocol:  {}
          description: 'The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.'
          readOnly: true
          serializedName: name
          language:
            default:
              name: name
              description: 'The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.'
              uid: 'property:93'
          protocol:  {}
        -
          $key: value
          schema:
            $key: SKUCapability-value
            type: string
            description: A string value to indicate states of given capability. Possibly 'true' or 'false'.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: SKUCapability-value
                description: A string value to indicate states of given capability. Possibly 'true' or 'false'.
            protocol:  {}
          description: A string value to indicate states of given capability. Possibly 'true' or 'false'.
          readOnly: true
          serializedName: value
          language:
            default:
              name: value
              description: A string value to indicate states of given capability. Possibly 'true' or 'false'.
              uid: 'property:94'
          protocol:  {}
      language:
        default:
          name: SKUCapability
          description: 'The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.'
      protocol:  {}
    - *ref_9
    -  &ref_11
      $key: Restriction
      type: object
      description: The restriction because of which SKU cannot be used.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: type
          schema:
            $key: Restriction-type
            type: string
            description: The type of restrictions. As of now only possible value for this is location.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: Restriction-type
                description: The type of restrictions. As of now only possible value for this is location.
            protocol:  {}
          description: The type of restrictions. As of now only possible value for this is location.
          readOnly: true
          serializedName: type
          language:
            default:
              name: type
              description: The type of restrictions. As of now only possible value for this is location.
              uid: 'property:95'
          protocol:  {}
        -
          $key: values
          schema:
            $key: Restriction-values
            type: array
            description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
            apiVersions:
              -
                version: '2019-04-01'
            elementType:
              $key: Restriction-valuesItem
              type: string
              description: MISSING-SCHEMA-DESCRIPTION-STRING
              apiVersions:
                -
                  version: '2019-04-01'
              language:
                default:
                  name: Restriction-valuesItem
                  description: MISSING-SCHEMA-DESCRIPTION-STRING
              protocol:  {}
            language:
              default:
                name: Restriction-values
                description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
            protocol:  {}
          description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
          readOnly: true
          serializedName: values
          language:
            default:
              name: values
              description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
              uid: 'property:96'
          protocol:  {}
        -
          $key: reasonCode
          schema:  &ref_10
            $key: ReasonCode
            choices:
              -
                name: '-each'
                description: description
                value: QuotaId
              -
                name: '-each'
                description: description
                value: NotAvailableForSubscription
            type: choice
            description: >-
              The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The
              "NotAvailableForSubscription" is related to capacity at DC.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: ReasonCode
                modelAsString: true
            language:
              default:
                name: ReasonCode
                description: >-
                  The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The
                  "NotAvailableForSubscription" is related to capacity at DC.
            protocol:  {}
          description: >-
            The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The
            "NotAvailableForSubscription" is related to capacity at DC.
          serializedName: reasonCode
          language:
            default:
              name: reasonCode
              description: >-
                The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The
                "NotAvailableForSubscription" is related to capacity at DC.
              uid: 'property:97'
          protocol:  {}
      language:
        default:
          name: Restriction
          description: The restriction because of which SKU cannot be used.
      protocol:  {}
    - *ref_11
    -  &ref_16
      $key: StorageSkuListResult
      type: object
      description: The response from the List Storage SKUs operation.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: value
          schema:
            $key: StorageSkuListResult-value
            type: array
            description: Get the list result of storage SKUs and their properties.
            apiVersions:
              -
                version: '2019-04-01'
            elementType:  &ref_15
              $key: Sku
              type: object
              description: The SKU of the storage account.
              apiVersions:
                -
                  version: '2019-04-01'
              properties:
                -
                  $key: name
                  schema:  &ref_12
                    $key: SkuName
                    choices:
                      -
                        name: '-each'
                        description: description
                        value: Standard_LRS
                      -
                        name: '-each'
                        description: description
                        value: Standard_GRS
                      -
                        name: '-each'
                        description: description
                        value: Standard_RAGRS
                      -
                        name: '-each'
                        description: description
                        value: Standard_ZRS
                      -
                        name: '-each'
                        description: description
                        value: Premium_LRS
                      -
                        name: '-each'
                        description: description
                        value: Premium_ZRS
                      -
                        name: '-each'
                        description: description
                        value: Standard_GZRS
                      -
                        name: '-each'
                        description: description
                        value: Standard_RAGZRS
                    type: choice
                    description: 'Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.'
                    apiVersions:
                      -
                        version: '2019-04-01'
                    choiceType:
                      $key: choice
                      type: string
                      description: choice
                      language:
                        default:
                          name: choice
                          description: choice
                      protocol:  {}
                    extensions:
                      x-ms-enum:
                        name: SkuName
                        modelAsString: true
                    language:
                      default:
                        name: SkuName
                        description: 'Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.'
                    protocol:  {}
                  description: 'Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.'
                  required: true
                  serializedName: name
                  language:
                    default:
                      name: name
                      description: 'Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.'
                      uid: 'property:98'
                  protocol:  {}
                -
                  $key: tier
                  schema:  &ref_13
                    $key: SkuTier
                    choices:
                      -
                        name: '-each'
                        description: description
                        value: Standard
                      -
                        name: '-each'
                        description: description
                        value: Premium
                    type: choice
                    description: Gets the SKU tier. This is based on the SKU name.
                    apiVersions:
                      -
                        version: '2019-04-01'
                    choiceType:
                      $key: choice
                      type: string
                      description: choice
                      language:
                        default:
                          name: choice
                          description: choice
                      protocol:  {}
                    extensions:
                      x-ms-enum:
                        name: SkuTier
                        modelAsString: false
                    language:
                      default:
                        name: SkuTier
                        description: Gets the SKU tier. This is based on the SKU name.
                    protocol:  {}
                  description: Gets the SKU tier. This is based on the SKU name.
                  readOnly: true
                  required: false
                  serializedName: tier
                  language:
                    default:
                      name: tier
                      description: Gets the SKU tier. This is based on the SKU name.
                      uid: 'property:99'
                  protocol:  {}
                -
                  $key: resourceType
                  schema:
                    $key: Sku-resourceType
                    type: string
                    description: 'The type of the resource, usually it is ''storageAccounts''.'
                    apiVersions:
                      -
                        version: '2019-04-01'
                    language:
                      default:
                        name: Sku-resourceType
                        description: 'The type of the resource, usually it is ''storageAccounts''.'
                    protocol:  {}
                  description: 'The type of the resource, usually it is ''storageAccounts''.'
                  readOnly: true
                  required: false
                  serializedName: resourceType
                  language:
                    default:
                      name: resourceType
                      description: 'The type of the resource, usually it is ''storageAccounts''.'
                      uid: 'property:100'
                  protocol:  {}
                -
                  $key: kind
                  schema:  &ref_14
                    $key: Kind
                    choices:
                      -
                        name: '-each'
                        description: description
                        value: Storage
                      -
                        name: '-each'
                        description: description
                        value: StorageV2
                      -
                        name: '-each'
                        description: description
                        value: BlobStorage
                      -
                        name: '-each'
                        description: description
                        value: FileStorage
                      -
                        name: '-each'
                        description: description
                        value: BlockBlobStorage
                    type: choice
                    description: Indicates the type of storage account.
                    apiVersions:
                      -
                        version: '2019-04-01'
                    choiceType:
                      $key: choice
                      type: string
                      description: choice
                      language:
                        default:
                          name: choice
                          description: choice
                      protocol:  {}
                    extensions:
                      x-ms-enum:
                        name: Kind
                        modelAsString: true
                    language:
                      default:
                        name: Kind
                        description: Indicates the type of storage account.
                    protocol:  {}
                  description: Indicates the type of storage account.
                  required: false
                  serializedName: kind
                  language:
                    default:
                      name: kind
                      description: Indicates the type of storage account.
                      uid: 'property:101'
                  protocol:  {}
                -
                  $key: locations
                  schema:
                    $key: Sku-locations
                    type: array
                    description: 'The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).'
                    apiVersions:
                      -
                        version: '2019-04-01'
                    elementType:
                      $key: Sku-locationsItem
                      type: string
                      description: MISSING-SCHEMA-DESCRIPTION-STRING
                      apiVersions:
                        -
                          version: '2019-04-01'
                      language:
                        default:
                          name: Sku-locationsItem
                          description: MISSING-SCHEMA-DESCRIPTION-STRING
                      protocol:  {}
                    language:
                      default:
                        name: Sku-locations
                        description: 'The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).'
                    protocol:  {}
                  description: 'The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).'
                  readOnly: true
                  required: false
                  serializedName: locations
                  language:
                    default:
                      name: locations
                      description: 'The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).'
                      uid: 'property:102'
                  protocol:  {}
                -
                  $key: capabilities
                  schema:
                    $key: Sku-capabilities
                    type: array
                    description: 'The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.'
                    apiVersions:
                      -
                        version: '2019-04-01'
                    elementType: *ref_9
                    language:
                      default:
                        name: Sku-capabilities
                        description: 'The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.'
                    protocol:  {}
                  description: 'The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.'
                  readOnly: true
                  required: false
                  serializedName: capabilities
                  language:
                    default:
                      name: capabilities
                      description: 'The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.'
                      uid: 'property:103'
                  protocol:  {}
                -
                  $key: restrictions
                  schema:
                    $key: Sku-restrictions
                    type: array
                    description: The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
                    apiVersions:
                      -
                        version: '2019-04-01'
                    elementType: *ref_11
                    language:
                      default:
                        name: Sku-restrictions
                        description: The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
                    protocol:  {}
                  description: The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
                  required: false
                  serializedName: restrictions
                  language:
                    default:
                      name: restrictions
                      description: The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
                      uid: 'property:104'
                  protocol:  {}
              language:
                default:
                  name: Sku
                  description: The SKU of the storage account.
              protocol:  {}
            language:
              default:
                name: StorageSkuListResult-value
                description: Get the list result of storage SKUs and their properties.
            protocol:  {}
          description: Get the list result of storage SKUs and their properties.
          readOnly: true
          serializedName: value
          language:
            default:
              name: value
              description: Get the list result of storage SKUs and their properties.
              uid: 'property:105'
          protocol:  {}
      language:
        default:
          name: StorageSkuListResult
          description: The response from the List Storage SKUs operation.
      protocol:  {}
    - *ref_15
    - *ref_15
    - *ref_16
    -  &ref_18
      $key: CheckNameAvailabilityResult
      type: object
      description: The CheckNameAvailability operation response.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: nameAvailable
          schema:
            $key: typeFornameAvailable
            type: boolean
            description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.'
            language:
              default:
                name: typeFornameAvailable
                description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.'
            protocol:  {}
          description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.'
          readOnly: true
          serializedName: nameAvailable
          language:
            default:
              name: nameAvailable
              description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.'
              uid: 'property:106'
          protocol:  {}
        -
          $key: reason
          schema:  &ref_17
            $key: Reason
            choices:
              -
                name: '-each'
                description: description
                value: AccountNameInvalid
              -
                name: '-each'
                description: description
                value: AlreadyExists
            type: choice
            description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: Reason
                modelAsString: false
            language:
              default:
                name: Reason
                description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
            protocol:  {}
          description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
          readOnly: true
          serializedName: reason
          language:
            default:
              name: reason
              description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
              uid: 'property:107'
          protocol:  {}
        -
          $key: message
          schema:
            $key: CheckNameAvailabilityResult-message
            type: string
            description: Gets an error message explaining the Reason value in more detail.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: CheckNameAvailabilityResult-message
                description: Gets an error message explaining the Reason value in more detail.
            protocol:  {}
          description: Gets an error message explaining the Reason value in more detail.
          readOnly: true
          serializedName: message
          language:
            default:
              name: message
              description: Gets an error message explaining the Reason value in more detail.
              uid: 'property:108'
          protocol:  {}
      language:
        default:
          name: CheckNameAvailabilityResult
          description: The CheckNameAvailability operation response.
      protocol:  {}
    - *ref_18
    -  &ref_19
      $key: CustomDomain
      type: object
      description: The custom domain assigned to this storage account. This can be set via Update.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: name
          schema:
            $key: CustomDomain-name
            type: string
            description: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: CustomDomain-name
                description: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
            protocol:  {}
          description: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
          required: true
          serializedName: name
          language:
            default:
              name: name
              description: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
              uid: 'property:109'
          protocol:  {}
        -
          $key: useSubDomainName
          schema:
            $key: typeForuseSubDomainName
            type: boolean
            description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
            language:
              default:
                name: typeForuseSubDomainName
                description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
            protocol:  {}
          description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
          required: false
          serializedName: useSubDomainName
          language:
            default:
              name: useSubDomainName
              description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
              uid: 'property:110'
          protocol:  {}
      language:
        default:
          name: CustomDomain
          description: The custom domain assigned to this storage account. This can be set via Update.
      protocol:  {}
    - *ref_19
    -  &ref_20
      $key: EncryptionService
      type: object
      description: A service that allows server-side encryption to be used.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: enabled
          schema:
            $key: typeForenabled
            type: boolean
            description: A boolean indicating whether or not the service encrypts the data as it is stored.
            language:
              default:
                name: typeForenabled
                description: A boolean indicating whether or not the service encrypts the data as it is stored.
            protocol:  {}
          description: A boolean indicating whether or not the service encrypts the data as it is stored.
          serializedName: enabled
          language:
            default:
              name: enabled
              description: A boolean indicating whether or not the service encrypts the data as it is stored.
              uid: 'property:111'
          protocol:  {}
        -
          $key: lastEnabledTime
          schema:
            $key: EncryptionService-lastEnabledTime
            type: date-time
            format: date-time
            description: >-
              Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough
              estimate.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: EncryptionService-lastEnabledTime
                description: >-
                  Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a
                  rough estimate.
            protocol:  {}
          description: >-
            Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough
            estimate.
          readOnly: true
          serializedName: lastEnabledTime
          language:
            default:
              name: lastEnabledTime
              description: >-
                Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a
                rough estimate.
              uid: 'property:112'
          protocol:  {}
      language:
        default:
          name: EncryptionService
          description: A service that allows server-side encryption to be used.
      protocol:  {}
    - *ref_20
    -  &ref_21
      $key: EncryptionServices
      type: object
      description: A list of services that support encryption.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: blob
          schema: *ref_20
          description: A service that allows server-side encryption to be used.
          serializedName: blob
          language:
            default:
              name: blob
              description: A service that allows server-side encryption to be used.
              uid: 'property:113'
          protocol:  {}
        -
          $key: file
          schema: *ref_20
          description: A service that allows server-side encryption to be used.
          serializedName: file
          language:
            default:
              name: file
              description: A service that allows server-side encryption to be used.
              uid: 'property:114'
          protocol:  {}
        -
          $key: table
          schema: *ref_20
          description: A service that allows server-side encryption to be used.
          serializedName: table
          language:
            default:
              name: table
              description: A service that allows server-side encryption to be used.
              uid: 'property:115'
          protocol:  {}
        -
          $key: queue
          schema: *ref_20
          description: A service that allows server-side encryption to be used.
          serializedName: queue
          language:
            default:
              name: queue
              description: A service that allows server-side encryption to be used.
              uid: 'property:116'
          protocol:  {}
      language:
        default:
          name: EncryptionServices
          description: A list of services that support encryption.
      protocol:  {}
    - *ref_21
    -  &ref_22
      $key: KeyVaultProperties
      type: object
      description: Properties of key vault.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: keyname
          schema:
            $key: KeyVaultProperties-keyname
            type: string
            description: The name of KeyVault key.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: KeyName
            language:
              default:
                name: KeyVaultProperties-keyname
                description: The name of KeyVault key.
            protocol:  {}
          description: The name of KeyVault key.
          serializedName: keyname
          language:
            default:
              name: keyname
              description: The name of KeyVault key.
              uid: 'property:117'
          protocol:  {}
        -
          $key: keyversion
          schema:
            $key: KeyVaultProperties-keyversion
            type: string
            description: The version of KeyVault key.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: KeyVersion
            language:
              default:
                name: KeyVaultProperties-keyversion
                description: The version of KeyVault key.
            protocol:  {}
          description: The version of KeyVault key.
          serializedName: keyversion
          language:
            default:
              name: keyversion
              description: The version of KeyVault key.
              uid: 'property:118'
          protocol:  {}
        -
          $key: keyvaulturi
          schema:
            $key: KeyVaultProperties-keyvaulturi
            type: string
            description: The Uri of KeyVault.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: KeyVaultUri
            language:
              default:
                name: KeyVaultProperties-keyvaulturi
                description: The Uri of KeyVault.
            protocol:  {}
          description: The Uri of KeyVault.
          serializedName: keyvaulturi
          language:
            default:
              name: keyvaulturi
              description: The Uri of KeyVault.
              uid: 'property:119'
          protocol:  {}
      language:
        default:
          name: KeyVaultProperties
          description: Properties of key vault.
      protocol:  {}
    - *ref_22
    -  &ref_24
      $key: Encryption
      type: object
      description: The encryption settings on the storage account.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: services
          schema: *ref_21
          description: A list of services that support encryption.
          required: false
          serializedName: services
          language:
            default:
              name: services
              description: A list of services that support encryption.
              uid: 'property:120'
          protocol:  {}
        -
          $key: keySource
          schema:  &ref_23
            $key: KeySource
            choices:
              -
                name: '-each'
                description: description
                value: Microsoft.Storage
              -
                name: '-each'
                description: description
                value: Microsoft.Keyvault
            type: choice
            description: 'The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault'
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            defaultValue: Microsoft.Storage
            extensions:
              x-ms-enum:
                name: KeySource
                modelAsString: true
            language:
              default:
                name: KeySource
                description: 'The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault'
            protocol:  {}
          description: 'The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault'
          required: true
          serializedName: keySource
          language:
            default:
              name: keySource
              description: 'The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault'
              uid: 'property:121'
          protocol:  {}
        -
          $key: keyvaultproperties
          schema: *ref_22
          description: Properties of key vault.
          required: false
          serializedName: keyvaultproperties
          language:
            default:
              name: keyvaultproperties
              description: Properties of key vault.
              uid: 'property:122'
          protocol:  {}
      language:
        default:
          name: Encryption
          description: The encryption settings on the storage account.
      protocol:  {}
    - *ref_24
    -  &ref_27
      $key: VirtualNetworkRule
      type: object
      description: Virtual Network rule.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: id
          schema:
            $key: VirtualNetworkRule-id
            type: string
            description: 'Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: VirtualNetworkResourceId
            language:
              default:
                name: VirtualNetworkRule-id
                description: 'Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
            protocol:  {}
          description: 'Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
          required: true
          serializedName: id
          language:
            default:
              name: id
              description: 'Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
              uid: 'property:123'
          protocol:  {}
        -
          $key: action
          schema:  &ref_25
            $key: Action
            choices:
              -
                name: '-each'
                description: description
                value: Allow
            type: choice
            description: The action of virtual network rule.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            defaultValue: Allow
            extensions:
              x-ms-enum:
                name: Action
                modelAsString: false
            language:
              default:
                name: Action
                description: The action of virtual network rule.
            protocol:  {}
          description: The action of virtual network rule.
          required: false
          serializedName: action
          language:
            default:
              name: action
              description: The action of virtual network rule.
              uid: 'property:124'
          protocol:  {}
        -
          $key: state
          schema:  &ref_26
            $key: State
            choices:
              -
                name: '-each'
                description: description
                value: provisioning
              -
                name: '-each'
                description: description
                value: deprovisioning
              -
                name: '-each'
                description: description
                value: succeeded
              -
                name: '-each'
                description: description
                value: failed
              -
                name: '-each'
                description: description
                value: networkSourceDeleted
            type: choice
            description: Gets the state of virtual network rule.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: State
                modelAsString: false
            language:
              default:
                name: State
                description: Gets the state of virtual network rule.
            protocol:  {}
          description: Gets the state of virtual network rule.
          required: false
          serializedName: state
          language:
            default:
              name: state
              description: Gets the state of virtual network rule.
              uid: 'property:125'
          protocol:  {}
      language:
        default:
          name: VirtualNetworkRule
          description: Virtual Network rule.
      protocol:  {}
    - *ref_27
    -  &ref_28
      $key: IPRule
      type: object
      description: IP rule with specific IP or IP range in CIDR format.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: value
          schema:
            $key: IPRule-value
            type: string
            description: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: IPAddressOrRange
            language:
              default:
                name: IPRule-value
                description: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
            protocol:  {}
          description: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
          required: true
          serializedName: value
          language:
            default:
              name: value
              description: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
              uid: 'property:126'
          protocol:  {}
        -
          $key: action
          schema: *ref_25
          description: The action of virtual network rule.
          required: false
          serializedName: action
          language:
            default:
              name: action
              description: The action of virtual network rule.
              uid: 'property:127'
          protocol:  {}
      language:
        default:
          name: IPRule
          description: IP rule with specific IP or IP range in CIDR format.
      protocol:  {}
    - *ref_28
    -  &ref_31
      $key: NetworkRuleSet
      type: object
      description: Network rule set
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: bypass
          schema:  &ref_29
            $key: Bypass
            choices:
              -
                name: '-each'
                description: description
                value: None
              -
                name: '-each'
                description: description
                value: Logging
              -
                name: '-each'
                description: description
                value: Metrics
              -
                name: '-each'
                description: description
                value: AzureServices
            type: choice
            description: 'Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.'
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            defaultValue: AzureServices
            extensions:
              x-ms-client-name: Bypass
              x-ms-enum:
                name: Bypass
                modelAsString: true
            language:
              default:
                name: Bypass
                description: 'Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.'
            protocol:  {}
          description: 'Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.'
          required: false
          serializedName: bypass
          language:
            default:
              name: bypass
              description: 'Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.'
              uid: 'property:128'
          protocol:  {}
        -
          $key: virtualNetworkRules
          schema:
            $key: NetworkRuleSet-virtualNetworkRules
            type: array
            description: Sets the virtual network rules
            apiVersions:
              -
                version: '2019-04-01'
            elementType: *ref_27
            language:
              default:
                name: NetworkRuleSet-virtualNetworkRules
                description: Sets the virtual network rules
            protocol:  {}
          description: Sets the virtual network rules
          required: false
          serializedName: virtualNetworkRules
          language:
            default:
              name: virtualNetworkRules
              description: Sets the virtual network rules
              uid: 'property:129'
          protocol:  {}
        -
          $key: ipRules
          schema:
            $key: NetworkRuleSet-ipRules
            type: array
            description: Sets the IP ACL rules
            apiVersions:
              -
                version: '2019-04-01'
            elementType: *ref_28
            language:
              default:
                name: NetworkRuleSet-ipRules
                description: Sets the IP ACL rules
            protocol:  {}
          description: Sets the IP ACL rules
          required: false
          serializedName: ipRules
          language:
            default:
              name: ipRules
              description: Sets the IP ACL rules
              uid: 'property:130'
          protocol:  {}
        -
          $key: defaultAction
          schema:  &ref_30
            $key: DefaultAction
            choices:
              -
                name: '-each'
                description: description
                value: Allow
              -
                name: '-each'
                description: description
                value: Deny
            type: choice
            description: Specifies the default action of allow or deny when no other rules match.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            defaultValue: Allow
            extensions:
              x-ms-enum:
                name: DefaultAction
                modelAsString: false
            language:
              default:
                name: DefaultAction
                description: Specifies the default action of allow or deny when no other rules match.
            protocol:  {}
          description: Specifies the default action of allow or deny when no other rules match.
          required: true
          serializedName: defaultAction
          language:
            default:
              name: defaultAction
              description: Specifies the default action of allow or deny when no other rules match.
              uid: 'property:131'
          protocol:  {}
      language:
        default:
          name: NetworkRuleSet
          description: Network rule set
      protocol:  {}
    - *ref_31
    -  &ref_33
      $key: AzureFilesIdentityBasedAuthentication
      type: object
      description: Settings for Azure Files identity based authentication.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: directoryServiceOptions
          schema:  &ref_32
            $key: DirectoryServiceOptions
            choices:
              -
                name: '-each'
                description: description
                value: None
              -
                name: '-each'
                description: description
                value: AADDS
            type: choice
            description: Indicates the directory service used.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: DirectoryServiceOptions
                modelAsString: true
            language:
              default:
                name: DirectoryServiceOptions
                description: Indicates the directory service used.
            protocol:  {}
          description: Indicates the directory service used.
          required: true
          serializedName: directoryServiceOptions
          language:
            default:
              name: directoryServiceOptions
              description: Indicates the directory service used.
              uid: 'property:132'
          protocol:  {}
      language:
        default:
          name: AzureFilesIdentityBasedAuthentication
          description: Settings for Azure Files identity based authentication.
      protocol:  {}
    - *ref_33
    -  &ref_35
      $key: StorageAccountPropertiesCreateParameters
      type: object
      description: The parameters used to create the storage account.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: customDomain
          schema: *ref_19
          description: The custom domain assigned to this storage account. This can be set via Update.
          serializedName: customDomain
          language:
            default:
              name: customDomain
              description: The custom domain assigned to this storage account. This can be set via Update.
              uid: 'property:133'
          protocol:  {}
        -
          $key: encryption
          schema: *ref_24
          description: The encryption settings on the storage account.
          serializedName: encryption
          language:
            default:
              name: encryption
              description: The encryption settings on the storage account.
              uid: 'property:134'
          protocol:  {}
        -
          $key: networkAcls
          schema: *ref_31
          description: Network rule set
          serializedName: networkAcls
          language:
            default:
              name: networkAcls
              description: Network rule set
              uid: 'property:135'
          protocol:  {}
        -
          $key: accessTier
          schema:  &ref_34
            $key: AccessTier
            choices:
              -
                name: '-each'
                description: description
                value: Hot
              -
                name: '-each'
                description: description
                value: Cool
            type: choice
            description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: AccessTier
                modelAsString: false
            language:
              default:
                name: AccessTier
                description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
            protocol:  {}
          description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
          serializedName: accessTier
          language:
            default:
              name: accessTier
              description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
              uid: 'property:136'
          protocol:  {}
        -
          $key: azureFilesIdentityBasedAuthentication
          schema: *ref_33
          description: Settings for Azure Files identity based authentication.
          serializedName: azureFilesIdentityBasedAuthentication
          language:
            default:
              name: azureFilesIdentityBasedAuthentication
              description: Settings for Azure Files identity based authentication.
              uid: 'property:137'
          protocol:  {}
        -
          $key: supportsHttpsTrafficOnly
          schema:
            $key: typeForsupportsHttpsTrafficOnly
            type: boolean
            description: Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.
            extensions:
              x-ms-client-name: EnableHttpsTrafficOnly
            language:
              default:
                name: typeForsupportsHttpsTrafficOnly
                description: Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.
            protocol:  {}
          description: Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.
          serializedName: supportsHttpsTrafficOnly
          language:
            default:
              name: supportsHttpsTrafficOnly
              description: Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.
              uid: 'property:138'
          protocol:  {}
        -
          $key: isHnsEnabled
          schema:
            $key: typeForisHnsEnabled
            type: boolean
            description: Account HierarchicalNamespace enabled if sets to true.
            extensions:
              x-ms-client-name: IsHnsEnabled
            language:
              default:
                name: typeForisHnsEnabled
                description: Account HierarchicalNamespace enabled if sets to true.
            protocol:  {}
          description: Account HierarchicalNamespace enabled if sets to true.
          serializedName: isHnsEnabled
          language:
            default:
              name: isHnsEnabled
              description: Account HierarchicalNamespace enabled if sets to true.
              uid: 'property:139'
          protocol:  {}
      language:
        default:
          name: StorageAccountPropertiesCreateParameters
          description: The parameters used to create the storage account.
      protocol:  {}
    - *ref_35
    -  &ref_37
      $key: Identity
      type: object
      description: Identity for the resource.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: principalId
          schema:
            $key: Identity-principalId
            type: string
            description: The principal ID of resource identity.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: Identity-principalId
                description: The principal ID of resource identity.
            protocol:  {}
          description: The principal ID of resource identity.
          readOnly: true
          required: false
          serializedName: principalId
          language:
            default:
              name: principalId
              description: The principal ID of resource identity.
              uid: 'property:140'
          protocol:  {}
        -
          $key: tenantId
          schema:
            $key: Identity-tenantId
            type: string
            description: The tenant ID of resource.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: Identity-tenantId
                description: The tenant ID of resource.
            protocol:  {}
          description: The tenant ID of resource.
          readOnly: true
          required: false
          serializedName: tenantId
          language:
            default:
              name: tenantId
              description: The tenant ID of resource.
              uid: 'property:141'
          protocol:  {}
        -
          $key: type
          schema:  &ref_36
            $key: IdentityType
            choices:
              -
                name: '-each'
                description: description
                value: SystemAssigned
            type: choice
            description: The identity type.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: IdentityType
                modelAsString: false
            language:
              default:
                name: IdentityType
                description: The identity type.
            protocol:  {}
          description: The identity type.
          required: true
          serializedName: type
          language:
            default:
              name: type
              description: The identity type.
              uid: 'property:142'
          protocol:  {}
      language:
        default:
          name: Identity
          description: Identity for the resource.
      protocol:  {}
    - *ref_37
    -  &ref_38
      $key: StorageAccountCreateParameters
      type: object
      description: The parameters used when creating a storage account.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: sku
          schema: *ref_15
          description: The SKU of the storage account.
          required: true
          serializedName: sku
          language:
            default:
              name: sku
              description: The SKU of the storage account.
              uid: 'property:143'
          protocol:  {}
        -
          $key: kind
          schema: *ref_14
          description: Indicates the type of storage account.
          required: true
          serializedName: kind
          language:
            default:
              name: kind
              description: Indicates the type of storage account.
              uid: 'property:144'
          protocol:  {}
        -
          $key: location
          schema:
            $key: StorageAccountCreateParameters-location
            type: string
            description: >-
              Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is
              created, but if an identical geo region is specified on update, the request will succeed.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: StorageAccountCreateParameters-location
                description: >-
                  Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it
                  is created, but if an identical geo region is specified on update, the request will succeed.
            protocol:  {}
          description: >-
            Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is
            created, but if an identical geo region is specified on update, the request will succeed.
          required: true
          serializedName: location
          language:
            default:
              name: location
              description: >-
                Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is
                created, but if an identical geo region is specified on update, the request will succeed.
              uid: 'property:145'
          protocol:  {}
        -
          $key: tags
          schema:  &ref_79
            $key: StorageAccountCreateParameters-tags
            type: dictionary
            description: >-
              Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have
              a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
            elementType:
              $key: components·schemas·storageaccountcreateparameters·properties·tags·additionalproperties
              type: string
              description: MISSING-SCHEMA-DESCRIPTION-STRING
              apiVersions:
                -
                  version: '2019-04-01'
              language:
                default:
                  name: components·schemas·storageaccountcreateparameters·properties·tags·additionalproperties
                  description: MISSING-SCHEMA-DESCRIPTION-STRING
              protocol:  {}
            language:
              default:
                name: StorageAccountCreateParameters-tags
                description: >-
                  Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must
                  have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
            protocol:  {}
          description: >-
            Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a
            key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
          required: false
          serializedName: tags
          language:
            default:
              name: tags
              description: >-
                Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must
                have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
              uid: 'property:146'
          protocol:  {}
        -
          $key: identity
          schema: *ref_37
          description: Identity for the resource.
          required: false
          serializedName: identity
          language:
            default:
              name: identity
              description: Identity for the resource.
              uid: 'property:147'
          protocol:  {}
        -
          $key: properties
          schema: *ref_35
          description: The parameters used to create the storage account.
          required: false
          serializedName: properties
          language:
            default:
              name: properties
              description: The parameters used to create the storage account.
              uid: 'property:148'
          protocol:  {}
      language:
        default:
          name: StorageAccountCreateParameters
          description: The parameters used when creating a storage account.
      protocol:  {}
    - *ref_38
    -  &ref_39
      $key: Endpoints
      type: object
      description: 'The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.'
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: blob
          schema:
            $key: Endpoints-blob
            type: string
            description: Gets the blob endpoint.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: Endpoints-blob
                description: Gets the blob endpoint.
            protocol:  {}
          description: Gets the blob endpoint.
          readOnly: true
          serializedName: blob
          language:
            default:
              name: blob
              description: Gets the blob endpoint.
              uid: 'property:149'
          protocol:  {}
        -
          $key: queue
          schema:
            $key: Endpoints-queue
            type: string
            description: Gets the queue endpoint.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: Endpoints-queue
                description: Gets the queue endpoint.
            protocol:  {}
          description: Gets the queue endpoint.
          readOnly: true
          serializedName: queue
          language:
            default:
              name: queue
              description: Gets the queue endpoint.
              uid: 'property:150'
          protocol:  {}
        -
          $key: table
          schema:
            $key: Endpoints-table
            type: string
            description: Gets the table endpoint.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: Endpoints-table
                description: Gets the table endpoint.
            protocol:  {}
          description: Gets the table endpoint.
          readOnly: true
          serializedName: table
          language:
            default:
              name: table
              description: Gets the table endpoint.
              uid: 'property:151'
          protocol:  {}
        -
          $key: file
          schema:
            $key: Endpoints-file
            type: string
            description: Gets the file endpoint.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: Endpoints-file
                description: Gets the file endpoint.
            protocol:  {}
          description: Gets the file endpoint.
          readOnly: true
          serializedName: file
          language:
            default:
              name: file
              description: Gets the file endpoint.
              uid: 'property:152'
          protocol:  {}
        -
          $key: web
          schema:
            $key: Endpoints-web
            type: string
            description: Gets the web endpoint.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: Endpoints-web
                description: Gets the web endpoint.
            protocol:  {}
          description: Gets the web endpoint.
          readOnly: true
          serializedName: web
          language:
            default:
              name: web
              description: Gets the web endpoint.
              uid: 'property:153'
          protocol:  {}
        -
          $key: dfs
          schema:
            $key: Endpoints-dfs
            type: string
            description: Gets the dfs endpoint.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: Endpoints-dfs
                description: Gets the dfs endpoint.
            protocol:  {}
          description: Gets the dfs endpoint.
          readOnly: true
          serializedName: dfs
          language:
            default:
              name: dfs
              description: Gets the dfs endpoint.
              uid: 'property:154'
          protocol:  {}
      language:
        default:
          name: Endpoints
          description: 'The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.'
      protocol:  {}
    - *ref_39
    -  &ref_41
      $key: GeoReplicationStats
      type: object
      description: 'Statistics related to replication for storage account''s Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.'
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: status
          schema:  &ref_40
            $key: GeoReplicationStatus
            choices:
              -
                name: '-each'
                description: description
                value: Live
              -
                name: '-each'
                description: description
                value: Bootstrap
              -
                name: '-each'
                description: description
                value: Unavailable
            type: choice
            description: >-
              The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary
              location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: GeoReplicationStatus
                modelAsString: true
            language:
              default:
                name: GeoReplicationStatus
                description: >-
                  The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary
                  location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
            protocol:  {}
          description: >-
            The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary
            location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
          readOnly: true
          serializedName: status
          language:
            default:
              name: status
              description: >-
                The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary
                location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
              uid: 'property:155'
          protocol:  {}
        -
          $key: lastSyncTime
          schema:
            $key: GeoReplicationStats-lastSyncTime
            type: date-time
            format: date-time
            description: >-
              All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value
              of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: GeoReplicationStats-lastSyncTime
                description: >-
                  All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if
                  value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
            protocol:  {}
          description: >-
            All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value
            of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
          readOnly: true
          serializedName: lastSyncTime
          language:
            default:
              name: lastSyncTime
              description: >-
                All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if
                value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
              uid: 'property:156'
          protocol:  {}
        -
          $key: canFailover
          schema:
            $key: typeForcanFailover
            type: boolean
            description: A boolean flag which indicates whether or not account failover is supported for the account.
            language:
              default:
                name: typeForcanFailover
                description: A boolean flag which indicates whether or not account failover is supported for the account.
            protocol:  {}
          description: A boolean flag which indicates whether or not account failover is supported for the account.
          readOnly: true
          serializedName: canFailover
          language:
            default:
              name: canFailover
              description: A boolean flag which indicates whether or not account failover is supported for the account.
              uid: 'property:157'
          protocol:  {}
      language:
        default:
          name: GeoReplicationStats
          description: 'Statistics related to replication for storage account''s Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.'
      protocol:  {}
    - *ref_41
    -  &ref_44
      $key: StorageAccountProperties
      type: object
      description: Properties of the storage account.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: provisioningState
          schema:  &ref_42
            $key: ProvisioningState
            choices:
              -
                name: '-each'
                description: description
                value: Creating
              -
                name: '-each'
                description: description
                value: ResolvingDNS
              -
                name: '-each'
                description: description
                value: Succeeded
            type: choice
            description: Gets the status of the storage account at the time the operation was called.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: ProvisioningState
                modelAsString: false
            language:
              default:
                name: ProvisioningState
                description: Gets the status of the storage account at the time the operation was called.
            protocol:  {}
          description: Gets the status of the storage account at the time the operation was called.
          readOnly: true
          serializedName: provisioningState
          language:
            default:
              name: provisioningState
              description: Gets the status of the storage account at the time the operation was called.
              uid: 'property:158'
          protocol:  {}
        -
          $key: primaryEndpoints
          schema: *ref_39
          description: 'The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.'
          serializedName: primaryEndpoints
          language:
            default:
              name: primaryEndpoints
              description: 'The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.'
              uid: 'property:159'
          protocol:  {}
        -
          $key: primaryLocation
          schema:
            $key: StorageAccountProperties-primaryLocation
            type: string
            description: Gets the location of the primary data center for the storage account.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: StorageAccountProperties-primaryLocation
                description: Gets the location of the primary data center for the storage account.
            protocol:  {}
          description: Gets the location of the primary data center for the storage account.
          readOnly: true
          serializedName: primaryLocation
          language:
            default:
              name: primaryLocation
              description: Gets the location of the primary data center for the storage account.
              uid: 'property:160'
          protocol:  {}
        -
          $key: statusOfPrimary
          schema:  &ref_43
            $key: AccountStatus
            choices:
              -
                name: '-each'
                description: description
                value: available
              -
                name: '-each'
                description: description
                value: unavailable
            type: choice
            description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: AccountStatus
                modelAsString: false
            language:
              default:
                name: AccountStatus
                description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
            protocol:  {}
          description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
          readOnly: true
          serializedName: statusOfPrimary
          language:
            default:
              name: statusOfPrimary
              description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
              uid: 'property:161'
          protocol:  {}
        -
          $key: lastGeoFailoverTime
          schema:
            $key: StorageAccountProperties-lastGeoFailoverTime
            type: date-time
            format: date-time
            description: >-
              Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if
              the accountType is Standard_GRS or Standard_RAGRS.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: StorageAccountProperties-lastGeoFailoverTime
                description: >-
                  Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available
                  if the accountType is Standard_GRS or Standard_RAGRS.
            protocol:  {}
          description: >-
            Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the
            accountType is Standard_GRS or Standard_RAGRS.
          readOnly: true
          serializedName: lastGeoFailoverTime
          language:
            default:
              name: lastGeoFailoverTime
              description: >-
                Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if
                the accountType is Standard_GRS or Standard_RAGRS.
              uid: 'property:162'
          protocol:  {}
        -
          $key: secondaryLocation
          schema:
            $key: StorageAccountProperties-secondaryLocation
            type: string
            description: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: StorageAccountProperties-secondaryLocation
                description: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
            protocol:  {}
          description: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
          readOnly: true
          serializedName: secondaryLocation
          language:
            default:
              name: secondaryLocation
              description: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
              uid: 'property:163'
          protocol:  {}
        -
          $key: statusOfSecondary
          schema: *ref_43
          description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
          readOnly: true
          serializedName: statusOfSecondary
          language:
            default:
              name: statusOfSecondary
              description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
              uid: 'property:164'
          protocol:  {}
        -
          $key: creationTime
          schema:
            $key: StorageAccountProperties-creationTime
            type: date-time
            format: date-time
            description: Gets the creation date and time of the storage account in UTC.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: StorageAccountProperties-creationTime
                description: Gets the creation date and time of the storage account in UTC.
            protocol:  {}
          description: Gets the creation date and time of the storage account in UTC.
          readOnly: true
          serializedName: creationTime
          language:
            default:
              name: creationTime
              description: Gets the creation date and time of the storage account in UTC.
              uid: 'property:165'
          protocol:  {}
        -
          $key: customDomain
          schema: *ref_19
          description: The custom domain assigned to this storage account. This can be set via Update.
          serializedName: customDomain
          language:
            default:
              name: customDomain
              description: The custom domain assigned to this storage account. This can be set via Update.
              uid: 'property:166'
          protocol:  {}
        -
          $key: secondaryEndpoints
          schema: *ref_39
          description: 'The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.'
          serializedName: secondaryEndpoints
          language:
            default:
              name: secondaryEndpoints
              description: 'The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.'
              uid: 'property:167'
          protocol:  {}
        -
          $key: encryption
          schema: *ref_24
          description: The encryption settings on the storage account.
          serializedName: encryption
          language:
            default:
              name: encryption
              description: The encryption settings on the storage account.
              uid: 'property:168'
          protocol:  {}
        -
          $key: accessTier
          schema: *ref_34
          description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
          serializedName: accessTier
          language:
            default:
              name: accessTier
              description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
              uid: 'property:169'
          protocol:  {}
        -
          $key: azureFilesIdentityBasedAuthentication
          schema: *ref_33
          description: Settings for Azure Files identity based authentication.
          serializedName: azureFilesIdentityBasedAuthentication
          language:
            default:
              name: azureFilesIdentityBasedAuthentication
              description: Settings for Azure Files identity based authentication.
              uid: 'property:170'
          protocol:  {}
        -
          $key: supportsHttpsTrafficOnly
          schema:
            $key: typeForsupportsHttpsTrafficOnly
            type: boolean
            description: Allows https traffic only to storage service if sets to true.
            extensions:
              x-ms-client-name: EnableHttpsTrafficOnly
            language:
              default:
                name: typeForsupportsHttpsTrafficOnly
                description: Allows https traffic only to storage service if sets to true.
            protocol:  {}
          description: Allows https traffic only to storage service if sets to true.
          serializedName: supportsHttpsTrafficOnly
          language:
            default:
              name: supportsHttpsTrafficOnly
              description: Allows https traffic only to storage service if sets to true.
              uid: 'property:171'
          protocol:  {}
        -
          $key: networkAcls
          schema: *ref_31
          description: Network rule set
          serializedName: networkAcls
          language:
            default:
              name: networkAcls
              description: Network rule set
              uid: 'property:172'
          protocol:  {}
        -
          $key: isHnsEnabled
          schema:
            $key: typeForisHnsEnabled
            type: boolean
            description: Account HierarchicalNamespace enabled if sets to true.
            extensions:
              x-ms-client-name: IsHnsEnabled
            language:
              default:
                name: typeForisHnsEnabled
                description: Account HierarchicalNamespace enabled if sets to true.
            protocol:  {}
          description: Account HierarchicalNamespace enabled if sets to true.
          serializedName: isHnsEnabled
          language:
            default:
              name: isHnsEnabled
              description: Account HierarchicalNamespace enabled if sets to true.
              uid: 'property:173'
          protocol:  {}
        -
          $key: geoReplicationStats
          schema: *ref_41
          description: 'Statistics related to replication for storage account''s Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.'
          serializedName: geoReplicationStats
          language:
            default:
              name: geoReplicationStats
              description: 'Statistics related to replication for storage account''s Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.'
              uid: 'property:174'
          protocol:  {}
        -
          $key: failoverInProgress
          schema:
            $key: typeForfailoverInProgress
            type: boolean
            description: 'If the failover is in progress, the value will be true, otherwise, it will be null.'
            extensions:
              x-ms-client-name: FailoverInProgress
            language:
              default:
                name: typeForfailoverInProgress
                description: 'If the failover is in progress, the value will be true, otherwise, it will be null.'
            protocol:  {}
          description: 'If the failover is in progress, the value will be true, otherwise, it will be null.'
          readOnly: true
          serializedName: failoverInProgress
          language:
            default:
              name: failoverInProgress
              description: 'If the failover is in progress, the value will be true, otherwise, it will be null.'
              uid: 'property:175'
          protocol:  {}
      language:
        default:
          name: StorageAccountProperties
          description: Properties of the storage account.
      protocol:  {}
    - *ref_44
    -  &ref_45
      $key: Resource
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        -
          version: '1.0'
      properties:
        -
          $key: id
          schema:
            $key: Resource-id
            type: string
            description: 'Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            apiVersions:
              -
                version: '1.0'
            language:
              default:
                name: Resource-id
                description: 'Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            protocol:  {}
          description: 'Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
          readOnly: true
          serializedName: id
          language:
            default:
              name: id
              description: 'Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
              uid: 'property:176'
          protocol:  {}
        -
          $key: name
          schema:
            $key: Resource-name
            type: string
            description: The name of the resource
            apiVersions:
              -
                version: '1.0'
            language:
              default:
                name: Resource-name
                description: The name of the resource
            protocol:  {}
          description: The name of the resource
          readOnly: true
          serializedName: name
          language:
            default:
              name: name
              description: The name of the resource
              uid: 'property:177'
          protocol:  {}
        -
          $key: type
          schema:
            $key: Resource-type
            type: string
            description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
            apiVersions:
              -
                version: '1.0'
            language:
              default:
                name: Resource-type
                description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
            protocol:  {}
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
          readOnly: true
          serializedName: type
          language:
            default:
              name: type
              description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
              uid: 'property:178'
          protocol:  {}
      extensions:
        x-ms-azure-resource: true
      language:
        default:
          name: Resource
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      protocol:  {}
    - *ref_45
    -  &ref_49
      $key: TrackedResource
      type: object
      description: The resource model definition for a ARM tracked top level resource
      apiVersions:
        -
          version: '1.0'
      properties:
        -
          $key: tags
          schema:  &ref_80
            $key: TrackedResource-tags
            type: dictionary
            description: Resource tags.
            elementType:
              $key: components·schemas·trackedresource·properties·tags·additionalproperties
              type: string
              description: MISSING-SCHEMA-DESCRIPTION-STRING
              apiVersions:
                -
                  version: '1.0'
              language:
                default:
                  name: components·schemas·trackedresource·properties·tags·additionalproperties
                  description: MISSING-SCHEMA-DESCRIPTION-STRING
              protocol:  {}
            language:
              default:
                name: TrackedResource-tags
                description: Resource tags.
            protocol:  {}
          description: Resource tags.
          required: false
          serializedName: tags
          language:
            default:
              name: tags
              description: Resource tags.
              uid: 'property:179'
          protocol:  {}
        -
          $key: location
          schema:
            $key: TrackedResource-location
            type: string
            description: The geo-location where the resource lives
            apiVersions:
              -
                version: '1.0'
            extensions:
              x-ms-mutability:
                - read
                - create
            language:
              default:
                name: TrackedResource-location
                description: The geo-location where the resource lives
            protocol:  {}
          description: The geo-location where the resource lives
          required: true
          serializedName: location
          language:
            default:
              name: location
              description: The geo-location where the resource lives
              uid: 'property:180'
          protocol:  {}
      language:
        default:
          name: TrackedResource
          description: The resource model definition for a ARM tracked top level resource
      protocol:  {}
    -  &ref_48
      $key: StorageAccount
      type: object
      description: The storage account.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: sku
          schema: *ref_15
          description: The SKU of the storage account.
          serializedName: sku
          language:
            default:
              name: sku
              description: The SKU of the storage account.
              uid: 'property:181'
          protocol:  {}
        -
          $key: kind
          schema: *ref_14
          description: Indicates the type of storage account.
          serializedName: kind
          language:
            default:
              name: kind
              description: Indicates the type of storage account.
              uid: 'property:182'
          protocol:  {}
        -
          $key: identity
          schema: *ref_37
          description: Identity for the resource.
          serializedName: identity
          language:
            default:
              name: identity
              description: Identity for the resource.
              uid: 'property:183'
          protocol:  {}
        -
          $key: properties
          schema: *ref_44
          description: Properties of the storage account.
          serializedName: properties
          language:
            default:
              name: properties
              description: Properties of the storage account.
              uid: 'property:184'
          protocol:  {}
      language:
        default:
          name: StorageAccount
          description: The storage account.
      protocol:  {}
    -  &ref_47
      $key: StorageAccountKey
      type: object
      description: An access key for the storage account.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: keyName
          schema:
            $key: StorageAccountKey-keyName
            type: string
            description: Name of the key.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: StorageAccountKey-keyName
                description: Name of the key.
            protocol:  {}
          description: Name of the key.
          readOnly: true
          serializedName: keyName
          language:
            default:
              name: keyName
              description: Name of the key.
              uid: 'property:185'
          protocol:  {}
        -
          $key: value
          schema:
            $key: StorageAccountKey-value
            type: string
            description: Base 64-encoded value of the key.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: StorageAccountKey-value
                description: Base 64-encoded value of the key.
            protocol:  {}
          description: Base 64-encoded value of the key.
          readOnly: true
          serializedName: value
          language:
            default:
              name: value
              description: Base 64-encoded value of the key.
              uid: 'property:186'
          protocol:  {}
        -
          $key: permissions
          schema:  &ref_46
            $key: KeyPermission
            choices:
              -
                name: '-each'
                description: description
                value: Read
              -
                name: '-each'
                description: description
                value: Full
            type: choice
            description: Permissions for the key -- read-only or full permissions.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: KeyPermission
                modelAsString: false
            language:
              default:
                name: KeyPermission
                description: Permissions for the key -- read-only or full permissions.
            protocol:  {}
          description: Permissions for the key -- read-only or full permissions.
          readOnly: true
          serializedName: permissions
          language:
            default:
              name: permissions
              description: Permissions for the key -- read-only or full permissions.
              uid: 'property:187'
          protocol:  {}
      language:
        default:
          name: StorageAccountKey
          description: An access key for the storage account.
      protocol:  {}
    - *ref_47
    -  &ref_50
      $key: StorageAccountListResult
      type: object
      description: The response from the List Storage Accounts operation.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: value
          schema:
            $key: StorageAccountListResult-value
            type: array
            description: Gets the list of storage accounts and their properties.
            apiVersions:
              -
                version: '2019-04-01'
            elementType:  &ref_83
              $key: StorageAccount
              type: and
              description: The storage account.
              allOf:
                - *ref_48
                -  &ref_82
                  $key: TrackedResource
                  type: and
                  description: The resource model definition for a ARM tracked top level resource
                  allOf:
                    - *ref_49
                    - *ref_45
                  language:
                    default:
                      name: TrackedResource
                      description: The resource model definition for a ARM tracked top level resource
                  protocol:  {}
              language:
                default:
                  name: StorageAccount
                  description: The storage account.
              protocol:  {}
            language:
              default:
                name: StorageAccountListResult-value
                description: Gets the list of storage accounts and their properties.
            protocol:  {}
          description: Gets the list of storage accounts and their properties.
          readOnly: true
          serializedName: value
          language:
            default:
              name: value
              description: Gets the list of storage accounts and their properties.
              uid: 'property:188'
          protocol:  {}
      language:
        default:
          name: StorageAccountListResult
          description: The response from the List Storage Accounts operation.
      protocol:  {}
    - *ref_50
    -  &ref_51
      $key: StorageAccountListKeysResult
      type: object
      description: The response from the ListKeys operation.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: keys
          schema:
            $key: StorageAccountListKeysResult-keys
            type: array
            description: Gets the list of storage account keys and their properties for the specified storage account.
            apiVersions:
              -
                version: '2019-04-01'
            elementType: *ref_47
            language:
              default:
                name: StorageAccountListKeysResult-keys
                description: Gets the list of storage account keys and their properties for the specified storage account.
            protocol:  {}
          description: Gets the list of storage account keys and their properties for the specified storage account.
          readOnly: true
          serializedName: keys
          language:
            default:
              name: keys
              description: Gets the list of storage account keys and their properties for the specified storage account.
              uid: 'property:189'
          protocol:  {}
      language:
        default:
          name: StorageAccountListKeysResult
          description: The response from the ListKeys operation.
      protocol:  {}
    - *ref_51
    -  &ref_52
      $key: StorageAccountRegenerateKeyParameters
      type: object
      description: The parameters used to regenerate the storage account key.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: keyName
          schema:
            $key: StorageAccountRegenerateKeyParameters-keyName
            type: string
            description: 'The name of storage keys that want to be regenerated, possible values are key1, key2.'
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: StorageAccountRegenerateKeyParameters-keyName
                description: 'The name of storage keys that want to be regenerated, possible values are key1, key2.'
            protocol:  {}
          description: 'The name of storage keys that want to be regenerated, possible values are key1, key2.'
          required: true
          serializedName: keyName
          language:
            default:
              name: keyName
              description: 'The name of storage keys that want to be regenerated, possible values are key1, key2.'
              uid: 'property:190'
          protocol:  {}
      language:
        default:
          name: StorageAccountRegenerateKeyParameters
          description: The parameters used to regenerate the storage account key.
      protocol:  {}
    - *ref_52
    -  &ref_53
      $key: StorageAccountPropertiesUpdateParameters
      type: object
      description: The parameters used when updating a storage account.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: customDomain
          schema: *ref_19
          description: The custom domain assigned to this storage account. This can be set via Update.
          serializedName: customDomain
          language:
            default:
              name: customDomain
              description: The custom domain assigned to this storage account. This can be set via Update.
              uid: 'property:191'
          protocol:  {}
        -
          $key: encryption
          schema: *ref_24
          description: The encryption settings on the storage account.
          serializedName: encryption
          language:
            default:
              name: encryption
              description: The encryption settings on the storage account.
              uid: 'property:192'
          protocol:  {}
        -
          $key: accessTier
          schema: *ref_34
          description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
          serializedName: accessTier
          language:
            default:
              name: accessTier
              description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
              uid: 'property:193'
          protocol:  {}
        -
          $key: azureFilesIdentityBasedAuthentication
          schema: *ref_33
          description: Settings for Azure Files identity based authentication.
          serializedName: azureFilesIdentityBasedAuthentication
          language:
            default:
              name: azureFilesIdentityBasedAuthentication
              description: Settings for Azure Files identity based authentication.
              uid: 'property:194'
          protocol:  {}
        -
          $key: supportsHttpsTrafficOnly
          schema:
            $key: typeForsupportsHttpsTrafficOnly
            type: boolean
            description: Allows https traffic only to storage service if sets to true.
            extensions:
              x-ms-client-name: EnableHttpsTrafficOnly
            language:
              default:
                name: typeForsupportsHttpsTrafficOnly
                description: Allows https traffic only to storage service if sets to true.
            protocol:  {}
          description: Allows https traffic only to storage service if sets to true.
          serializedName: supportsHttpsTrafficOnly
          language:
            default:
              name: supportsHttpsTrafficOnly
              description: Allows https traffic only to storage service if sets to true.
              uid: 'property:195'
          protocol:  {}
        -
          $key: networkAcls
          schema: *ref_31
          description: Network rule set
          serializedName: networkAcls
          language:
            default:
              name: networkAcls
              description: Network rule set
              uid: 'property:196'
          protocol:  {}
      language:
        default:
          name: StorageAccountPropertiesUpdateParameters
          description: The parameters used when updating a storage account.
      protocol:  {}
    - *ref_53
    -  &ref_54
      $key: StorageAccountUpdateParameters
      type: object
      description: The parameters that can be provided when updating the storage account properties.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: sku
          schema: *ref_15
          description: The SKU of the storage account.
          serializedName: sku
          language:
            default:
              name: sku
              description: The SKU of the storage account.
              uid: 'property:197'
          protocol:  {}
        -
          $key: tags
          schema:  &ref_81
            $key: StorageAccountUpdateParameters-tags
            type: dictionary
            description: >-
              Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have
              a key no greater in length than 128 characters and a value no greater in length than 256 characters.
            elementType:
              $key: components·schemas·storageaccountupdateparameters·properties·tags·additionalproperties
              type: string
              description: MISSING-SCHEMA-DESCRIPTION-STRING
              apiVersions:
                -
                  version: '2019-04-01'
              language:
                default:
                  name: components·schemas·storageaccountupdateparameters·properties·tags·additionalproperties
                  description: MISSING-SCHEMA-DESCRIPTION-STRING
              protocol:  {}
            language:
              default:
                name: StorageAccountUpdateParameters-tags
                description: >-
                  Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must
                  have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
            protocol:  {}
          description: >-
            Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a
            key no greater in length than 128 characters and a value no greater in length than 256 characters.
          serializedName: tags
          language:
            default:
              name: tags
              description: >-
                Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must
                have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
              uid: 'property:198'
          protocol:  {}
        -
          $key: identity
          schema: *ref_37
          description: Identity for the resource.
          serializedName: identity
          language:
            default:
              name: identity
              description: Identity for the resource.
              uid: 'property:199'
          protocol:  {}
        -
          $key: properties
          schema: *ref_53
          description: The parameters used when updating a storage account.
          serializedName: properties
          language:
            default:
              name: properties
              description: The parameters used when updating a storage account.
              uid: 'property:200'
          protocol:  {}
        -
          $key: kind
          schema: *ref_14
          description: Indicates the type of storage account.
          serializedName: kind
          language:
            default:
              name: kind
              description: Indicates the type of storage account.
              uid: 'property:201'
          protocol:  {}
      language:
        default:
          name: StorageAccountUpdateParameters
          description: The parameters that can be provided when updating the storage account properties.
      protocol:  {}
    - *ref_54
    -  &ref_55
      $key: UsageName
      type: object
      description: The usage names that can be used; currently limited to StorageAccount.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: value
          schema:
            $key: UsageName-value
            type: string
            description: Gets a string describing the resource name.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: UsageName-value
                description: Gets a string describing the resource name.
            protocol:  {}
          description: Gets a string describing the resource name.
          readOnly: true
          serializedName: value
          language:
            default:
              name: value
              description: Gets a string describing the resource name.
              uid: 'property:202'
          protocol:  {}
        -
          $key: localizedValue
          schema:
            $key: UsageName-localizedValue
            type: string
            description: Gets a localized string describing the resource name.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: UsageName-localizedValue
                description: Gets a localized string describing the resource name.
            protocol:  {}
          description: Gets a localized string describing the resource name.
          readOnly: true
          serializedName: localizedValue
          language:
            default:
              name: localizedValue
              description: Gets a localized string describing the resource name.
              uid: 'property:203'
          protocol:  {}
      language:
        default:
          name: UsageName
          description: The usage names that can be used; currently limited to StorageAccount.
      protocol:  {}
    - *ref_55
    -  &ref_57
      $key: Usage
      type: object
      description: Describes Storage Resource Usage.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: unit
          schema:  &ref_56
            $key: UsageUnit
            choices:
              -
                name: '-each'
                description: description
                value: Count
              -
                name: '-each'
                description: description
                value: Bytes
              -
                name: '-each'
                description: description
                value: Seconds
              -
                name: '-each'
                description: description
                value: Percent
              -
                name: '-each'
                description: description
                value: CountsPerSecond
              -
                name: '-each'
                description: description
                value: BytesPerSecond
            type: choice
            description: Gets the unit of measurement.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-enum:
                name: UsageUnit
                modelAsString: false
            language:
              default:
                name: UsageUnit
                description: Gets the unit of measurement.
            protocol:  {}
          description: Gets the unit of measurement.
          readOnly: true
          serializedName: unit
          language:
            default:
              name: unit
              description: Gets the unit of measurement.
              uid: 'property:204'
          protocol:  {}
        -
          $key: currentValue
          schema:
            $key: typeForcurrentValue
            type: integer
            description: Gets the current count of the allocated resources in the subscription.
            precision: 32
            language:
              default:
                name: typeForcurrentValue
                description: Gets the current count of the allocated resources in the subscription.
            protocol:  {}
          description: Gets the current count of the allocated resources in the subscription.
          readOnly: true
          serializedName: currentValue
          language:
            default:
              name: currentValue
              description: Gets the current count of the allocated resources in the subscription.
              uid: 'property:205'
          protocol:  {}
        -
          $key: limit
          schema:
            $key: typeForlimit
            type: integer
            description: Gets the maximum count of the resources that can be allocated in the subscription.
            precision: 32
            language:
              default:
                name: typeForlimit
                description: Gets the maximum count of the resources that can be allocated in the subscription.
            protocol:  {}
          description: Gets the maximum count of the resources that can be allocated in the subscription.
          readOnly: true
          serializedName: limit
          language:
            default:
              name: limit
              description: Gets the maximum count of the resources that can be allocated in the subscription.
              uid: 'property:206'
          protocol:  {}
        -
          $key: name
          schema: *ref_55
          description: The usage names that can be used; currently limited to StorageAccount.
          serializedName: name
          language:
            default:
              name: name
              description: The usage names that can be used; currently limited to StorageAccount.
              uid: 'property:207'
          protocol:  {}
      language:
        default:
          name: Usage
          description: Describes Storage Resource Usage.
      protocol:  {}
    - *ref_57
    -  &ref_58
      $key: UsageListResult
      type: object
      description: The response from the List Usages operation.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: value
          schema:
            $key: UsageListResult-value
            type: array
            description: Gets or sets the list of Storage Resource Usages.
            apiVersions:
              -
                version: '2019-04-01'
            elementType: *ref_57
            language:
              default:
                name: UsageListResult-value
                description: Gets or sets the list of Storage Resource Usages.
            protocol:  {}
          description: Gets or sets the list of Storage Resource Usages.
          serializedName: value
          language:
            default:
              name: value
              description: Gets or sets the list of Storage Resource Usages.
              uid: 'property:208'
          protocol:  {}
      language:
        default:
          name: UsageListResult
          description: The response from the List Usages operation.
      protocol:  {}
    - *ref_58
    -  &ref_63
      $key: AccountSasParameters
      type: object
      description: The parameters to list SAS credentials of a storage account.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: signedServices
          schema:  &ref_59
            $key: Services
            choices:
              -
                name: '-each'
                description: description
                value: b
              -
                name: '-each'
                description: description
                value: q
              -
                name: '-each'
                description: description
                value: t
              -
                name: '-each'
                description: description
                value: f
            type: choice
            description: 'The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f).'
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-client-name: Services
              x-ms-enum:
                name: Services
                modelAsString: true
            language:
              default:
                name: Services
                description: 'The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f).'
            protocol:  {}
          description: 'The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f).'
          required: true
          serializedName: signedServices
          language:
            default:
              name: signedServices
              description: 'The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f).'
              uid: 'property:209'
          protocol:  {}
        -
          $key: signedResourceTypes
          schema:  &ref_60
            $key: SignedResourceTypes
            choices:
              -
                name: '-each'
                description: description
                value: s
              -
                name: '-each'
                description: description
                value: c
              -
                name: '-each'
                description: description
                value: o
            type: choice
            description: >-
              The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages,
              table entities, and files.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-client-name: ResourceTypes
              x-ms-enum:
                name: SignedResourceTypes
                modelAsString: true
            language:
              default:
                name: SignedResourceTypes
                description: >-
                  The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue
                  messages, table entities, and files.
            protocol:  {}
          description: >-
            The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages,
            table entities, and files.
          required: true
          serializedName: signedResourceTypes
          language:
            default:
              name: signedResourceTypes
              description: >-
                The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages,
                table entities, and files.
              uid: 'property:210'
          protocol:  {}
        -
          $key: signedPermission
          schema:  &ref_61
            $key: Permissions
            choices:
              -
                name: '-each'
                description: description
                value: r
              -
                name: '-each'
                description: description
                value: d
              -
                name: '-each'
                description: description
                value: w
              -
                name: '-each'
                description: description
                value: l
              -
                name: '-each'
                description: description
                value: a
              -
                name: '-each'
                description: description
                value: c
              -
                name: '-each'
                description: description
                value: u
              -
                name: '-each'
                description: description
                value: p
            type: choice
            description: 'The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-client-name: Permissions
              x-ms-enum:
                name: Permissions
                modelAsString: true
            language:
              default:
                name: Permissions
                description: 'The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'
            protocol:  {}
          description: 'The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'
          required: true
          serializedName: signedPermission
          language:
            default:
              name: signedPermission
              description: 'The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'
              uid: 'property:211'
          protocol:  {}
        -
          $key: signedIp
          schema:
            $key: AccountSasParameters-signedIp
            type: string
            description: An IP address or a range of IP addresses from which to accept requests.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: IPAddressOrRange
            language:
              default:
                name: AccountSasParameters-signedIp
                description: An IP address or a range of IP addresses from which to accept requests.
            protocol:  {}
          description: An IP address or a range of IP addresses from which to accept requests.
          required: false
          serializedName: signedIp
          language:
            default:
              name: signedIp
              description: An IP address or a range of IP addresses from which to accept requests.
              uid: 'property:212'
          protocol:  {}
        -
          $key: signedProtocol
          schema:  &ref_62
            $key: HttpProtocol
            choices:
              -
                name: '-each'
                description: description
                value: 'https,http'
              -
                name: '-each'
                description: description
                value: https
            type: choice
            description: The protocol permitted for a request made with the account SAS.
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-client-name: Protocols
              x-ms-enum:
                name: HttpProtocol
                modelAsString: false
            language:
              default:
                name: HttpProtocol
                description: The protocol permitted for a request made with the account SAS.
            protocol:  {}
          description: The protocol permitted for a request made with the account SAS.
          required: false
          serializedName: signedProtocol
          language:
            default:
              name: signedProtocol
              description: The protocol permitted for a request made with the account SAS.
              uid: 'property:213'
          protocol:  {}
        -
          $key: signedStart
          schema:
            $key: AccountSasParameters-signedStart
            type: date-time
            format: date-time
            description: The time at which the SAS becomes valid.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: SharedAccessStartTime
            language:
              default:
                name: AccountSasParameters-signedStart
                description: The time at which the SAS becomes valid.
            protocol:  {}
          description: The time at which the SAS becomes valid.
          required: false
          serializedName: signedStart
          language:
            default:
              name: signedStart
              description: The time at which the SAS becomes valid.
              uid: 'property:214'
          protocol:  {}
        -
          $key: signedExpiry
          schema:
            $key: AccountSasParameters-signedExpiry
            type: date-time
            format: date-time
            description: The time at which the shared access signature becomes invalid.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: SharedAccessExpiryTime
            language:
              default:
                name: AccountSasParameters-signedExpiry
                description: The time at which the shared access signature becomes invalid.
            protocol:  {}
          description: The time at which the shared access signature becomes invalid.
          required: true
          serializedName: signedExpiry
          language:
            default:
              name: signedExpiry
              description: The time at which the shared access signature becomes invalid.
              uid: 'property:215'
          protocol:  {}
        -
          $key: keyToSign
          schema:
            $key: AccountSasParameters-keyToSign
            type: string
            description: The key to sign the account SAS token with.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: AccountSasParameters-keyToSign
                description: The key to sign the account SAS token with.
            protocol:  {}
          description: The key to sign the account SAS token with.
          required: false
          serializedName: keyToSign
          language:
            default:
              name: keyToSign
              description: The key to sign the account SAS token with.
              uid: 'property:216'
          protocol:  {}
      language:
        default:
          name: AccountSasParameters
          description: The parameters to list SAS credentials of a storage account.
      protocol:  {}
    - *ref_63
    -  &ref_64
      $key: ListAccountSasResponse
      type: object
      description: The List SAS credentials operation response.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: accountSasToken
          schema:
            $key: ListAccountSasResponse-accountSasToken
            type: string
            description: List SAS credentials of storage account.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: ListAccountSasResponse-accountSasToken
                description: List SAS credentials of storage account.
            protocol:  {}
          description: List SAS credentials of storage account.
          readOnly: true
          serializedName: accountSasToken
          language:
            default:
              name: accountSasToken
              description: List SAS credentials of storage account.
              uid: 'property:217'
          protocol:  {}
      language:
        default:
          name: ListAccountSasResponse
          description: The List SAS credentials operation response.
      protocol:  {}
    - *ref_64
    -  &ref_66
      $key: ServiceSasParameters
      type: object
      description: The parameters to list service SAS credentials of a specific resource.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: canonicalizedResource
          schema:
            $key: ServiceSasParameters-canonicalizedResource
            type: string
            description: The canonical path to the signed resource.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: ServiceSasParameters-canonicalizedResource
                description: The canonical path to the signed resource.
            protocol:  {}
          description: The canonical path to the signed resource.
          required: true
          serializedName: canonicalizedResource
          language:
            default:
              name: canonicalizedResource
              description: The canonical path to the signed resource.
              uid: 'property:218'
          protocol:  {}
        -
          $key: signedResource
          schema:  &ref_65
            $key: signedResource
            choices:
              -
                name: '-each'
                description: description
                value: b
              -
                name: '-each'
                description: description
                value: c
              -
                name: '-each'
                description: description
                value: f
              -
                name: '-each'
                description: description
                value: s
            type: choice
            description: 'The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).'
            apiVersions:
              -
                version: '2019-04-01'
            choiceType:
              $key: choice
              type: string
              description: choice
              language:
                default:
                  name: choice
                  description: choice
              protocol:  {}
            extensions:
              x-ms-client-name: Resource
              x-ms-enum:
                name: signedResource
                modelAsString: true
            language:
              default:
                name: signedResource
                description: 'The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).'
            protocol:  {}
          description: 'The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).'
          required: false
          serializedName: signedResource
          language:
            default:
              name: signedResource
              description: 'The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).'
              uid: 'property:219'
          protocol:  {}
        -
          $key: signedPermission
          schema: *ref_61
          description: 'The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'
          required: false
          serializedName: signedPermission
          language:
            default:
              name: signedPermission
              description: 'The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'
              uid: 'property:220'
          protocol:  {}
        -
          $key: signedIp
          schema:
            $key: ServiceSasParameters-signedIp
            type: string
            description: An IP address or a range of IP addresses from which to accept requests.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: IPAddressOrRange
            language:
              default:
                name: ServiceSasParameters-signedIp
                description: An IP address or a range of IP addresses from which to accept requests.
            protocol:  {}
          description: An IP address or a range of IP addresses from which to accept requests.
          required: false
          serializedName: signedIp
          language:
            default:
              name: signedIp
              description: An IP address or a range of IP addresses from which to accept requests.
              uid: 'property:221'
          protocol:  {}
        -
          $key: signedProtocol
          schema: *ref_62
          description: The protocol permitted for a request made with the account SAS.
          required: false
          serializedName: signedProtocol
          language:
            default:
              name: signedProtocol
              description: The protocol permitted for a request made with the account SAS.
              uid: 'property:222'
          protocol:  {}
        -
          $key: signedStart
          schema:
            $key: ServiceSasParameters-signedStart
            type: date-time
            format: date-time
            description: The time at which the SAS becomes valid.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: SharedAccessStartTime
            language:
              default:
                name: ServiceSasParameters-signedStart
                description: The time at which the SAS becomes valid.
            protocol:  {}
          description: The time at which the SAS becomes valid.
          required: false
          serializedName: signedStart
          language:
            default:
              name: signedStart
              description: The time at which the SAS becomes valid.
              uid: 'property:223'
          protocol:  {}
        -
          $key: signedExpiry
          schema:
            $key: ServiceSasParameters-signedExpiry
            type: date-time
            format: date-time
            description: The time at which the shared access signature becomes invalid.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: SharedAccessExpiryTime
            language:
              default:
                name: ServiceSasParameters-signedExpiry
                description: The time at which the shared access signature becomes invalid.
            protocol:  {}
          description: The time at which the shared access signature becomes invalid.
          required: false
          serializedName: signedExpiry
          language:
            default:
              name: signedExpiry
              description: The time at which the shared access signature becomes invalid.
              uid: 'property:224'
          protocol:  {}
        -
          $key: signedIdentifier
          schema:
            $key: ServiceSasParameters-signedIdentifier
            type: string
            description: 'A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.'
            apiVersions:
              -
                version: '2019-04-01'
            maxLength: 64
            extensions:
              x-ms-client-name: Identifier
            language:
              default:
                name: ServiceSasParameters-signedIdentifier
                description: 'A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.'
            protocol:  {}
          description: 'A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.'
          required: false
          serializedName: signedIdentifier
          language:
            default:
              name: signedIdentifier
              description: 'A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.'
              uid: 'property:225'
          protocol:  {}
        -
          $key: startPk
          schema:
            $key: ServiceSasParameters-startPk
            type: string
            description: The start of partition key.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: PartitionKeyStart
            language:
              default:
                name: ServiceSasParameters-startPk
                description: The start of partition key.
            protocol:  {}
          description: The start of partition key.
          required: false
          serializedName: startPk
          language:
            default:
              name: startPk
              description: The start of partition key.
              uid: 'property:226'
          protocol:  {}
        -
          $key: endPk
          schema:
            $key: ServiceSasParameters-endPk
            type: string
            description: The end of partition key.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: PartitionKeyEnd
            language:
              default:
                name: ServiceSasParameters-endPk
                description: The end of partition key.
            protocol:  {}
          description: The end of partition key.
          required: false
          serializedName: endPk
          language:
            default:
              name: endPk
              description: The end of partition key.
              uid: 'property:227'
          protocol:  {}
        -
          $key: startRk
          schema:
            $key: ServiceSasParameters-startRk
            type: string
            description: The start of row key.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: RowKeyStart
            language:
              default:
                name: ServiceSasParameters-startRk
                description: The start of row key.
            protocol:  {}
          description: The start of row key.
          required: false
          serializedName: startRk
          language:
            default:
              name: startRk
              description: The start of row key.
              uid: 'property:228'
          protocol:  {}
        -
          $key: endRk
          schema:
            $key: ServiceSasParameters-endRk
            type: string
            description: The end of row key.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: RowKeyEnd
            language:
              default:
                name: ServiceSasParameters-endRk
                description: The end of row key.
            protocol:  {}
          description: The end of row key.
          required: false
          serializedName: endRk
          language:
            default:
              name: endRk
              description: The end of row key.
              uid: 'property:229'
          protocol:  {}
        -
          $key: keyToSign
          schema:
            $key: ServiceSasParameters-keyToSign
            type: string
            description: The key to sign the account SAS token with.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: ServiceSasParameters-keyToSign
                description: The key to sign the account SAS token with.
            protocol:  {}
          description: The key to sign the account SAS token with.
          required: false
          serializedName: keyToSign
          language:
            default:
              name: keyToSign
              description: The key to sign the account SAS token with.
              uid: 'property:230'
          protocol:  {}
        -
          $key: rscc
          schema:
            $key: ServiceSasParameters-rscc
            type: string
            description: The response header override for cache control.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: CacheControl
            language:
              default:
                name: ServiceSasParameters-rscc
                description: The response header override for cache control.
            protocol:  {}
          description: The response header override for cache control.
          required: false
          serializedName: rscc
          language:
            default:
              name: rscc
              description: The response header override for cache control.
              uid: 'property:231'
          protocol:  {}
        -
          $key: rscd
          schema:
            $key: ServiceSasParameters-rscd
            type: string
            description: The response header override for content disposition.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: ContentDisposition
            language:
              default:
                name: ServiceSasParameters-rscd
                description: The response header override for content disposition.
            protocol:  {}
          description: The response header override for content disposition.
          required: false
          serializedName: rscd
          language:
            default:
              name: rscd
              description: The response header override for content disposition.
              uid: 'property:232'
          protocol:  {}
        -
          $key: rsce
          schema:
            $key: ServiceSasParameters-rsce
            type: string
            description: The response header override for content encoding.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: ContentEncoding
            language:
              default:
                name: ServiceSasParameters-rsce
                description: The response header override for content encoding.
            protocol:  {}
          description: The response header override for content encoding.
          required: false
          serializedName: rsce
          language:
            default:
              name: rsce
              description: The response header override for content encoding.
              uid: 'property:233'
          protocol:  {}
        -
          $key: rscl
          schema:
            $key: ServiceSasParameters-rscl
            type: string
            description: The response header override for content language.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: ContentLanguage
            language:
              default:
                name: ServiceSasParameters-rscl
                description: The response header override for content language.
            protocol:  {}
          description: The response header override for content language.
          required: false
          serializedName: rscl
          language:
            default:
              name: rscl
              description: The response header override for content language.
              uid: 'property:234'
          protocol:  {}
        -
          $key: rsct
          schema:
            $key: ServiceSasParameters-rsct
            type: string
            description: The response header override for content type.
            apiVersions:
              -
                version: '2019-04-01'
            extensions:
              x-ms-client-name: ContentType
            language:
              default:
                name: ServiceSasParameters-rsct
                description: The response header override for content type.
            protocol:  {}
          description: The response header override for content type.
          required: false
          serializedName: rsct
          language:
            default:
              name: rsct
              description: The response header override for content type.
              uid: 'property:235'
          protocol:  {}
      language:
        default:
          name: ServiceSasParameters
          description: The parameters to list service SAS credentials of a specific resource.
      protocol:  {}
    - *ref_66
    -  &ref_67
      $key: ListServiceSasResponse
      type: object
      description: The List service SAS credentials operation response.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: serviceSasToken
          schema:
            $key: ListServiceSasResponse-serviceSasToken
            type: string
            description: List service SAS credentials of specific resource.
            apiVersions:
              -
                version: '2019-04-01'
            language:
              default:
                name: ListServiceSasResponse-serviceSasToken
                description: List service SAS credentials of specific resource.
            protocol:  {}
          description: List service SAS credentials of specific resource.
          readOnly: true
          serializedName: serviceSasToken
          language:
            default:
              name: serviceSasToken
              description: List service SAS credentials of specific resource.
              uid: 'property:236'
          protocol:  {}
      language:
        default:
          name: ListServiceSasResponse
          description: The List service SAS credentials operation response.
      protocol:  {}
    - *ref_67
    -  &ref_84
      $key: ManagementPolicy
      type: object
      description: The Get Storage Account ManagementPolicies operation response.
      apiVersions:
        -
          version: '2019-04-01'
      properties:
        -
          $key: properties
          schema:  &ref_70
            $key: ManagementPolicyProperties
            type: object
            description: The Storage Account ManagementPolicy properties.
            apiVersions:
              -
                version: '2019-04-01'
            properties:
              -
                $key: lastModifiedTime
                schema:
                  $key: ManagementPolicyProperties-lastModifiedTime
                  type: date-time
                  format: date-time
                  description: Returns the date and time the ManagementPolicies was last modified.
                  apiVersions:
                    -
                      version: '2019-04-01'
                  language:
                    default:
                      name: ManagementPolicyProperties-lastModifiedTime
                      description: Returns the date and time the ManagementPolicies was last modified.
                  protocol:  {}
                description: Returns the date and time the ManagementPolicies was last modified.
                readOnly: true
                required: false
                serializedName: lastModifiedTime
                language:
                  default:
                    name: lastModifiedTime
                    description: Returns the date and time the ManagementPolicies was last modified.
                    uid: 'property:237'
                protocol:  {}
              -
                $key: policy
                schema:  &ref_71
                  $key: ManagementPolicySchema
                  type: object
                  description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
                  apiVersions:
                    -
                      version: '2019-04-01'
                  properties:
                    -
                      $key: rules
                      schema:
                        $key: ManagementPolicySchema-rules
                        type: array
                        description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
                        apiVersions:
                          -
                            version: '2019-04-01'
                        elementType:  &ref_72
                          $key: ManagementPolicyRule
                          type: object
                          description: An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
                          apiVersions:
                            -
                              version: '2019-04-01'
                          properties:
                            -
                              $key: enabled
                              schema:
                                $key: typeForenabled
                                type: boolean
                                description: Rule is enabled if set to true.
                                language:
                                  default:
                                    name: typeForenabled
                                    description: Rule is enabled if set to true.
                                protocol:  {}
                              description: Rule is enabled if set to true.
                              required: false
                              serializedName: enabled
                              language:
                                default:
                                  name: enabled
                                  description: Rule is enabled if set to true.
                                  uid: 'property:238'
                              protocol:  {}
                            -
                              $key: name
                              schema:
                                $key: ManagementPolicyRule-name
                                type: string
                                description: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
                                apiVersions:
                                  -
                                    version: '2019-04-01'
                                language:
                                  default:
                                    name: ManagementPolicyRule-name
                                    description: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
                                protocol:  {}
                              description: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
                              required: true
                              serializedName: name
                              language:
                                default:
                                  name: name
                                  description: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
                                  uid: 'property:239'
                              protocol:  {}
                            -
                              $key: type
                              schema:  &ref_68
                                $key: type
                                choices:
                                  -
                                    name: '-each'
                                    description: description
                                    value: Lifecycle
                                type: choice
                                description: The valid value is Lifecycle
                                apiVersions:
                                  -
                                    version: '2019-04-01'
                                choiceType:
                                  $key: choice
                                  type: string
                                  description: choice
                                  language:
                                    default:
                                      name: choice
                                      description: choice
                                  protocol:  {}
                                extensions:
                                  x-ms-enum:
                                    name: type
                                    modelAsString: true
                                language:
                                  default:
                                    name: type
                                    description: The valid value is Lifecycle
                                protocol:  {}
                              description: The valid value is Lifecycle
                              required: true
                              serializedName: type
                              language:
                                default:
                                  name: type
                                  description: The valid value is Lifecycle
                                  uid: 'property:240'
                              protocol:  {}
                            -
                              $key: definition
                              schema:  &ref_73
                                $key: ManagementPolicyDefinition
                                type: object
                                description: An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
                                apiVersions:
                                  -
                                    version: '2019-04-01'
                                properties:
                                  -
                                    $key: actions
                                    schema:  &ref_74
                                      $key: ManagementPolicyAction
                                      type: object
                                      description: Actions are applied to the filtered blobs when the execution condition is met.
                                      apiVersions:
                                        -
                                          version: '2019-04-01'
                                      properties:
                                        -
                                          $key: baseBlob
                                          schema:  &ref_75
                                            $key: ManagementPolicyBaseBlob
                                            type: object
                                            description: Management policy action for base blob.
                                            apiVersions:
                                              -
                                                version: '2019-04-01'
                                            properties:
                                              -
                                                $key: tierToCool
                                                schema:  &ref_69
                                                  $key: DateAfterModification
                                                  type: object
                                                  description: Object to define the number of days after last modification.
                                                  apiVersions:
                                                    -
                                                      version: '2019-04-01'
                                                  properties:
                                                    -
                                                      $key: daysAfterModificationGreaterThan
                                                      schema:
                                                        $key: typeFordaysAfterModificationGreaterThan
                                                        type: number
                                                        description: Value indicating the age in days after last modification
                                                        minimum: 0
                                                        multipleOf: 1
                                                        precision: 32
                                                        language:
                                                          default:
                                                            name: typeFordaysAfterModificationGreaterThan
                                                            description: Value indicating the age in days after last modification
                                                        protocol:  {}
                                                      description: Value indicating the age in days after last modification
                                                      required: true
                                                      serializedName: daysAfterModificationGreaterThan
                                                      language:
                                                        default:
                                                          name: daysAfterModificationGreaterThan
                                                          description: Value indicating the age in days after last modification
                                                          uid: 'property:241'
                                                      protocol:  {}
                                                  language:
                                                    default:
                                                      name: DateAfterModification
                                                      description: Object to define the number of days after last modification.
                                                  protocol:  {}
                                                description: Object to define the number of days after last modification.
                                                serializedName: tierToCool
                                                language:
                                                  default:
                                                    name: tierToCool
                                                    description: Object to define the number of days after last modification.
                                                    uid: 'property:242'
                                                protocol:  {}
                                              -
                                                $key: tierToArchive
                                                schema: *ref_69
                                                description: Object to define the number of days after last modification.
                                                serializedName: tierToArchive
                                                language:
                                                  default:
                                                    name: tierToArchive
                                                    description: Object to define the number of days after last modification.
                                                    uid: 'property:243'
                                                protocol:  {}
                                              -
                                                $key: delete
                                                schema: *ref_69
                                                description: Object to define the number of days after last modification.
                                                serializedName: delete
                                                language:
                                                  default:
                                                    name: delete
                                                    description: Object to define the number of days after last modification.
                                                    uid: 'property:244'
                                                protocol:  {}
                                            language:
                                              default:
                                                name: ManagementPolicyBaseBlob
                                                description: Management policy action for base blob.
                                            protocol:  {}
                                          description: Management policy action for base blob.
                                          serializedName: baseBlob
                                          language:
                                            default:
                                              name: baseBlob
                                              description: Management policy action for base blob.
                                              uid: 'property:245'
                                          protocol:  {}
                                        -
                                          $key: snapshot
                                          schema:  &ref_76
                                            $key: ManagementPolicySnapShot
                                            type: object
                                            description: Management policy action for snapshot.
                                            apiVersions:
                                              -
                                                version: '2019-04-01'
                                            properties:
                                              -
                                                $key: delete
                                                schema:  &ref_77
                                                  $key: DateAfterCreation
                                                  type: object
                                                  description: Object to define the number of days after creation.
                                                  apiVersions:
                                                    -
                                                      version: '2019-04-01'
                                                  properties:
                                                    -
                                                      $key: daysAfterCreationGreaterThan
                                                      schema:
                                                        $key: typeFordaysAfterCreationGreaterThan
                                                        type: number
                                                        description: Value indicating the age in days after creation
                                                        minimum: 0
                                                        multipleOf: 1
                                                        precision: 32
                                                        language:
                                                          default:
                                                            name: typeFordaysAfterCreationGreaterThan
                                                            description: Value indicating the age in days after creation
                                                        protocol:  {}
                                                      description: Value indicating the age in days after creation
                                                      required: true
                                                      serializedName: daysAfterCreationGreaterThan
                                                      language:
                                                        default:
                                                          name: daysAfterCreationGreaterThan
                                                          description: Value indicating the age in days after creation
                                                          uid: 'property:246'
                                                      protocol:  {}
                                                  language:
                                                    default:
                                                      name: DateAfterCreation
                                                      description: Object to define the number of days after creation.
                                                  protocol:  {}
                                                description: Object to define the number of days after creation.
                                                serializedName: delete
                                                language:
                                                  default:
                                                    name: delete
                                                    description: Object to define the number of days after creation.
                                                    uid: 'property:247'
                                                protocol:  {}
                                            language:
                                              default:
                                                name: ManagementPolicySnapShot
                                                description: Management policy action for snapshot.
                                            protocol:  {}
                                          description: Management policy action for snapshot.
                                          serializedName: snapshot
                                          language:
                                            default:
                                              name: snapshot
                                              description: Management policy action for snapshot.
                                              uid: 'property:248'
                                          protocol:  {}
                                      language:
                                        default:
                                          name: ManagementPolicyAction
                                          description: Actions are applied to the filtered blobs when the execution condition is met.
                                      protocol:  {}
                                    description: Actions are applied to the filtered blobs when the execution condition is met.
                                    required: true
                                    serializedName: actions
                                    language:
                                      default:
                                        name: actions
                                        description: Actions are applied to the filtered blobs when the execution condition is met.
                                        uid: 'property:249'
                                    protocol:  {}
                                  -
                                    $key: filters
                                    schema:  &ref_78
                                      $key: ManagementPolicyFilter
                                      type: object
                                      description: 'Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. '
                                      apiVersions:
                                        -
                                          version: '2019-04-01'
                                      properties:
                                        -
                                          $key: prefixMatch
                                          schema:
                                            $key: ManagementPolicyFilter-prefixMatch
                                            type: array
                                            description: An array of strings for prefixes to be match.
                                            apiVersions:
                                              -
                                                version: '2019-04-01'
                                            elementType:
                                              $key: ManagementPolicyFilter-prefixMatchItem
                                              type: string
                                              description: MISSING-SCHEMA-DESCRIPTION-STRING
                                              apiVersions:
                                                -
                                                  version: '2019-04-01'
                                              language:
                                                default:
                                                  name: ManagementPolicyFilter-prefixMatchItem
                                                  description: MISSING-SCHEMA-DESCRIPTION-STRING
                                              protocol:  {}
                                            language:
                                              default:
                                                name: ManagementPolicyFilter-prefixMatch
                                                description: An array of strings for prefixes to be match.
                                            protocol:  {}
                                          description: An array of strings for prefixes to be match.
                                          required: false
                                          serializedName: prefixMatch
                                          language:
                                            default:
                                              name: prefixMatch
                                              description: An array of strings for prefixes to be match.
                                              uid: 'property:250'
                                          protocol:  {}
                                        -
                                          $key: blobTypes
                                          schema:
                                            $key: ManagementPolicyFilter-blobTypes
                                            type: array
                                            description: An array of predefined enum values. Only blockBlob is supported.
                                            apiVersions:
                                              -
                                                version: '2019-04-01'
                                            elementType:
                                              $key: ManagementPolicyFilter-blobTypesItem
                                              type: string
                                              description: MISSING-SCHEMA-DESCRIPTION-STRING
                                              apiVersions:
                                                -
                                                  version: '2019-04-01'
                                              language:
                                                default:
                                                  name: ManagementPolicyFilter-blobTypesItem
                                                  description: MISSING-SCHEMA-DESCRIPTION-STRING
                                              protocol:  {}
                                            language:
                                              default:
                                                name: ManagementPolicyFilter-blobTypes
                                                description: An array of predefined enum values. Only blockBlob is supported.
                                            protocol:  {}
                                          description: An array of predefined enum values. Only blockBlob is supported.
                                          required: true
                                          serializedName: blobTypes
                                          language:
                                            default:
                                              name: blobTypes
                                              description: An array of predefined enum values. Only blockBlob is supported.
                                              uid: 'property:251'
                                          protocol:  {}
                                      language:
                                        default:
                                          name: ManagementPolicyFilter
                                          description: 'Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. '
                                      protocol:  {}
                                    description: 'Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. '
                                    required: false
                                    serializedName: filters
                                    language:
                                      default:
                                        name: filters
                                        description: 'Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. '
                                        uid: 'property:252'
                                    protocol:  {}
                                language:
                                  default:
                                    name: ManagementPolicyDefinition
                                    description: An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
                                protocol:  {}
                              description: An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
                              required: true
                              serializedName: definition
                              language:
                                default:
                                  name: definition
                                  description: An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
                                  uid: 'property:253'
                              protocol:  {}
                          language:
                            default:
                              name: ManagementPolicyRule
                              description: An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
                          protocol:  {}
                        language:
                          default:
                            name: ManagementPolicySchema-rules
                            description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
                        protocol:  {}
                      description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
                      required: true
                      serializedName: rules
                      language:
                        default:
                          name: rules
                          description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
                          uid: 'property:254'
                      protocol:  {}
                  language:
                    default:
                      name: ManagementPolicySchema
                      description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
                  protocol:  {}
                description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
                required: true
                serializedName: policy
                language:
                  default:
                    name: policy
                    description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
                    uid: 'property:255'
                protocol:  {}
            language:
              default:
                name: ManagementPolicyProperties
                description: The Storage Account ManagementPolicy properties.
            protocol:  {}
          description: The Storage Account ManagementPolicy properties.
          serializedName: properties
          language:
            default:
              name: properties
              description: The Storage Account ManagementPolicy properties.
              uid: 'property:256'
          protocol:  {}
      language:
        default:
          name: ManagementPolicy
          description: The Get Storage Account ManagementPolicies operation response.
      protocol:  {}
    - *ref_70
    - *ref_71
    - *ref_72
    - *ref_73
    - *ref_74
    - *ref_75
    - *ref_69
    - *ref_69
    - *ref_75
    - *ref_76
    - *ref_77
    - *ref_77
    - *ref_76
    - *ref_74
    - *ref_78
    - *ref_78
    - *ref_73
    - *ref_72
    - *ref_71
    - *ref_70
    -  &ref_85
      $key: AzureEntityResource
      type: object
      description: The resource model definition for a Azure Resource Manager resource with an etag.
      apiVersions:
        -
          version: '1.0'
      properties:
        -
          $key: etag
          schema:
            $key: AzureEntityResource-etag
            type: string
            description: Resource Etag.
            apiVersions:
              -
                version: '1.0'
            language:
              default:
                name: AzureEntityResource-etag
                description: Resource Etag.
            protocol:  {}
          description: Resource Etag.
          readOnly: true
          serializedName: etag
          language:
            default:
              name: etag
              description: Resource Etag.
              uid: 'property:257'
          protocol:  {}
      extensions:
        x-ms-client-name: AzureEntityResource
      language:
        default:
          name: AzureEntityResource
          description: The resource model definition for a Azure Resource Manager resource with an etag.
      protocol:  {}
  dictionaries:
    - *ref_79
    - *ref_80
    - *ref_81
  compounds:
    - *ref_82
    - *ref_83
    -
      $key: ManagementPolicy
      type: and
      description: The Get Storage Account ManagementPolicies operation response.
      allOf:
        - *ref_84
        - *ref_45
      language:
        default:
          name: ManagementPolicy
          description: The Get Storage Account ManagementPolicies operation response.
      protocol:  {}
    -
      $key: AzureEntityResource
      type: and
      description: The resource model definition for a Azure Resource Manager resource with an etag.
      allOf:
        - *ref_85
        - *ref_45
      language:
        default:
          name: AzureEntityResource
          description: The resource model definition for a Azure Resource Manager resource with an etag.
      protocol:  {}
    -
      $key: ProxyResource
      type: and
      description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
      allOf:
        - *ref_45
      language:
        default:
          name: ProxyResource
          description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
      protocol:  {}
  choices:
    -  &ref_91
      $key: StorageAccountExpand
      choices:
        -
          name: '-each'
          description: description
          value: geoReplicationStats
      type: choice
      description: MISSING-SCHEMA-DESCRIPTION-CHOICE
      apiVersions:
        -
          version: '2019-04-01'
      choiceType:
        $key: choice
        type: string
        description: choice
        language:
          default:
            name: choice
            description: choice
        protocol:  {}
      extensions:
        x-ms-enum:
          name: StorageAccountExpand
          modelAsString: false
      language:
        default:
          name: StorageAccountExpand
          description: MISSING-SCHEMA-DESCRIPTION-CHOICE
      protocol:  {}
    -  &ref_92
      $key: ''
      choices:
        -
          name: '-each'
          description: description
          value: default
      type: choice
      description: MISSING-SCHEMA-DESCRIPTION-CHOICE
      choiceType:
        $key: choice
        type: string
        description: choice
        language:
          default:
            name: choice
            description: choice
        protocol:  {}
      extensions:
        x-ms-enum:
          name: ManagementPolicyName
          modelAsString: true
      language:
        default:
          name: ''
          description: MISSING-SCHEMA-DESCRIPTION-CHOICE
      protocol:  {}
    - *ref_7
    - *ref_10
    - *ref_12
    - *ref_13
    - *ref_14
    - *ref_17
    - *ref_23
    - *ref_25
    - *ref_26
    - *ref_29
    - *ref_30
    - *ref_32
    - *ref_34
    - *ref_36
    - *ref_40
    - *ref_42
    - *ref_43
    - *ref_46
    - *ref_56
    - *ref_59
    - *ref_60
    - *ref_61
    - *ref_62
    - *ref_65
    - *ref_68
info:
  description: The Azure Storage Management API.
  title: StorageManagementClient
operationGroups:
  -
    $key: Operations
    operations:
      -
        $key: List
        description: Lists all of the available Storage Rest API operations.
        request:
          parameters:
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:0'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: /providers/Microsoft.Storage/operations
              method: get
              servers:
                -  &ref_86
                  url: 'https://management.azure.com/'
                  language:
                    default:
                      name: server-name
                      description: MISSING-SERVER-DESCRIPTION
        language:
          default:
            name: List
            description: Lists all of the available Storage Rest API operations.
        protocol:  {}
      -
        $key: List
        description: Lists the available SKUs supported by Microsoft.Storage for given subscription.
        request:
          parameters:
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:1'
              protocol:  {}
            -
              $key: subscriptionId
              schema:  &ref_88
                $key: components·parameters·subscriptionidparameter·schema
                type: string
                description: MISSING-SCHEMA-DESCRIPTION-STRING
                apiVersions:
                  -
                    version: '1.0'
                minLength: 1
                language:
                  default:
                    name: components·parameters·subscriptionidparameter·schema
                    description: MISSING-SCHEMA-DESCRIPTION-STRING
                protocol:  {}
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:2'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus'
              method: get
              servers:
                - *ref_86
        language:
          default:
            name: List
            description: Lists the available SKUs supported by Microsoft.Storage for given subscription.
        protocol:  {}
      -
        $key: CheckNameAvailability
        description: Checks that the storage account name is valid and is not already in use.
        request:
          parameters:
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:3'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:4'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability'
              method: post
              mediaType: application/json
              servers:
                - *ref_86
              stream: true
        language:
          default:
            name: CheckNameAvailability
            description: Checks that the storage account name is valid and is not already in use.
        protocol:  {}
      -
        $key: Create
        description: >-
          Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an
          account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema:  &ref_89
                $key: components·parameters·resourcegroupname·schema
                type: string
                description: MISSING-SCHEMA-DESCRIPTION-STRING
                apiVersions:
                  -
                    version: '2019-04-01'
                maxLength: 90
                minLength: 1
                pattern: '^[-\w\._\(\)]+$'
                language:
                  default:
                    name: components·parameters·resourcegroupname·schema
                    description: MISSING-SCHEMA-DESCRIPTION-STRING
                protocol:  {}
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:5'
              protocol:  {}
            -
              $key: accountName
              schema:  &ref_90
                $key: components·parameters·storageaccountname·schema
                type: string
                description: MISSING-SCHEMA-DESCRIPTION-STRING
                apiVersions:
                  -
                    version: '2019-04-01'
                maxLength: 24
                minLength: 3
                language:
                  default:
                    name: components·parameters·storageaccountname·schema
                    description: MISSING-SCHEMA-DESCRIPTION-STRING
                protocol:  {}
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:6'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:7'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:8'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
              method: put
              mediaType: application/json
              servers:
                - *ref_86
              stream: true
        language:
          default:
            name: Create
            description: >-
              Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an
              account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
        protocol:  {}
      -
        $key: Delete
        description: Deletes a storage account in Microsoft Azure.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:9'
              protocol:  {}
            -
              $key: accountName
              schema: *ref_90
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:10'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:11'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:12'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
              method: delete
              servers:
                - *ref_86
        language:
          default:
            name: Delete
            description: Deletes a storage account in Microsoft Azure.
        protocol:  {}
      -
        $key: GetProperties
        description: 'Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.'
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:13'
              protocol:  {}
            -
              $key: accountName
              schema: *ref_90
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:14'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:15'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:16'
              protocol:  {}
            -
              $key: $expand
              schema: *ref_91
              description: 'May be used to expand the properties within account''s properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats.'
              language:
                default:
                  name: $expand
                  description: 'May be used to expand the properties within account''s properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats.'
                  uid: 'parameter:17'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
              method: get
              servers:
                - *ref_86
        language:
          default:
            name: GetProperties
            description: 'Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.'
        protocol:  {}
      -
        $key: Update
        description: >-
          The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the
          replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call
          does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:18'
              protocol:  {}
            -
              $key: accountName
              schema: *ref_90
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:19'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:20'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:21'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
              method: patch
              mediaType: application/json
              servers:
                - *ref_86
              stream: true
        language:
          default:
            name: Update
            description: >-
              The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account;
              the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This
              call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.
        protocol:  {}
      -
        $key: List
        description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
        request:
          parameters:
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:22'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:23'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts'
              method: get
              servers:
                - *ref_86
        language:
          default:
            name: List
            description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
        protocol:  {}
      -
        $key: ListByResourceGroup
        description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:24'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:25'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:26'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts'
              method: get
              servers:
                - *ref_86
        language:
          default:
            name: ListByResourceGroup
            description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
        protocol:  {}
      -
        $key: ListKeys
        description: Lists the access keys for the specified storage account.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:27'
              protocol:  {}
            -
              $key: accountName
              schema: *ref_90
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:28'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:29'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:30'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys'
              method: post
              servers:
                - *ref_86
        language:
          default:
            name: ListKeys
            description: Lists the access keys for the specified storage account.
        protocol:  {}
      -
        $key: RegenerateKey
        description: Regenerates one of the access keys for the specified storage account.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:31'
              protocol:  {}
            -
              $key: accountName
              schema: *ref_90
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:32'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:33'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:34'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey'
              method: post
              mediaType: application/json
              servers:
                - *ref_86
              stream: true
        language:
          default:
            name: RegenerateKey
            description: Regenerates one of the access keys for the specified storage account.
        protocol:  {}
      -
        $key: ListByLocation
        description: Gets the current usage count and the limit for the resources of the location under the subscription.
        request:
          parameters:
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:35'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:36'
              protocol:  {}
            -
              $key: location
              schema:
                $key: paths·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·parameters·2·schema
                type: string
                description: MISSING-SCHEMA-DESCRIPTION-STRING
                apiVersions:
                  -
                    version: '2019-04-01'
                language:
                  default:
                    name: paths·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·parameters·2·schema
                    description: MISSING-SCHEMA-DESCRIPTION-STRING
                protocol:  {}
              description: The location of the Azure Storage resource.
              language:
                default:
                  name: location
                  description: The location of the Azure Storage resource.
                  uid: 'parameter:37'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages'
              method: get
              servers:
                - *ref_86
        language:
          default:
            name: ListByLocation
            description: Gets the current usage count and the limit for the resources of the location under the subscription.
        protocol:  {}
      -
        $key: ListAccountSAS
        description: List SAS credentials of a storage account.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:38'
              protocol:  {}
            -
              $key: accountName
              schema: *ref_90
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:39'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:40'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:41'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas'
              method: post
              mediaType: application/json
              servers:
                - *ref_86
              stream: true
        language:
          default:
            name: ListAccountSAS
            description: List SAS credentials of a storage account.
        protocol:  {}
      -
        $key: ListServiceSAS
        description: List service SAS credentials of a specific resource.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:42'
              protocol:  {}
            -
              $key: accountName
              schema: *ref_90
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:43'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:44'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:45'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas'
              method: post
              mediaType: application/json
              servers:
                - *ref_86
              stream: true
        language:
          default:
            name: ListServiceSAS
            description: List service SAS credentials of a specific resource.
        protocol:  {}
      -
        $key: Failover
        description: >-
          Failover request can be triggered for a storage account in case of availability issues. The failover occurs from the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become
          primary after failover.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:46'
              protocol:  {}
            -
              $key: accountName
              schema: *ref_90
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:47'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:48'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:49'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover'
              method: post
              servers:
                - *ref_86
        language:
          default:
            name: Failover
            description: >-
              Failover request can be triggered for a storage account in case of availability issues. The failover occurs from the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become
              primary after failover.
        protocol:  {}
      -
        $key: Get
        description: Gets the managementpolicy associated with the specified storage account.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:50'
              protocol:  {}
            -
              $key: accountName
              schema: *ref_90
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:51'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:52'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:53'
              protocol:  {}
            -
              $key: managementPolicyName
              schema: *ref_92
              description: The name of the Storage Account Management Policy. It should always be 'default'
              language:
                default:
                  name: managementPolicyName
                  description: The name of the Storage Account Management Policy. It should always be 'default'
                  uid: 'parameter:54'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}'
              method: get
              servers:
                - *ref_86
        language:
          default:
            name: Get
            description: Gets the managementpolicy associated with the specified storage account.
        protocol:  {}
      -
        $key: CreateOrUpdate
        description: Sets the managementpolicy to the specified storage account.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:55'
              protocol:  {}
            -
              $key: accountName
              schema: *ref_90
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:56'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:57'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:58'
              protocol:  {}
            -
              $key: managementPolicyName
              schema: *ref_92
              description: The name of the Storage Account Management Policy. It should always be 'default'
              language:
                default:
                  name: managementPolicyName
                  description: The name of the Storage Account Management Policy. It should always be 'default'
                  uid: 'parameter:59'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}'
              method: put
              mediaType: application/json
              servers:
                - *ref_86
              stream: true
        language:
          default:
            name: CreateOrUpdate
            description: Sets the managementpolicy to the specified storage account.
        protocol:  {}
      -
        $key: Delete
        description: Deletes the managementpolicy associated with the specified storage account.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:60'
              protocol:  {}
            -
              $key: accountName
              schema: *ref_90
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:61'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:62'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:63'
              protocol:  {}
            -
              $key: managementPolicyName
              schema: *ref_92
              description: The name of the Storage Account Management Policy. It should always be 'default'
              language:
                default:
                  name: managementPolicyName
                  description: The name of the Storage Account Management Policy. It should always be 'default'
                  uid: 'parameter:64'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}'
              method: delete
              servers:
                - *ref_86
        language:
          default:
            name: Delete
            description: Deletes the managementpolicy associated with the specified storage account.
        protocol:  {}
      -
        $key: RevokeUserDelegationKeys
        description: Revoke user delegation keys.
        request:
          parameters:
            -
              $key: resourceGroupName
              schema: *ref_89
              description: The name of the resource group within the user's subscription. The name is case insensitive.
              language:
                default:
                  name: resourceGroupName
                  description: The name of the resource group within the user's subscription. The name is case insensitive.
                  uid: 'parameter:65'
              protocol:  {}
            -
              $key: accountName
              schema:
                $key: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·parameters·1·schema
                type: string
                description: MISSING-SCHEMA-DESCRIPTION-STRING
                apiVersions:
                  -
                    version: '2019-04-01'
                maxLength: 24
                minLength: 3
                language:
                  default:
                    name: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·parameters·1·schema
                    description: MISSING-SCHEMA-DESCRIPTION-STRING
                protocol:  {}
              description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
              language:
                default:
                  name: accountName
                  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                  uid: 'parameter:66'
              protocol:  {}
            -
              $key: api-version
              schema: *ref_87
              description: The API version to use for this operation.
              language:
                default:
                  name: api-version
                  description: The API version to use for this operation.
                  uid: 'parameter:67'
              protocol:  {}
            -
              $key: subscriptionId
              schema: *ref_88
              description: The ID of the target subscription.
              language:
                default:
                  name: subscriptionId
                  description: The ID of the target subscription.
                  uid: 'parameter:68'
              protocol:  {}
          language:
            default:
              name: ''
              description: ''
          protocol:
            http:
              path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys'
              method: post
              servers:
                - *ref_86
        language:
          default:
            name: RevokeUserDelegationKeys
            description: Revoke user delegation keys.
        protocol:  {}
language:
  default:
    name: ''
    description: ''
protocol:
  http:
    servers:
      - *ref_86
