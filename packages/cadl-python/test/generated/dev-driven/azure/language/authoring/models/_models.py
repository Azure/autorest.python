# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Mapping, Optional, TYPE_CHECKING, Union, overload

from .. import _model_base
from .._model_base import rest_field

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class CustomPageDeployment(_model_base.Model):
    """Paged collection of Deployment items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The Deployment items on this page. Required.
    :vartype value: list[~azure.language.authoring.models.Deployment]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["Deployment"] = rest_field(name="value")
    """The Deployment items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    @overload
    def __init__(
        self,
        *,
        value: List["_models.Deployment"],
        next_link: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class CustomPageProject(_model_base.Model):
    """Paged collection of Project items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The Project items on this page. Required.
    :vartype value: list[~azure.language.authoring.models.Project]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["Project"] = rest_field(name="value")
    """The Project items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    @overload
    def __init__(
        self,
        *,
        value: List["_models.Project"],
        next_link: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class Deployment(_model_base.Model):
    """Deployment.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Required.
    :vartype name: str
    """

    name: str = rest_field(name="name")
    """Required. """

    @overload
    def __init__(
        self,
        *,
        name: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DeploymentJob(_model_base.Model):
    """DeploymentJob.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar job_id: The job ID. Required.
    :vartype job_id: str
    :ivar created_date_time: The creation date time of the job. Required.
    :vartype created_date_time: str
    :ivar last_updated_date_time: The the last date time the job was updated. Required.
    :vartype last_updated_date_time: str
    :ivar expiration_date_time: The expiration date time of the job. Required.
    :vartype expiration_date_time: str
    :ivar status: The job status. Required. Known values are: "notStarted", "running", "succeeded",
     "failed", "cancelled", "cancelling", and "partiallyCompleted".
    :vartype status: str or ~azure.language.authoring.models.JobStatus
    :ivar warnings: The warnings that were encountered while executing the job. Required.
    :vartype warnings: list[~azure.language.authoring.models.JobWarning]
    :ivar errors: The errors encountered while executing the job. Required.
    :vartype errors: ~azure.language.authoring.models.Error
    :ivar id: Required.
    :vartype id: str
    """

    job_id: str = rest_field(name="jobId")
    """The job ID. Required. """
    created_date_time: str = rest_field(name="createdDateTime", readonly=True)
    """The creation date time of the job. Required. """
    last_updated_date_time: str = rest_field(name="lastUpdatedDateTime", readonly=True)
    """The the last date time the job was updated. Required. """
    expiration_date_time: str = rest_field(name="expirationDateTime", readonly=True)
    """The expiration date time of the job. Required. """
    status: Union[str, "JobStatus"] = rest_field(name="status")
    """The job status. Required. Known values are: \"notStarted\", \"running\", \"succeeded\", \"failed\", \"cancelled\", \"cancelling\", and \"partiallyCompleted\"."""
    warnings: List["JobWarning"] = rest_field(name="warnings")
    """The warnings that were encountered while executing the job. Required. """
    errors: "Error" = rest_field(name="errors")
    """The errors encountered while executing the job. Required. """
    id: str = rest_field(name="id")
    """Required. """

    @overload
    def __init__(
        self,
        *,
        job_id: str,
        status: Union[str, "_models.JobStatus"],
        warnings: List["_models.JobWarning"],
        errors: "_models.Error",
        id: str,  # pylint: disable=redefined-builtin
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class Error(_model_base.Model):
    """The error object.

    All required parameters must be populated in order to send to Azure.

    :ivar code: One of a server-defined set of error codes. Required.
    :vartype code: str
    :ivar message: A human-readable representation of the error. Required.
    :vartype message: str
    :ivar target: The target of the error.
    :vartype target: str
    :ivar details: An array of details about specific errors that led to this reported error.
     Required.
    :vartype details: list[~azure.language.authoring.models.Error]
    :ivar innererror: An object containing more specific information than the current object about
     the error.
    :vartype innererror: ~azure.language.authoring.models.InnerError
    """

    code: str = rest_field(name="code")
    """One of a server-defined set of error codes. Required. """
    message: str = rest_field(name="message")
    """A human-readable representation of the error. Required. """
    target: Optional[str] = rest_field(name="target")
    """The target of the error. """
    details: List["Error"] = rest_field(name="details")
    """An array of details about specific errors that led to this reported error. Required. """
    innererror: Optional["InnerError"] = rest_field(name="innererror")
    """An object containing more specific information than the current object about the error. """

    @overload
    def __init__(
        self,
        *,
        code: str,
        message: str,
        details: List["_models.Error"],
        target: Optional[str] = None,
        innererror: Optional["_models.InnerError"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class ErrorResponse(_model_base.Model):
    """A response containing error details.

    All required parameters must be populated in order to send to Azure.

    :ivar error: The error object. Required.
    :vartype error: ~azure.language.authoring.models.Error
    """

    error: "Error" = rest_field(name="error")
    """The error object. Required. """

    @overload
    def __init__(
        self,
        *,
        error: "_models.Error",
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class InnerError(_model_base.Model):
    """An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.

    All required parameters must be populated in order to send to Azure.

    :ivar code: One of a server-defined set of error codes. Required.
    :vartype code: str
    :ivar innererror: Inner error.
    :vartype innererror: ~azure.language.authoring.models.InnerError
    """

    code: str = rest_field(name="code")
    """One of a server-defined set of error codes. Required. """
    innererror: Optional["InnerError"] = rest_field(name="innererror")
    """Inner error. """

    @overload
    def __init__(
        self,
        *,
        code: str,
        innererror: Optional["_models.InnerError"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class JobWarning(_model_base.Model):
    """Represents a warning that was encountered while executing the request.

    All required parameters must be populated in order to send to Azure.

    :ivar code: The warning code. Required.
    :vartype code: str
    :ivar message: The warning message. Required.
    :vartype message: str
    """

    code: str = rest_field(name="code")
    """The warning code. Required. """
    message: str = rest_field(name="message")
    """The warning message. Required. """

    @overload
    def __init__(
        self,
        *,
        code: str,
        message: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class OperationStatus(_model_base.Model):
    """Status monitor resource for long running operations.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The unique ID of the operation. Required.
    :vartype id: str
    :ivar status: The status of the operation. Required. Known values are: "InProgress",
     "Succeeded", "Failed", and "Canceled".
    :vartype status: str or ~azure.language.authoring.models.OperationState
    :ivar error: Error object that describes the error when status is "Failed".
    :vartype error: ~azure.language.authoring.models.Error
    """

    id: str = rest_field(name="id")
    """The unique ID of the operation. Required. """
    status: Union[str, "OperationState"] = rest_field(name="status")
    """The status of the operation. Required. Known values are: \"InProgress\", \"Succeeded\", \"Failed\", and \"Canceled\"."""
    error: Optional["Error"] = rest_field(name="error")
    """Error object that describes the error when status is \"Failed\". """

    @overload
    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        status: Union[str, "_models.OperationState"],
        error: Optional["_models.Error"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedSupportedLanguage(_model_base.Model):
    """Paged collection of SupportedLanguage items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The SupportedLanguage items on this page. Required.
    :vartype value: list[~azure.language.authoring.models.SupportedLanguage]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["SupportedLanguage"] = rest_field(name="value")
    """The SupportedLanguage items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedTrainingConfigVersion(_model_base.Model):
    """Paged collection of TrainingConfigVersion items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The TrainingConfigVersion items on this page. Required.
    :vartype value: list[~azure.language.authoring.models.TrainingConfigVersion]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["TrainingConfigVersion"] = rest_field(name="value")
    """The TrainingConfigVersion items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class Project(_model_base.Model):  # pylint: disable=too-many-instance-attributes
    """Project.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar project_name: Required.
    :vartype project_name: str
    :ivar project_kind: The project kind. Required. Known values are:
     "CustomSingleLabelClassification", "CustomMultiLabelClassification", and
     "CustomEntityRecognition".
    :vartype project_kind: str or ~azure.language.authoring.models.ProjectKind
    :ivar storage_input_container_name: The storage container name. Required.
    :vartype storage_input_container_name: str
    :ivar settings: The project settings.
    :vartype settings: dict[str, str]
    :ivar multilingual: Whether the project would be used for multiple languages or not.
    :vartype multilingual: bool
    :ivar description: The project description.
    :vartype description: str
    :ivar language: The project language. This is BCP-47 representation of a language. For example,
     use "en" for English, "en-gb" for English (UK), "es" for Spanish etc. Required.
    :vartype language: str
    :ivar created_date_time: Represents the project creation datetime. Required.
    :vartype created_date_time: str
    :ivar last_modified_date_time: Represents the project last modification datetime. Required.
    :vartype last_modified_date_time: str
    :ivar last_trained_date_time: Represents the project last training datetime. Required.
    :vartype last_trained_date_time: str
    :ivar last_deployed_date_time: Represents the project last deployment datetime. Required.
    :vartype last_deployed_date_time: str
    """

    project_name: str = rest_field(name="projectName")
    """Required. """
    project_kind: Union[str, "ProjectKind"] = rest_field(name="projectKind")
    """The project kind. Required. Known values are: \"CustomSingleLabelClassification\", \"CustomMultiLabelClassification\", and \"CustomEntityRecognition\"."""
    storage_input_container_name: str = rest_field(name="storageInputContainerName")
    """The storage container name. Required. """
    settings: Optional[Dict[str, str]] = rest_field(name="settings")
    """The project settings. """
    multilingual: Optional[bool] = rest_field(name="multilingual")
    """Whether the project would be used for multiple languages or not. """
    description: Optional[str] = rest_field(name="description")
    """The project description. """
    language: str = rest_field(name="language")
    """The project language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc. Required. """
    created_date_time: str = rest_field(name="createdDateTime", readonly=True)
    """Represents the project creation datetime. Required. """
    last_modified_date_time: str = rest_field(name="lastModifiedDateTime", readonly=True)
    """Represents the project last modification datetime. Required. """
    last_trained_date_time: str = rest_field(name="lastTrainedDateTime", readonly=True)
    """Represents the project last training datetime. Required. """
    last_deployed_date_time: str = rest_field(name="lastDeployedDateTime", readonly=True)
    """Represents the project last deployment datetime. Required. """

    @overload
    def __init__(
        self,
        *,
        project_name: str,
        project_kind: Union[str, "_models.ProjectKind"],
        storage_input_container_name: str,
        language: str,
        settings: Optional[Dict[str, str]] = None,
        multilingual: Optional[bool] = None,
        description: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class ProjectsCreateOrUpdateRequest(_model_base.Model):
    """ProjectsCreateOrUpdateRequest.

    :ivar project_kind: The project kind. Known values are: "CustomSingleLabelClassification",
     "CustomMultiLabelClassification", and "CustomEntityRecognition".
    :vartype project_kind: str or ~azure.language.authoring.models.ProjectKind
    :ivar storage_input_container_name: The storage container name.
    :vartype storage_input_container_name: str
    :ivar settings: The project settings.
    :vartype settings: dict[str, str]
    :ivar multilingual: Whether the project would be used for multiple languages or not.
    :vartype multilingual: bool
    :ivar description: The project description.
    :vartype description: str
    :ivar language: The project language. This is BCP-47 representation of a language. For example,
     use "en" for English, "en-gb" for English (UK), "es" for Spanish etc.
    :vartype language: str
    """

    project_kind: Optional[Union[str, "ProjectKind"]] = rest_field(name="projectKind")
    """The project kind. Known values are: \"CustomSingleLabelClassification\", \"CustomMultiLabelClassification\", and \"CustomEntityRecognition\"."""
    storage_input_container_name: Optional[str] = rest_field(name="storageInputContainerName")
    """The storage container name. """
    settings: Optional[Dict[str, str]] = rest_field(name="settings")
    """The project settings. """
    multilingual: Optional[bool] = rest_field(name="multilingual")
    """Whether the project would be used for multiple languages or not. """
    description: Optional[str] = rest_field(name="description")
    """The project description. """
    language: Optional[str] = rest_field(name="language")
    """The project language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc. """

    @overload
    def __init__(
        self,
        *,
        project_kind: Optional[Union[str, "_models.ProjectKind"]] = None,
        storage_input_container_name: Optional[str] = None,
        settings: Optional[Dict[str, str]] = None,
        multilingual: Optional[bool] = None,
        description: Optional[str] = None,
        language: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class SupportedLanguage(_model_base.Model):
    """Represents a supported language.

    All required parameters must be populated in order to send to Azure.

    :ivar language_name: The language name. Required.
    :vartype language_name: str
    :ivar language_code: The language code. This is BCP-47 representation of a language. For
     example, "en" for English, "en-gb" for English (UK), "es" for Spanish etc. Required.
    :vartype language_code: str
    """

    language_name: str = rest_field(name="languageName")
    """The language name. Required. """
    language_code: str = rest_field(name="languageCode")
    """The language code. This is BCP-47 representation of a language. For example, \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc. Required. """

    @overload
    def __init__(
        self,
        *,
        language_name: str,
        language_code: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class SwapDeploymentsJob(_model_base.Model):
    """SwapDeploymentsJob.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar job_id: The job ID. Required.
    :vartype job_id: str
    :ivar created_date_time: The creation date time of the job. Required.
    :vartype created_date_time: str
    :ivar last_updated_date_time: The the last date time the job was updated. Required.
    :vartype last_updated_date_time: str
    :ivar expiration_date_time: The expiration date time of the job. Required.
    :vartype expiration_date_time: str
    :ivar status: The job status. Required. Known values are: "notStarted", "running", "succeeded",
     "failed", "cancelled", "cancelling", and "partiallyCompleted".
    :vartype status: str or ~azure.language.authoring.models.JobStatus
    :ivar warnings: The warnings that were encountered while executing the job. Required.
    :vartype warnings: list[~azure.language.authoring.models.JobWarning]
    :ivar errors: The errors encountered while executing the job. Required.
    :vartype errors: ~azure.language.authoring.models.Error
    :ivar id: Required.
    :vartype id: str
    """

    job_id: str = rest_field(name="jobId")
    """The job ID. Required. """
    created_date_time: str = rest_field(name="createdDateTime", readonly=True)
    """The creation date time of the job. Required. """
    last_updated_date_time: str = rest_field(name="lastUpdatedDateTime", readonly=True)
    """The the last date time the job was updated. Required. """
    expiration_date_time: str = rest_field(name="expirationDateTime", readonly=True)
    """The expiration date time of the job. Required. """
    status: Union[str, "JobStatus"] = rest_field(name="status")
    """The job status. Required. Known values are: \"notStarted\", \"running\", \"succeeded\", \"failed\", \"cancelled\", \"cancelling\", and \"partiallyCompleted\"."""
    warnings: List["JobWarning"] = rest_field(name="warnings")
    """The warnings that were encountered while executing the job. Required. """
    errors: "Error" = rest_field(name="errors")
    """The errors encountered while executing the job. Required. """
    id: str = rest_field(name="id")
    """Required. """

    @overload
    def __init__(
        self,
        *,
        job_id: str,
        status: Union[str, "_models.JobStatus"],
        warnings: List["_models.JobWarning"],
        errors: "_models.Error",
        id: str,  # pylint: disable=redefined-builtin
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class SwapDeploymentsOptions(_model_base.Model):
    """SwapDeploymentsOptions.

    All required parameters must be populated in order to send to Azure.

    :ivar first_deployment_name: Represents the first deployment name. Required.
    :vartype first_deployment_name: str
    :ivar second_deployment_name: Represents the second deployment name. Required.
    :vartype second_deployment_name: str
    """

    first_deployment_name: str = rest_field(name="firstDeploymentName")
    """Represents the first deployment name. Required. """
    second_deployment_name: str = rest_field(name="secondDeploymentName")
    """Represents the second deployment name. Required. """

    @overload
    def __init__(
        self,
        *,
        first_deployment_name: str,
        second_deployment_name: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class TrainingConfigVersion(_model_base.Model):
    """Represents a training config version.

    All required parameters must be populated in order to send to Azure.

    :ivar training_config_version: Represents the version of the config. Required.
    :vartype training_config_version: str
    :ivar model_expiration_date: Represents the training config version expiration date. Required.
    :vartype model_expiration_date: ~datetime.date
    """

    training_config_version: str = rest_field(name="trainingConfigVersion")
    """Represents the version of the config. Required. """
    model_expiration_date: datetime.date = rest_field(name="modelExpirationDate")
    """Represents the training config version expiration date. Required. """

    @overload
    def __init__(
        self,
        *,
        training_config_version: str,
        model_expiration_date: datetime.date,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class TrainingJobOptions(_model_base.Model):
    """Training job parameters.

    All required parameters must be populated in order to send to Azure.

    :ivar model_label: Required.
    :vartype model_label: str
    """

    model_label: str = rest_field(name="modelLabel")
    """Required. """

    @overload
    def __init__(
        self,
        *,
        model_label: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
