# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import sys
from typing import Any, List, Mapping, TYPE_CHECKING, overload

from .. import _model_base
from .._model_base import rest_field

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class InputModel(_model_base.Model):
    """Input model with nested model properties.

    All required parameters must be populated in order to send to Azure.

    :ivar nested_input_model: Required nested input model. Required.
    :vartype nested_input_model: ~nestedmodelsbasic.models.NestedInputOnlyModel
    :ivar nested_shared_model: Required nested shared model. Required.
    :vartype nested_shared_model: ~nestedmodelsbasic.models.NestedRoundTripSharedModel
    """

    nested_input_model: "_models.NestedInputOnlyModel" = rest_field()
    """Required nested input model. Required. """
    nested_shared_model: "_models.NestedRoundTripSharedModel" = rest_field()
    """Required nested shared model. Required. """

    @overload
    def __init__(
        self,
        *,
        nested_input_model: "_models.NestedInputOnlyModel",
        nested_shared_model: "_models.NestedRoundTripSharedModel",
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class NestedInputOnlyModel(_model_base.Model):
    """Model to illustrate a nested model that only appears on an input model.

    All required parameters must be populated in order to send to Azure.

    :ivar required_string: Required string, illustrating a reference type property. Required.
    :vartype required_string: str
    :ivar required_int: Required int, illustrating a value type property. Required.
    :vartype required_int: int
    :ivar required_string_list: Required collection of strings, illustrating a collection of
     reference types. Required.
    :vartype required_string_list: list[str]
    :ivar required_int_list: Required collection of ints, illustrating a collection of value types.
     Required.
    :vartype required_int_list: list[int]
    """

    required_string: str = rest_field()
    """Required string, illustrating a reference type property. Required. """
    required_int: int = rest_field()
    """Required int, illustrating a value type property. Required. """
    required_string_list: List[str] = rest_field()
    """Required collection of strings, illustrating a collection of reference types. Required. """
    required_int_list: List[int] = rest_field()
    """Required collection of ints, illustrating a collection of value types. Required. """

    @overload
    def __init__(
        self,
        *,
        required_string: str,
        required_int: int,
        required_string_list: List[str],
        required_int_list: List[int],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class NestedOutputOnlyModel(_model_base.Model):
    """Model to illustrate a nested model that only appears on an output model.

    All required parameters must be populated in order to send to Azure.

    :ivar required_string: Required string, illustrating a reference type property. Required.
    :vartype required_string: str
    :ivar required_int: Required int, illustrating a value type property. Required.
    :vartype required_int: int
    :ivar required_string_list: Required collection of strings, illustrating a collection of
     reference types. Required.
    :vartype required_string_list: list[str]
    :ivar required_int_list: Required collection of ints, illustrating a collection of value types.
     Required.
    :vartype required_int_list: list[int]
    """

    required_string: str = rest_field()
    """Required string, illustrating a reference type property. Required. """
    required_int: int = rest_field()
    """Required int, illustrating a value type property. Required. """
    required_string_list: List[str] = rest_field()
    """Required collection of strings, illustrating a collection of reference types. Required. """
    required_int_list: List[int] = rest_field()
    """Required collection of ints, illustrating a collection of value types. Required. """

    @overload
    def __init__(
        self,
        *,
        required_string: str,
        required_int: int,
        required_string_list: List[str],
        required_int_list: List[int],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class NestedRoundTripOnlyModel(_model_base.Model):
    """Model to illustrate a nested model that only appears on a nested model.

    All required parameters must be populated in order to send to Azure.

    :ivar required_string: Required string, illustrating a reference type property. Required.
    :vartype required_string: str
    :ivar required_int: Required int, illustrating a value type property. Required.
    :vartype required_int: int
    :ivar required_string_list: Required collection of strings, illustrating a collection of
     reference types. Required.
    :vartype required_string_list: list[str]
    :ivar required_int_list: Required collection of ints, illustrating a collection of value types.
     Required.
    :vartype required_int_list: list[int]
    """

    required_string: str = rest_field()
    """Required string, illustrating a reference type property. Required. """
    required_int: int = rest_field()
    """Required int, illustrating a value type property. Required. """
    required_string_list: List[str] = rest_field()
    """Required collection of strings, illustrating a collection of reference types. Required. """
    required_int_list: List[int] = rest_field()
    """Required collection of ints, illustrating a collection of value types. Required. """

    @overload
    def __init__(
        self,
        *,
        required_string: str,
        required_int: int,
        required_string_list: List[str],
        required_int_list: List[int],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class NestedRoundTripSharedModel(_model_base.Model):
    """Model to illustrate a nested model that appears as a nested model on input, output, and round-trip models.

    All required parameters must be populated in order to send to Azure.

    :ivar required_string: Required string, illustrating a reference type property. Required.
    :vartype required_string: str
    :ivar required_int: Required int, illustrating a value type property. Required.
    :vartype required_int: int
    :ivar required_string_list: Required collection of strings, illustrating a collection of
     reference types. Required.
    :vartype required_string_list: list[str]
    :ivar required_int_list: Required collection of ints, illustrating a collection of value types.
     Required.
    :vartype required_int_list: list[int]
    """

    required_string: str = rest_field()
    """Required string, illustrating a reference type property. Required. """
    required_int: int = rest_field()
    """Required int, illustrating a value type property. Required. """
    required_string_list: List[str] = rest_field()
    """Required collection of strings, illustrating a collection of reference types. Required. """
    required_int_list: List[int] = rest_field()
    """Required collection of ints, illustrating a collection of value types. Required. """

    @overload
    def __init__(
        self,
        *,
        required_string: str,
        required_int: int,
        required_string_list: List[str],
        required_int_list: List[int],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class OutputModel(_model_base.Model):
    """Output model with nested model properties.

    All required parameters must be populated in order to send to Azure.

    :ivar nested_output_model: Required nested output model. Required.
    :vartype nested_output_model: ~nestedmodelsbasic.models.NestedOutputOnlyModel
    :ivar nested_shared_model: Required nested shared model. Required.
    :vartype nested_shared_model: ~nestedmodelsbasic.models.NestedRoundTripSharedModel
    """

    nested_output_model: "_models.NestedOutputOnlyModel" = rest_field()
    """Required nested output model. Required. """
    nested_shared_model: "_models.NestedRoundTripSharedModel" = rest_field()
    """Required nested shared model. Required. """

    @overload
    def __init__(
        self,
        *,
        nested_output_model: "_models.NestedOutputOnlyModel",
        nested_shared_model: "_models.NestedRoundTripSharedModel",
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class RoundTripModel(_model_base.Model):
    """Round-trip model with nested model properties.

    All required parameters must be populated in order to send to Azure.

    :ivar nested_round_trip_model: Required nested round-trip model. Required.
    :vartype nested_round_trip_model: ~nestedmodelsbasic.models.NestedRoundTripOnlyModel
    :ivar nested_shared_model: Required nested shared model. Required.
    :vartype nested_shared_model: ~nestedmodelsbasic.models.NestedRoundTripSharedModel
    """

    nested_round_trip_model: "_models.NestedRoundTripOnlyModel" = rest_field()
    """Required nested round-trip model. Required. """
    nested_shared_model: "_models.NestedRoundTripSharedModel" = rest_field()
    """Required nested shared model. Required. """

    @overload
    def __init__(
        self,
        *,
        nested_round_trip_model: "_models.NestedRoundTripOnlyModel",
        nested_shared_model: "_models.NestedRoundTripSharedModel",
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
