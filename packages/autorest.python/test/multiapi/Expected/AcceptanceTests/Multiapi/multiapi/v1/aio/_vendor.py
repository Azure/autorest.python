# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from abc import ABC
from collections.abc import AsyncIterator
from typing import Optional, Protocol, TYPE_CHECKING, TypeVar

from azure.core.pipeline.transport import HttpRequest

from ._configuration import MultiapiServiceClientConfiguration

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core import AsyncPipelineClient

    from ..._serialization import Deserializer, Serializer


class MultiapiServiceClientMixinABC(ABC):
    """DO NOT use this class. It is for internal typing use only."""

    _client: "AsyncPipelineClient"
    _config: MultiapiServiceClientConfiguration
    _serialize: "Serializer"
    _deserialize: "Deserializer"


ReturnType = TypeVar("ReturnType")


class AsyncPageableProtocol(Protocol[ReturnType]):
    async def __aiter__(self) -> AsyncIterator[ReturnType]:
        pass

    async def __anext__(self) -> ReturnType:
        pass

    def by_page(self, continuation_token: Optional[str] = None) -> AsyncIterator[AsyncIterator[ReturnType]]:
        pass
