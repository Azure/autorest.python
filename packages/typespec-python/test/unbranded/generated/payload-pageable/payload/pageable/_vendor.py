# --------------------------------------------------------------------------
# Copyright (c) Unbranded Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Unbranded (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from abc import ABC
from collections.abc import Iterator
from typing import Optional, Protocol, TYPE_CHECKING, TypeVar

from ._configuration import PageableClientConfiguration

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from corehttp.runtime import PipelineClient

    from ._serialization import Deserializer, Serializer


class PageableClientMixinABC(ABC):
    """DO NOT use this class. It is for internal typing use only."""

    _client: "PipelineClient"
    _config: PageableClientConfiguration
    _serialize: "Serializer"
    _deserialize: "Deserializer"


ReturnType = TypeVar("ReturnType")


class PageableProtocol(Protocol[ReturnType]):
    def __iter__(self) -> Iterator[ReturnType]:
        pass

    def __next__(self) -> ReturnType:
        pass

    def by_page(self, continuation_token: Optional[str] = None) -> Iterator[Iterator[ReturnType]]:
        pass
