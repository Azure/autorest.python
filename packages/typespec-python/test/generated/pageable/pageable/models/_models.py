# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, List, Mapping, Optional, TYPE_CHECKING, overload

from .. import _model_base
from .._model_base import rest_field

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class User(_model_base.Model):
    """User.

    All required parameters must be populated in order to send to Azure.

    :ivar id: User id. Required.
    :vartype id: int
    :ivar name: User name. Required.
    :vartype name: str
    """

    id: int = rest_field()
    """User id. Required."""
    name: str = rest_field()
    """User name. Required."""

    @overload
    def __init__(
        self,
        *,
        id: int,  # pylint: disable=redefined-builtin
        name: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class UserListResults(_model_base.Model):
    """UserListResults.

    All required parameters must be populated in order to send to Azure.

    :ivar items: List of items. Required.
    :vartype items: list[~pageable.models.User]
    :ivar next_link: Link to fetch more items.
    :vartype next_link: str
    """

    items: List["_models.User"] = rest_field()
    """List of items. Required."""
    next_link: Optional[str] = rest_field(name="nextLink")
    """Link to fetch more items."""

    @overload
    def __init__(
        self,
        *,
        items: List["_models.User"],
        next_link: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)
