# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import Int32ValueOperations  # type: ignore
from ._operations import Int64ValueOperations  # type: ignore
from ._operations import BooleanValueOperations  # type: ignore
from ._operations import StringValueOperations  # type: ignore
from ._operations import Float32ValueOperations  # type: ignore
from ._operations import DatetimeValueOperations  # type: ignore
from ._operations import DurationValueOperations  # type: ignore
from ._operations import UnknownValueOperations  # type: ignore
from ._operations import ModelValueOperations  # type: ignore
from ._operations import NullableFloatValueOperations  # type: ignore
from ._operations import NullableInt32ValueOperations  # type: ignore
from ._operations import NullableBooleanValueOperations  # type: ignore
from ._operations import NullableStringValueOperations  # type: ignore
from ._operations import NullableModelValueOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Int32ValueOperations",
    "Int64ValueOperations",
    "BooleanValueOperations",
    "StringValueOperations",
    "Float32ValueOperations",
    "DatetimeValueOperations",
    "DurationValueOperations",
    "UnknownValueOperations",
    "ModelValueOperations",
    "NullableFloatValueOperations",
    "NullableInt32ValueOperations",
    "NullableBooleanValueOperations",
    "NullableStringValueOperations",
    "NullableModelValueOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
,line-too-long,useless-suppression