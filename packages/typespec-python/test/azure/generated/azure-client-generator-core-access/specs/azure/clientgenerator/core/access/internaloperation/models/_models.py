# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=useless-super-delegation

from typing import Any, Mapping, overload

from ... import _model_base
from ..._model_base import rest_field


class InternalDecoratorModelInInternal(_model_base.Model):
    """Used in an internal operation, should be generated but not exported.


    :ivar name: Required.
    :vartype name: str
    """

    name: str = rest_field()
    """Required."""


class NoDecoratorModelInInternal(_model_base.Model):
    """Used in an internal operation, should be generated but not exported.


    :ivar name: Required.
    :vartype name: str
    """

    name: str = rest_field()
    """Required."""


class PublicDecoratorModelInInternal(_model_base.Model):
    """Used in an internal operation but with public decorator, should be generated and exported.


    :ivar name: Required.
    :vartype name: str
    """

    name: str = rest_field()
    """Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)
