# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class ArmResource(_serialization.Model):
    """Common properties for all ARM resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
     Required.
    :vartype id: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts". Required.
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.spheremsrest.models.SystemData
    """

    _validation = {
        "id": {"required": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        type: str,
        system_data: Optional["_models.SystemData"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Fully qualified resource ID for the resource. Ex -
         /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
         Required.
        :paramtype id: str
        :keyword type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
         "Microsoft.Storage/storageAccounts". Required.
        :paramtype type: str
        :keyword system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
         information.
        :paramtype system_data: ~azure.mgmt.spheremsrest.models.SystemData
        """
        super().__init__(**kwargs)
        self.id = id
        self.type = type
        self.system_data = system_data


class TrackedResourceBase(ArmResource):
    """The resource model definition for an Azure Resource Manager tracked top level resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
     Required.
    :vartype id: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts". Required.
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.spheremsrest.models.SystemData
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "id": {"required": True},
        "type": {"required": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        type: str,
        location: str,
        system_data: Optional["_models.SystemData"] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Fully qualified resource ID for the resource. Ex -
         /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
         Required.
        :paramtype id: str
        :keyword type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
         "Microsoft.Storage/storageAccounts". Required.
        :paramtype type: str
        :keyword system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
         information.
        :paramtype system_data: ~azure.mgmt.spheremsrest.models.SystemData
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(id=id, type=type, system_data=system_data, **kwargs)
        self.location = location
        self.tags = tags


class Catalog(TrackedResourceBase):
    """An Azure Sphere catalog.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
     Required.
    :vartype id: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts". Required.
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.spheremsrest.models.SystemData
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.spheremsrest.models.CatalogProperties
    """

    _validation = {
        "id": {"required": True},
        "type": {"required": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "CatalogProperties"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        type: str,
        location: str,
        system_data: Optional["_models.SystemData"] = None,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.CatalogProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Fully qualified resource ID for the resource. Ex -
         /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
         Required.
        :paramtype id: str
        :keyword type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
         "Microsoft.Storage/storageAccounts". Required.
        :paramtype type: str
        :keyword system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
         information.
        :paramtype system_data: ~azure.mgmt.spheremsrest.models.SystemData
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.spheremsrest.models.CatalogProperties
        """
        super().__init__(id=id, type=type, system_data=system_data, location=location, tags=tags, **kwargs)
        self.properties = properties


class CatalogListResult(_serialization.Model):
    """The response of a Catalog list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Catalog items on this page. Required.
    :vartype value: list[~azure.mgmt.spheremsrest.models.Catalog]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Catalog]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Catalog"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Catalog items on this page. Required.
        :paramtype value: list[~azure.mgmt.spheremsrest.models.Catalog]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class CatalogProperties(_serialization.Model):
    """Catalog properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
    """

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self, *, provisioning_state: Optional[Union["_models.ProvisioningState", str]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword provisioning_state: The status of the last operation. Known values are: "Succeeded",
         "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
        :paramtype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.provisioning_state = provisioning_state


class CatalogUpdate(_serialization.Model):
    """The type used for update operations of the Catalog.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class ProxyResourceBase(ArmResource):
    """The base proxy resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
     Required.
    :vartype id: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts". Required.
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.spheremsrest.models.SystemData
    """


class Certificate(ProxyResourceBase):
    """An certificate resource belonging to a catalog resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
     Required.
    :vartype id: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts". Required.
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.spheremsrest.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.spheremsrest.models.CertificateProperties
    """

    _validation = {
        "id": {"required": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "CertificateProperties"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        type: str,
        system_data: Optional["_models.SystemData"] = None,
        properties: Optional["_models.CertificateProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Fully qualified resource ID for the resource. Ex -
         /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
         Required.
        :paramtype id: str
        :keyword type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
         "Microsoft.Storage/storageAccounts". Required.
        :paramtype type: str
        :keyword system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
         information.
        :paramtype system_data: ~azure.mgmt.spheremsrest.models.SystemData
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.spheremsrest.models.CertificateProperties
        """
        super().__init__(id=id, type=type, system_data=system_data, **kwargs)
        self.properties = properties


class CertificateChainResponse(_serialization.Model):
    """The certificate chain response.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar certificate_chain: The certificate chain.
    :vartype certificate_chain: str
    """

    _attribute_map = {
        "certificate_chain": {"key": "certificateChain", "type": "str"},
    }

    def __init__(self, *, certificate_chain: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword certificate_chain: The certificate chain.
        :paramtype certificate_chain: str
        """
        super().__init__(**kwargs)
        self.certificate_chain = certificate_chain


class CertificateListResult(_serialization.Model):
    """The response of a Certificate list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Certificate items on this page. Required.
    :vartype value: list[~azure.mgmt.spheremsrest.models.Certificate]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Certificate]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Certificate"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Certificate items on this page. Required.
        :paramtype value: list[~azure.mgmt.spheremsrest.models.Certificate]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class CertificateProperties(_serialization.Model):
    """The properties of certificate.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar certificate: The certificate as a UTF-8 encoded base 64 string.
    :vartype certificate: str
    :ivar status: The certificate status. Known values are: "Active", "Inactive", "Expired", and
     "Revoked".
    :vartype status: str or ~azure.mgmt.spheremsrest.models.CertificateStatus
    :ivar subject: The certificate subject.
    :vartype subject: str
    :ivar thumbprint: The certificate thumbprint.
    :vartype thumbprint: str
    :ivar expiry_utc: The certificate expiry date.
    :vartype expiry_utc: ~datetime.datetime
    :ivar not_before_utc: The certificate not before date.
    :vartype not_before_utc: ~datetime.datetime
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
    """

    _attribute_map = {
        "certificate": {"key": "certificate", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "subject": {"key": "subject", "type": "str"},
        "thumbprint": {"key": "thumbprint", "type": "str"},
        "expiry_utc": {"key": "expiryUtc", "type": "iso-8601"},
        "not_before_utc": {"key": "notBeforeUtc", "type": "iso-8601"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        certificate: Optional[str] = None,
        status: Optional[Union["_models.CertificateStatus", str]] = None,
        subject: Optional[str] = None,
        thumbprint: Optional[str] = None,
        expiry_utc: Optional[datetime.datetime] = None,
        not_before_utc: Optional[datetime.datetime] = None,
        provisioning_state: Optional[Union["_models.ProvisioningState", str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword certificate: The certificate as a UTF-8 encoded base 64 string.
        :paramtype certificate: str
        :keyword status: The certificate status. Known values are: "Active", "Inactive", "Expired", and
         "Revoked".
        :paramtype status: str or ~azure.mgmt.spheremsrest.models.CertificateStatus
        :keyword subject: The certificate subject.
        :paramtype subject: str
        :keyword thumbprint: The certificate thumbprint.
        :paramtype thumbprint: str
        :keyword expiry_utc: The certificate expiry date.
        :paramtype expiry_utc: ~datetime.datetime
        :keyword not_before_utc: The certificate not before date.
        :paramtype not_before_utc: ~datetime.datetime
        :keyword provisioning_state: The status of the last operation. Known values are: "Succeeded",
         "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
        :paramtype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.certificate = certificate
        self.status = status
        self.subject = subject
        self.thumbprint = thumbprint
        self.expiry_utc = expiry_utc
        self.not_before_utc = not_before_utc
        self.provisioning_state = provisioning_state


class ClaimDevicesRequest(_serialization.Model):
    """Request to the action call to bulk claim devices.

    All required parameters must be populated in order to send to server.

    :ivar device_identifiers: Device identifiers of the devices to be claimed. Required.
    :vartype device_identifiers: list[str]
    """

    _validation = {
        "device_identifiers": {"required": True},
    }

    _attribute_map = {
        "device_identifiers": {"key": "deviceIdentifiers", "type": "[str]"},
    }

    def __init__(self, *, device_identifiers: List[str], **kwargs: Any) -> None:
        """
        :keyword device_identifiers: Device identifiers of the devices to be claimed. Required.
        :paramtype device_identifiers: list[str]
        """
        super().__init__(**kwargs)
        self.device_identifiers = device_identifiers


class CountElementsResponse(_serialization.Model):
    """Response of the count for elements.

    All required parameters must be populated in order to send to server.

    :ivar value: Number of children resources in parent resource. Required.
    :vartype value: int
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "int"},
    }

    def __init__(self, *, value: int, **kwargs: Any) -> None:
        """
        :keyword value: Number of children resources in parent resource. Required.
        :paramtype value: int
        """
        super().__init__(**kwargs)
        self.value = value


class CountDeviceResponse(CountElementsResponse):
    """Response to the action call for count devices in a catalog.

    All required parameters must be populated in order to send to server.

    :ivar value: Number of children resources in parent resource. Required.
    :vartype value: int
    """


class Deployment(ProxyResourceBase):
    """An deployment resource belonging to a device group resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
     Required.
    :vartype id: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts". Required.
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.spheremsrest.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.spheremsrest.models.DeploymentProperties
    """

    _validation = {
        "id": {"required": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "DeploymentProperties"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        type: str,
        system_data: Optional["_models.SystemData"] = None,
        properties: Optional["_models.DeploymentProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Fully qualified resource ID for the resource. Ex -
         /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
         Required.
        :paramtype id: str
        :keyword type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
         "Microsoft.Storage/storageAccounts". Required.
        :paramtype type: str
        :keyword system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
         information.
        :paramtype system_data: ~azure.mgmt.spheremsrest.models.SystemData
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.spheremsrest.models.DeploymentProperties
        """
        super().__init__(id=id, type=type, system_data=system_data, **kwargs)
        self.properties = properties


class DeploymentListResult(_serialization.Model):
    """The response of a Deployment list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Deployment items on this page. Required.
    :vartype value: list[~azure.mgmt.spheremsrest.models.Deployment]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Deployment]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Deployment"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Deployment items on this page. Required.
        :paramtype value: list[~azure.mgmt.spheremsrest.models.Deployment]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DeploymentProperties(_serialization.Model):
    """The properties of deployment.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar deployment_id: Deployment ID.
    :vartype deployment_id: str
    :ivar deployed_images: Images deployed.
    :vartype deployed_images: list[~azure.mgmt.spheremsrest.models.Image]
    :ivar deployment_date_utc: Deployment date UTC.
    :vartype deployment_date_utc: ~datetime.datetime
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
    """

    _attribute_map = {
        "deployment_id": {"key": "deploymentId", "type": "str"},
        "deployed_images": {"key": "deployedImages", "type": "[Image]"},
        "deployment_date_utc": {"key": "deploymentDateUtc", "type": "iso-8601"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        deployment_id: Optional[str] = None,
        deployed_images: Optional[List["_models.Image"]] = None,
        deployment_date_utc: Optional[datetime.datetime] = None,
        provisioning_state: Optional[Union["_models.ProvisioningState", str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword deployment_id: Deployment ID.
        :paramtype deployment_id: str
        :keyword deployed_images: Images deployed.
        :paramtype deployed_images: list[~azure.mgmt.spheremsrest.models.Image]
        :keyword deployment_date_utc: Deployment date UTC.
        :paramtype deployment_date_utc: ~datetime.datetime
        :keyword provisioning_state: The status of the last operation. Known values are: "Succeeded",
         "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
        :paramtype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.deployment_id = deployment_id
        self.deployed_images = deployed_images
        self.deployment_date_utc = deployment_date_utc
        self.provisioning_state = provisioning_state


class Device(ProxyResourceBase):
    """An device resource belonging to a device group resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
     Required.
    :vartype id: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts". Required.
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.spheremsrest.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.spheremsrest.models.DeviceProperties
    """

    _validation = {
        "id": {"required": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "DeviceProperties"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        type: str,
        system_data: Optional["_models.SystemData"] = None,
        properties: Optional["_models.DeviceProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Fully qualified resource ID for the resource. Ex -
         /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
         Required.
        :paramtype id: str
        :keyword type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
         "Microsoft.Storage/storageAccounts". Required.
        :paramtype type: str
        :keyword system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
         information.
        :paramtype system_data: ~azure.mgmt.spheremsrest.models.SystemData
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.spheremsrest.models.DeviceProperties
        """
        super().__init__(id=id, type=type, system_data=system_data, **kwargs)
        self.properties = properties


class DeviceGroup(ProxyResourceBase):
    """An device group resource belonging to a product resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
     Required.
    :vartype id: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts". Required.
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.spheremsrest.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.spheremsrest.models.DeviceGroupProperties
    """

    _validation = {
        "id": {"required": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "DeviceGroupProperties"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        type: str,
        system_data: Optional["_models.SystemData"] = None,
        properties: Optional["_models.DeviceGroupProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Fully qualified resource ID for the resource. Ex -
         /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
         Required.
        :paramtype id: str
        :keyword type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
         "Microsoft.Storage/storageAccounts". Required.
        :paramtype type: str
        :keyword system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
         information.
        :paramtype system_data: ~azure.mgmt.spheremsrest.models.SystemData
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.spheremsrest.models.DeviceGroupProperties
        """
        super().__init__(id=id, type=type, system_data=system_data, **kwargs)
        self.properties = properties


class DeviceGroupListResult(_serialization.Model):
    """The response of a DeviceGroup list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The DeviceGroup items on this page. Required.
    :vartype value: list[~azure.mgmt.spheremsrest.models.DeviceGroup]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[DeviceGroup]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.DeviceGroup"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The DeviceGroup items on this page. Required.
        :paramtype value: list[~azure.mgmt.spheremsrest.models.DeviceGroup]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DeviceGroupProperties(_serialization.Model):
    """The properties of deviceGroup.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar description: Description of the device group.
    :vartype description: str
    :ivar os_feed_type: Operating system feed type of the device group. Known values are: "Retail"
     and "RetailEval".
    :vartype os_feed_type: str or ~azure.mgmt.spheremsrest.models.OSFeedType
    :ivar update_policy: Update policy of the device group. Known values are: "UpdateAll" and
     "No3rdPartyAppUpdates".
    :vartype update_policy: str or ~azure.mgmt.spheremsrest.models.UpdatePolicy
    :ivar allow_crash_dumps_collection: Flag to define if the user allows for crash dump
     collection. Known values are: "Enabled" and "Disabled".
    :vartype allow_crash_dumps_collection: str or
     ~azure.mgmt.spheremsrest.models.AllowCrashDumpCollection
    :ivar regional_data_boundary: Regional data boundary for the device group. Known values are:
     "None" and "EU".
    :vartype regional_data_boundary: str or ~azure.mgmt.spheremsrest.models.RegionalDataBoundary
    :ivar has_deployment: Deployment status for the device group.
    :vartype has_deployment: bool
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "os_feed_type": {"key": "osFeedType", "type": "str"},
        "update_policy": {"key": "updatePolicy", "type": "str"},
        "allow_crash_dumps_collection": {"key": "allowCrashDumpsCollection", "type": "str"},
        "regional_data_boundary": {"key": "regionalDataBoundary", "type": "str"},
        "has_deployment": {"key": "hasDeployment", "type": "bool"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        os_feed_type: Optional[Union["_models.OSFeedType", str]] = None,
        update_policy: Optional[Union["_models.UpdatePolicy", str]] = None,
        allow_crash_dumps_collection: Optional[Union["_models.AllowCrashDumpCollection", str]] = None,
        regional_data_boundary: Optional[Union["_models.RegionalDataBoundary", str]] = None,
        has_deployment: Optional[bool] = None,
        provisioning_state: Optional[Union["_models.ProvisioningState", str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: Description of the device group.
        :paramtype description: str
        :keyword os_feed_type: Operating system feed type of the device group. Known values are:
         "Retail" and "RetailEval".
        :paramtype os_feed_type: str or ~azure.mgmt.spheremsrest.models.OSFeedType
        :keyword update_policy: Update policy of the device group. Known values are: "UpdateAll" and
         "No3rdPartyAppUpdates".
        :paramtype update_policy: str or ~azure.mgmt.spheremsrest.models.UpdatePolicy
        :keyword allow_crash_dumps_collection: Flag to define if the user allows for crash dump
         collection. Known values are: "Enabled" and "Disabled".
        :paramtype allow_crash_dumps_collection: str or
         ~azure.mgmt.spheremsrest.models.AllowCrashDumpCollection
        :keyword regional_data_boundary: Regional data boundary for the device group. Known values are:
         "None" and "EU".
        :paramtype regional_data_boundary: str or ~azure.mgmt.spheremsrest.models.RegionalDataBoundary
        :keyword has_deployment: Deployment status for the device group.
        :paramtype has_deployment: bool
        :keyword provisioning_state: The status of the last operation. Known values are: "Succeeded",
         "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
        :paramtype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.description = description
        self.os_feed_type = os_feed_type
        self.update_policy = update_policy
        self.allow_crash_dumps_collection = allow_crash_dumps_collection
        self.regional_data_boundary = regional_data_boundary
        self.has_deployment = has_deployment
        self.provisioning_state = provisioning_state


class DeviceGroupUpdate(_serialization.Model):
    """The type used for update operations of the DeviceGroup.

    :ivar properties:
    :vartype properties: ~azure.mgmt.spheremsrest.models.DeviceGroupUpdateProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "DeviceGroupUpdateProperties"},
    }

    def __init__(self, *, properties: Optional["_models.DeviceGroupUpdateProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties:
        :paramtype properties: ~azure.mgmt.spheremsrest.models.DeviceGroupUpdateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class DeviceGroupUpdateProperties(_serialization.Model):
    """The updatable properties of the DeviceGroup.

    :ivar description: Description of the device group.
    :vartype description: str
    :ivar os_feed_type: Operating system feed type of the device group. Known values are: "Retail"
     and "RetailEval".
    :vartype os_feed_type: str or ~azure.mgmt.spheremsrest.models.OSFeedType
    :ivar update_policy: Update policy of the device group. Known values are: "UpdateAll" and
     "No3rdPartyAppUpdates".
    :vartype update_policy: str or ~azure.mgmt.spheremsrest.models.UpdatePolicy
    :ivar allow_crash_dumps_collection: Flag to define if the user allows for crash dump
     collection. Known values are: "Enabled" and "Disabled".
    :vartype allow_crash_dumps_collection: str or
     ~azure.mgmt.spheremsrest.models.AllowCrashDumpCollection
    :ivar regional_data_boundary: Regional data boundary for the device group. Known values are:
     "None" and "EU".
    :vartype regional_data_boundary: str or ~azure.mgmt.spheremsrest.models.RegionalDataBoundary
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "os_feed_type": {"key": "osFeedType", "type": "str"},
        "update_policy": {"key": "updatePolicy", "type": "str"},
        "allow_crash_dumps_collection": {"key": "allowCrashDumpsCollection", "type": "str"},
        "regional_data_boundary": {"key": "regionalDataBoundary", "type": "str"},
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        os_feed_type: Optional[Union["_models.OSFeedType", str]] = None,
        update_policy: Optional[Union["_models.UpdatePolicy", str]] = None,
        allow_crash_dumps_collection: Optional[Union["_models.AllowCrashDumpCollection", str]] = None,
        regional_data_boundary: Optional[Union["_models.RegionalDataBoundary", str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: Description of the device group.
        :paramtype description: str
        :keyword os_feed_type: Operating system feed type of the device group. Known values are:
         "Retail" and "RetailEval".
        :paramtype os_feed_type: str or ~azure.mgmt.spheremsrest.models.OSFeedType
        :keyword update_policy: Update policy of the device group. Known values are: "UpdateAll" and
         "No3rdPartyAppUpdates".
        :paramtype update_policy: str or ~azure.mgmt.spheremsrest.models.UpdatePolicy
        :keyword allow_crash_dumps_collection: Flag to define if the user allows for crash dump
         collection. Known values are: "Enabled" and "Disabled".
        :paramtype allow_crash_dumps_collection: str or
         ~azure.mgmt.spheremsrest.models.AllowCrashDumpCollection
        :keyword regional_data_boundary: Regional data boundary for the device group. Known values are:
         "None" and "EU".
        :paramtype regional_data_boundary: str or ~azure.mgmt.spheremsrest.models.RegionalDataBoundary
        """
        super().__init__(**kwargs)
        self.description = description
        self.os_feed_type = os_feed_type
        self.update_policy = update_policy
        self.allow_crash_dumps_collection = allow_crash_dumps_collection
        self.regional_data_boundary = regional_data_boundary


class DeviceInsight(_serialization.Model):
    """Device insight report.

    All required parameters must be populated in order to send to server.

    :ivar device_id: Device ID. Required.
    :vartype device_id: str
    :ivar description: Event description. Required.
    :vartype description: str
    :ivar start_timestamp_utc: Event start timestamp. Required.
    :vartype start_timestamp_utc: ~datetime.datetime
    :ivar end_timestamp_utc: Event end timestamp. Required.
    :vartype end_timestamp_utc: ~datetime.datetime
    :ivar event_category: Event category. Required.
    :vartype event_category: str
    :ivar event_class: Event class. Required.
    :vartype event_class: str
    :ivar event_type: Event type. Required.
    :vartype event_type: str
    :ivar event_count: Event count. Required.
    :vartype event_count: int
    """

    _validation = {
        "device_id": {"required": True},
        "description": {"required": True},
        "start_timestamp_utc": {"required": True},
        "end_timestamp_utc": {"required": True},
        "event_category": {"required": True},
        "event_class": {"required": True},
        "event_type": {"required": True},
        "event_count": {"required": True},
    }

    _attribute_map = {
        "device_id": {"key": "deviceId", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "start_timestamp_utc": {"key": "startTimestampUtc", "type": "iso-8601"},
        "end_timestamp_utc": {"key": "endTimestampUtc", "type": "iso-8601"},
        "event_category": {"key": "eventCategory", "type": "str"},
        "event_class": {"key": "eventClass", "type": "str"},
        "event_type": {"key": "eventType", "type": "str"},
        "event_count": {"key": "eventCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        device_id: str,
        description: str,
        start_timestamp_utc: datetime.datetime,
        end_timestamp_utc: datetime.datetime,
        event_category: str,
        event_class: str,
        event_type: str,
        event_count: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword device_id: Device ID. Required.
        :paramtype device_id: str
        :keyword description: Event description. Required.
        :paramtype description: str
        :keyword start_timestamp_utc: Event start timestamp. Required.
        :paramtype start_timestamp_utc: ~datetime.datetime
        :keyword end_timestamp_utc: Event end timestamp. Required.
        :paramtype end_timestamp_utc: ~datetime.datetime
        :keyword event_category: Event category. Required.
        :paramtype event_category: str
        :keyword event_class: Event class. Required.
        :paramtype event_class: str
        :keyword event_type: Event type. Required.
        :paramtype event_type: str
        :keyword event_count: Event count. Required.
        :paramtype event_count: int
        """
        super().__init__(**kwargs)
        self.device_id = device_id
        self.description = description
        self.start_timestamp_utc = start_timestamp_utc
        self.end_timestamp_utc = end_timestamp_utc
        self.event_category = event_category
        self.event_class = event_class
        self.event_type = event_type
        self.event_count = event_count


class DeviceListResult(_serialization.Model):
    """The response of a Device list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Device items on this page. Required.
    :vartype value: list[~azure.mgmt.spheremsrest.models.Device]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Device]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Device"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Device items on this page. Required.
        :paramtype value: list[~azure.mgmt.spheremsrest.models.Device]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DeviceProperties(_serialization.Model):
    """The properties of device.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar device_id: Device ID.
    :vartype device_id: str
    :ivar chip_sku: SKU of the chip.
    :vartype chip_sku: str
    :ivar last_available_os_version: OS version available for installation when update requested.
    :vartype last_available_os_version: str
    :ivar last_installed_os_version: OS version running on device when update requested.
    :vartype last_installed_os_version: str
    :ivar last_os_update_utc: Time when update requested and new OS version available.
    :vartype last_os_update_utc: ~datetime.datetime
    :ivar last_update_request_utc: Time when update was last requested.
    :vartype last_update_request_utc: ~datetime.datetime
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
    """

    _attribute_map = {
        "device_id": {"key": "deviceId", "type": "str"},
        "chip_sku": {"key": "chipSku", "type": "str"},
        "last_available_os_version": {"key": "lastAvailableOsVersion", "type": "str"},
        "last_installed_os_version": {"key": "lastInstalledOsVersion", "type": "str"},
        "last_os_update_utc": {"key": "lastOsUpdateUtc", "type": "iso-8601"},
        "last_update_request_utc": {"key": "lastUpdateRequestUtc", "type": "iso-8601"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        device_id: Optional[str] = None,
        chip_sku: Optional[str] = None,
        last_available_os_version: Optional[str] = None,
        last_installed_os_version: Optional[str] = None,
        last_os_update_utc: Optional[datetime.datetime] = None,
        last_update_request_utc: Optional[datetime.datetime] = None,
        provisioning_state: Optional[Union["_models.ProvisioningState", str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword device_id: Device ID.
        :paramtype device_id: str
        :keyword chip_sku: SKU of the chip.
        :paramtype chip_sku: str
        :keyword last_available_os_version: OS version available for installation when update
         requested.
        :paramtype last_available_os_version: str
        :keyword last_installed_os_version: OS version running on device when update requested.
        :paramtype last_installed_os_version: str
        :keyword last_os_update_utc: Time when update requested and new OS version available.
        :paramtype last_os_update_utc: ~datetime.datetime
        :keyword last_update_request_utc: Time when update was last requested.
        :paramtype last_update_request_utc: ~datetime.datetime
        :keyword provisioning_state: The status of the last operation. Known values are: "Succeeded",
         "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
        :paramtype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.device_id = device_id
        self.chip_sku = chip_sku
        self.last_available_os_version = last_available_os_version
        self.last_installed_os_version = last_installed_os_version
        self.last_os_update_utc = last_os_update_utc
        self.last_update_request_utc = last_update_request_utc
        self.provisioning_state = provisioning_state


class DeviceUpdate(_serialization.Model):
    """The type used for update operations of the Device.

    :ivar properties:
    :vartype properties: ~azure.mgmt.spheremsrest.models.DeviceUpdateProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "DeviceUpdateProperties"},
    }

    def __init__(self, *, properties: Optional["_models.DeviceUpdateProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties:
        :paramtype properties: ~azure.mgmt.spheremsrest.models.DeviceUpdateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class DeviceUpdateProperties(_serialization.Model):
    """The updatable properties of the Device.

    :ivar device_group_id: Device group id.
    :vartype device_group_id: str
    """

    _attribute_map = {
        "device_group_id": {"key": "deviceGroupId", "type": "str"},
    }

    def __init__(self, *, device_group_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword device_group_id: Device group id.
        :paramtype device_group_id: str
        """
        super().__init__(**kwargs)
        self.device_group_id = device_group_id


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: any
    """

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, *, type: Optional[str] = None, info: Optional[Any] = None, **kwargs: Any) -> None:
        """
        :keyword type: The additional info type.
        :paramtype type: str
        :keyword info: The additional info.
        :paramtype info: any
        """
        super().__init__(**kwargs)
        self.type = type
        self.info = info


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.spheremsrest.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.spheremsrest.models.ErrorAdditionalInfo]
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(
        self,
        *,
        code: Optional[str] = None,
        message: Optional[str] = None,
        target: Optional[str] = None,
        details: Optional[List["_models.ErrorDetail"]] = None,
        additional_info: Optional[List["_models.ErrorAdditionalInfo"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword code: The error code.
        :paramtype code: str
        :keyword message: The error message.
        :paramtype message: str
        :keyword target: The error target.
        :paramtype target: str
        :keyword details: The error details.
        :paramtype details: list[~azure.mgmt.spheremsrest.models.ErrorDetail]
        :keyword additional_info: The error additional info.
        :paramtype additional_info: list[~azure.mgmt.spheremsrest.models.ErrorAdditionalInfo]
        """
        super().__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target
        self.details = details
        self.additional_info = additional_info


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations.

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.spheremsrest.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.spheremsrest.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class GenerateCapabilityImageRequest(_serialization.Model):
    """Request of the action to create a signed device capability image.

    All required parameters must be populated in order to send to server.

    :ivar capabilities: List of capabilities to create. Required.
    :vartype capabilities: list[str or ~azure.mgmt.spheremsrest.models.CapabilityType]
    """

    _validation = {
        "capabilities": {"required": True},
    }

    _attribute_map = {
        "capabilities": {"key": "capabilities", "type": "[str]"},
    }

    def __init__(self, *, capabilities: List[Union["_models.CapabilityType", str]], **kwargs: Any) -> None:
        """
        :keyword capabilities: List of capabilities to create. Required.
        :paramtype capabilities: list[str or ~azure.mgmt.spheremsrest.models.CapabilityType]
        """
        super().__init__(**kwargs)
        self.capabilities = capabilities


class Image(ProxyResourceBase):
    """An image resource belonging to a catalog resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
     Required.
    :vartype id: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts". Required.
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.spheremsrest.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.spheremsrest.models.ImageProperties
    """

    _validation = {
        "id": {"required": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "ImageProperties"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        type: str,
        system_data: Optional["_models.SystemData"] = None,
        properties: Optional["_models.ImageProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Fully qualified resource ID for the resource. Ex -
         /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
         Required.
        :paramtype id: str
        :keyword type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
         "Microsoft.Storage/storageAccounts". Required.
        :paramtype type: str
        :keyword system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
         information.
        :paramtype system_data: ~azure.mgmt.spheremsrest.models.SystemData
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.spheremsrest.models.ImageProperties
        """
        super().__init__(id=id, type=type, system_data=system_data, **kwargs)
        self.properties = properties


class ImageListResult(_serialization.Model):
    """The response of a Image list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Image items on this page. Required.
    :vartype value: list[~azure.mgmt.spheremsrest.models.Image]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Image]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Image"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Image items on this page. Required.
        :paramtype value: list[~azure.mgmt.spheremsrest.models.Image]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ImageProperties(_serialization.Model):
    """The properties of image.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar image: Image as a UTF-8 encoded base 64 string on image create. This field contains the
     image URI on image reads.
    :vartype image: str
    :ivar image_id: Image ID.
    :vartype image_id: str
    :ivar image_name: Image name.
    :vartype image_name: str
    :ivar regional_data_boundary: Regional data boundary for an image. Known values are: "None" and
     "EU".
    :vartype regional_data_boundary: str or ~azure.mgmt.spheremsrest.models.RegionalDataBoundary
    :ivar uri: Location the image.
    :vartype uri: str
    :ivar description: The image description.
    :vartype description: str
    :ivar component_id: The image component id.
    :vartype component_id: str
    :ivar image_type: The image type. Known values are: "InvalidImageType", "OneBl",
     "PlutonRuntime", "WifiFirmware", "SecurityMonitor", "NormalWorldLoader", "NormalWorldDtb",
     "NormalWorldKernel", "RootFs", "Services", "Applications", "FwConfig", "BootManifest", "Nwfs",
     "TrustedKeystore", "Policy", "CustomerBoardConfig", "UpdateCertStore",
     "BaseSystemUpdateManifest", "FirmwareUpdateManifest", "CustomerUpdateManifest",
     "RecoveryManifest", "ManifestSet", and "Other".
    :vartype image_type: str or ~azure.mgmt.spheremsrest.models.ImageType
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
    """

    _attribute_map = {
        "image": {"key": "image", "type": "str"},
        "image_id": {"key": "imageId", "type": "str"},
        "image_name": {"key": "imageName", "type": "str"},
        "regional_data_boundary": {"key": "regionalDataBoundary", "type": "str"},
        "uri": {"key": "uri", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "component_id": {"key": "componentId", "type": "str"},
        "image_type": {"key": "imageType", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        image: Optional[str] = None,
        image_id: Optional[str] = None,
        image_name: Optional[str] = None,
        regional_data_boundary: Optional[Union["_models.RegionalDataBoundary", str]] = None,
        uri: Optional[str] = None,
        description: Optional[str] = None,
        component_id: Optional[str] = None,
        image_type: Optional[Union["_models.ImageType", str]] = None,
        provisioning_state: Optional[Union["_models.ProvisioningState", str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword image: Image as a UTF-8 encoded base 64 string on image create. This field contains
         the image URI on image reads.
        :paramtype image: str
        :keyword image_id: Image ID.
        :paramtype image_id: str
        :keyword image_name: Image name.
        :paramtype image_name: str
        :keyword regional_data_boundary: Regional data boundary for an image. Known values are: "None"
         and "EU".
        :paramtype regional_data_boundary: str or ~azure.mgmt.spheremsrest.models.RegionalDataBoundary
        :keyword uri: Location the image.
        :paramtype uri: str
        :keyword description: The image description.
        :paramtype description: str
        :keyword component_id: The image component id.
        :paramtype component_id: str
        :keyword image_type: The image type. Known values are: "InvalidImageType", "OneBl",
         "PlutonRuntime", "WifiFirmware", "SecurityMonitor", "NormalWorldLoader", "NormalWorldDtb",
         "NormalWorldKernel", "RootFs", "Services", "Applications", "FwConfig", "BootManifest", "Nwfs",
         "TrustedKeystore", "Policy", "CustomerBoardConfig", "UpdateCertStore",
         "BaseSystemUpdateManifest", "FirmwareUpdateManifest", "CustomerUpdateManifest",
         "RecoveryManifest", "ManifestSet", and "Other".
        :paramtype image_type: str or ~azure.mgmt.spheremsrest.models.ImageType
        :keyword provisioning_state: The status of the last operation. Known values are: "Succeeded",
         "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
        :paramtype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.image = image
        self.image_id = image_id
        self.image_name = image_name
        self.regional_data_boundary = regional_data_boundary
        self.uri = uri
        self.description = description
        self.component_id = component_id
        self.image_type = image_type
        self.provisioning_state = provisioning_state


class ListDeviceGroupsRequest(_serialization.Model):
    """Request of the action to list device groups for a catalog.

    :ivar device_group_name: Device Group name.
    :vartype device_group_name: str
    """

    _attribute_map = {
        "device_group_name": {"key": "deviceGroupName", "type": "str"},
    }

    def __init__(self, *, device_group_name: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword device_group_name: Device Group name.
        :paramtype device_group_name: str
        """
        super().__init__(**kwargs)
        self.device_group_name = device_group_name


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.spheremsrest.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.spheremsrest.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.spheremsrest.models.ActionType
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        is_data_action: Optional[bool] = None,
        display: Optional["_models.OperationDisplay"] = None,
        origin: Optional[Union["_models.Origin", str]] = None,
        action_type: Optional[Union["_models.ActionType", str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: The name of the operation, as per Resource-Based Access Control (RBAC).
         Examples: "Microsoft.Compute/virtualMachines/write",
         "Microsoft.Compute/virtualMachines/capture/action".
        :paramtype name: str
        :keyword is_data_action: Whether the operation applies to data-plane. This is "true" for
         data-plane operations and "false" for ARM/control-plane operations.
        :paramtype is_data_action: bool
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.spheremsrest.models.OperationDisplay
        :keyword origin: The intended executor of the operation; as in Resource Based Access Control
         (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
         and "user,system".
        :paramtype origin: str or ~azure.mgmt.spheremsrest.models.Origin
        :keyword action_type: Enum. Indicates the action type. "Internal" refers to actions that are
         for internal only APIs. "Internal"
        :paramtype action_type: str or ~azure.mgmt.spheremsrest.models.ActionType
        """
        super().__init__(**kwargs)
        self.name = name
        self.is_data_action = is_data_action
        self.display = display
        self.origin = origin
        self.action_type = action_type


class OperationDisplay(_serialization.Model):
    """Localized display information for and operation.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(
        self,
        *,
        provider: Optional[str] = None,
        resource: Optional[str] = None,
        operation: Optional[str] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provider: The localized friendly form of the resource provider name, e.g. "Microsoft
         Monitoring Insights" or "Microsoft Compute".
        :paramtype provider: str
        :keyword resource: The localized friendly name of the resource type related to this operation.
         E.g. "Virtual Machines" or "Job Schedule Collections".
        :paramtype resource: str
        :keyword operation: The concise, localized friendly name for the operation; suitable for
         dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
        :paramtype operation: str
        :keyword description: The short, localized friendly description of the operation; suitable for
         tool tips and detailed views.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.provider = provider
        self.resource = resource
        self.operation = operation
        self.description = description


class PagedDeviceInsight(_serialization.Model):
    """Paged collection of DeviceInsight items.

    All required parameters must be populated in order to send to server.

    :ivar value: The DeviceInsight items on this page. Required.
    :vartype value: list[~azure.mgmt.spheremsrest.models.DeviceInsight]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[DeviceInsight]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.DeviceInsight"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The DeviceInsight items on this page. Required.
        :paramtype value: list[~azure.mgmt.spheremsrest.models.DeviceInsight]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class PagedOperation(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    All required parameters must be populated in order to send to server.

    :ivar value: The Operation items on this page. Required.
    :vartype value: list[~azure.mgmt.spheremsrest.models.Operation]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Operation"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Operation items on this page. Required.
        :paramtype value: list[~azure.mgmt.spheremsrest.models.Operation]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class Product(ProxyResourceBase):
    """An product resource belonging to a catalog resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
     Required.
    :vartype id: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts". Required.
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.spheremsrest.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.spheremsrest.models.ProductProperties
    """

    _validation = {
        "id": {"required": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "ProductProperties"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        type: str,
        system_data: Optional["_models.SystemData"] = None,
        properties: Optional["_models.ProductProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Fully qualified resource ID for the resource. Ex -
         /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
         Required.
        :paramtype id: str
        :keyword type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
         "Microsoft.Storage/storageAccounts". Required.
        :paramtype type: str
        :keyword system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
         information.
        :paramtype system_data: ~azure.mgmt.spheremsrest.models.SystemData
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.spheremsrest.models.ProductProperties
        """
        super().__init__(id=id, type=type, system_data=system_data, **kwargs)
        self.properties = properties


class ProductListResult(_serialization.Model):
    """The response of a Product list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Product items on this page. Required.
    :vartype value: list[~azure.mgmt.spheremsrest.models.Product]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Product]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Product"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Product items on this page. Required.
        :paramtype value: list[~azure.mgmt.spheremsrest.models.Product]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ProductProperties(_serialization.Model):
    """The properties of product.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar description: Description of the product. Required.
    :vartype description: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
    """

    _validation = {
        "description": {"required": True},
    }

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        description: str,
        provisioning_state: Optional[Union["_models.ProvisioningState", str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: Description of the product. Required.
        :paramtype description: str
        :keyword provisioning_state: The status of the last operation. Known values are: "Succeeded",
         "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
        :paramtype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.description = description
        self.provisioning_state = provisioning_state


class ProductUpdate(_serialization.Model):
    """The type used for update operations of the Product.

    :ivar properties:
    :vartype properties: ~azure.mgmt.spheremsrest.models.ProductUpdateProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "ProductUpdateProperties"},
    }

    def __init__(self, *, properties: Optional["_models.ProductUpdateProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties:
        :paramtype properties: ~azure.mgmt.spheremsrest.models.ProductUpdateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ProductUpdateProperties(_serialization.Model):
    """The updatable properties of the Product.

    :ivar description: Description of the product.
    :vartype description: str
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, *, description: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword description: Description of the product.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.description = description


class ProofOfPossessionNonceRequest(_serialization.Model):
    """Request for the proof of possession nonce.

    All required parameters must be populated in order to send to server.

    :ivar proof_of_possession_nonce: The proof of possession nonce. Required.
    :vartype proof_of_possession_nonce: str
    """

    _validation = {
        "proof_of_possession_nonce": {"required": True},
    }

    _attribute_map = {
        "proof_of_possession_nonce": {"key": "proofOfPossessionNonce", "type": "str"},
    }

    def __init__(self, *, proof_of_possession_nonce: str, **kwargs: Any) -> None:
        """
        :keyword proof_of_possession_nonce: The proof of possession nonce. Required.
        :paramtype proof_of_possession_nonce: str
        """
        super().__init__(**kwargs)
        self.proof_of_possession_nonce = proof_of_possession_nonce


class ProofOfPossessionNonceResponse(CertificateProperties):
    """Result of the action to generate a proof of possession nonce.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar certificate: The certificate as a UTF-8 encoded base 64 string.
    :vartype certificate: str
    :ivar status: The certificate status. Known values are: "Active", "Inactive", "Expired", and
     "Revoked".
    :vartype status: str or ~azure.mgmt.spheremsrest.models.CertificateStatus
    :ivar subject: The certificate subject.
    :vartype subject: str
    :ivar thumbprint: The certificate thumbprint.
    :vartype thumbprint: str
    :ivar expiry_utc: The certificate expiry date.
    :vartype expiry_utc: ~datetime.datetime
    :ivar not_before_utc: The certificate not before date.
    :vartype not_before_utc: ~datetime.datetime
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.spheremsrest.models.ProvisioningState
    """


class SignedCapabilityImageResponse(_serialization.Model):
    """Signed device capability image response.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar image: The signed device capability image as a UTF-8 encoded base 64 string.
    :vartype image: str
    """

    _attribute_map = {
        "image": {"key": "image", "type": "str"},
    }

    def __init__(self, *, image: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword image: The signed device capability image as a UTF-8 encoded base 64 string.
        :paramtype image: str
        """
        super().__init__(**kwargs)
        self.image = image


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.spheremsrest.models.CreatedByType
    :ivar created_at: The type of identity that created the resource.
    :vartype created_at: ~datetime.date
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.spheremsrest.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.date
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "date"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "date"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union["_models.CreatedByType", str]] = None,
        created_at: Optional[datetime.date] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union["_models.CreatedByType", str]] = None,
        last_modified_at: Optional[datetime.date] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.spheremsrest.models.CreatedByType
        :keyword created_at: The type of identity that created the resource.
        :paramtype created_at: ~datetime.date
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.spheremsrest.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.date
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
