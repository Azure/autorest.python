# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=useless-super-delegation

import datetime
from typing import Any, Mapping, overload

from .._utils.model_base import Model as _Model, rest_field


class BlobProperties(_Model):
    """Properties of a blob.

    :ivar name: Required.
    :vartype name: str
    :ivar size: Required.
    :vartype size: int
    :ivar content_type: Required.
    :vartype content_type: str
    :ivar created_on: Required.
    :vartype created_on: ~datetime.datetime
    """

    name: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Required."""
    size: int = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Required."""
    content_type: str = rest_field(name="contentType", visibility=["read", "create", "update", "delete", "query"])
    """Required."""
    created_on: datetime.datetime = rest_field(
        name="createdOn", visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        size: int,
        content_type: str,
        created_on: datetime.datetime,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class Input(_Model):
    """Input.

    :ivar name: Required.
    :vartype name: str
    """

    name: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class WithBodyRequest(_Model):
    """WithBodyRequest.

    :ivar name: Required.
    :vartype name: str
    """

    name: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)
