# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._operations import FormdataurlencodedOperations

from ._patch import __all__ as _patch_all
from ._patch import *  # type: ignore # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk


def raise_not_implemented(target):
    _all_abstract_methods = [
        "FormdataurlencodedOperations.update_pet_with_form",
        "FormdataurlencodedOperations.partial_constant_body",
    ]
    raise NotImplementedError(
        f"{target} Not Implemented! "
        f"We won't initialize if any of these methods not Implemented by customization: {_all_abstract_methods} "
        "Please refer to https://aka.ms/azsdk/python/dpcodegen/python/customize to learn how to customize."
    )


if not callable(getattr(FormdataurlencodedOperations, "update_pet_with_form", None)):
    raise_not_implemented("FormdataurlencodedOperations.update_pet_with_form")
if not callable(getattr(FormdataurlencodedOperations, "partial_constant_body", None)):
    raise_not_implemented("FormdataurlencodedOperations.partial_constant_body")

__all__ = [
    "FormdataurlencodedOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
