# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import msrest.serialization


class MyException(msrest.serialization.Model):
    """MyException.

    :ivar status_code:
    :vartype status_code: str
    """

    _attribute_map = {
        "status_code": {"key": "statusCode", "type": "str"},
    }

    def __init__(self, **kwargs):
        """
        :keyword status_code:
        :paramtype status_code: str
        """
        super(MyException, self).__init__(**kwargs)
        self.status_code = kwargs.get("status_code", None)


class B(MyException):
    """B.

    :ivar status_code:
    :vartype status_code: str
    :ivar text_status_code:
    :vartype text_status_code: str
    """

    _attribute_map = {
        "status_code": {"key": "statusCode", "type": "str"},
        "text_status_code": {"key": "textStatusCode", "type": "str"},
    }

    def __init__(self, **kwargs):
        """
        :keyword status_code:
        :paramtype status_code: str
        :keyword text_status_code:
        :paramtype text_status_code: str
        """
        super(B, self).__init__(**kwargs)
        self.text_status_code = kwargs.get("text_status_code", None)


class C(msrest.serialization.Model):
    """C.

    :ivar http_code:
    :vartype http_code: str
    """

    _attribute_map = {
        "http_code": {"key": "httpCode", "type": "str"},
    }

    def __init__(self, **kwargs):
        """
        :keyword http_code:
        :paramtype http_code: str
        """
        super(C, self).__init__(**kwargs)
        self.http_code = kwargs.get("http_code", None)


class D(msrest.serialization.Model):
    """D.

    :ivar http_status_code:
    :vartype http_status_code: str
    """

    _attribute_map = {
        "http_status_code": {"key": "httpStatusCode", "type": "str"},
    }

    def __init__(self, **kwargs):
        """
        :keyword http_status_code:
        :paramtype http_status_code: str
        """
        super(D, self).__init__(**kwargs)
        self.http_status_code = kwargs.get("http_status_code", None)


class Error(msrest.serialization.Model):
    """Error.

    :ivar status:
    :vartype status: int
    :ivar message:
    :vartype message: str
    """

    _attribute_map = {
        "status": {"key": "status", "type": "int"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, **kwargs):
        """
        :keyword status:
        :paramtype status: int
        :keyword message:
        :paramtype message: str
        """
        super(Error, self).__init__(**kwargs)
        self.status = kwargs.get("status", None)
        self.message = kwargs.get("message", None)
