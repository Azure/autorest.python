# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Optional, Union

import msrest.serialization

from ._auto_rest_swagger_constant_service_enums import *


class ModelAsStringNoRequiredOneValueDefault(msrest.serialization.Model):
    """ModelAsStringNoRequiredOneValueDefault.

    :ivar parameter: Possible values include: "value1".
    :vartype parameter: str or ~constants.models.ModelAsStringNoRequiredOneValueDefaultEnum
    """

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(
        self, *, parameter: Optional[Union[str, "ModelAsStringNoRequiredOneValueDefaultEnum"]] = "value1", **kwargs
    ):
        """
        :keyword parameter: Possible values include: "value1".
        :paramtype parameter: str or ~constants.models.ModelAsStringNoRequiredOneValueDefaultEnum
        """
        super(ModelAsStringNoRequiredOneValueDefault, self).__init__(**kwargs)
        self.parameter = parameter


class ModelAsStringNoRequiredOneValueNoDefault(msrest.serialization.Model):
    """ModelAsStringNoRequiredOneValueNoDefault.

    :ivar parameter: Possible values include: "value1".
    :vartype parameter: str or ~constants.models.ModelAsStringNoRequiredOneValueNoDefaultEnum
    """

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(
        self, *, parameter: Optional[Union[str, "ModelAsStringNoRequiredOneValueNoDefaultEnum"]] = None, **kwargs
    ):
        """
        :keyword parameter: Possible values include: "value1".
        :paramtype parameter: str or ~constants.models.ModelAsStringNoRequiredOneValueNoDefaultEnum
        """
        super(ModelAsStringNoRequiredOneValueNoDefault, self).__init__(**kwargs)
        self.parameter = parameter


class ModelAsStringNoRequiredTwoValueDefault(msrest.serialization.Model):
    """ModelAsStringNoRequiredTwoValueDefault.

    :ivar parameter: Possible values include: "value1", "value2".
    :vartype parameter: str or ~constants.models.ModelAsStringNoRequiredTwoValueDefaultEnum
    """

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(
        self, *, parameter: Optional[Union[str, "ModelAsStringNoRequiredTwoValueDefaultEnum"]] = "value1", **kwargs
    ):
        """
        :keyword parameter: Possible values include: "value1", "value2".
        :paramtype parameter: str or ~constants.models.ModelAsStringNoRequiredTwoValueDefaultEnum
        """
        super(ModelAsStringNoRequiredTwoValueDefault, self).__init__(**kwargs)
        self.parameter = parameter


class ModelAsStringNoRequiredTwoValueNoDefault(msrest.serialization.Model):
    """ModelAsStringNoRequiredTwoValueNoDefault.

    :ivar parameter: Possible values include: "value1", "value2".
    :vartype parameter: str or ~constants.models.ModelAsStringNoRequiredTwoValueNoDefaultEnum
    """

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(
        self, *, parameter: Optional[Union[str, "ModelAsStringNoRequiredTwoValueNoDefaultEnum"]] = None, **kwargs
    ):
        """
        :keyword parameter: Possible values include: "value1", "value2".
        :paramtype parameter: str or ~constants.models.ModelAsStringNoRequiredTwoValueNoDefaultEnum
        """
        super(ModelAsStringNoRequiredTwoValueNoDefault, self).__init__(**kwargs)
        self.parameter = parameter


class ModelAsStringRequiredOneValueDefault(msrest.serialization.Model):
    """ModelAsStringRequiredOneValueDefault.

    All required parameters must be populated in order to send to Azure.

    :ivar parameter: Required. Possible values include: "value1".
    :vartype parameter: str or ~constants.models.ModelAsStringRequiredOneValueDefaultEnum
    """

    _validation = {
        "parameter": {"required": True},
    }

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(self, *, parameter: Union[str, "ModelAsStringRequiredOneValueDefaultEnum"] = "value1", **kwargs):
        """
        :keyword parameter: Required. Possible values include: "value1".
        :paramtype parameter: str or ~constants.models.ModelAsStringRequiredOneValueDefaultEnum
        """
        super(ModelAsStringRequiredOneValueDefault, self).__init__(**kwargs)
        self.parameter = parameter


class ModelAsStringRequiredOneValueNoDefault(msrest.serialization.Model):
    """ModelAsStringRequiredOneValueNoDefault.

    All required parameters must be populated in order to send to Azure.

    :ivar parameter: Required. Possible values include: "value1".
    :vartype parameter: str or ~constants.models.ModelAsStringRequiredOneValueNoDefaultEnum
    """

    _validation = {
        "parameter": {"required": True},
    }

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(self, *, parameter: Union[str, "ModelAsStringRequiredOneValueNoDefaultEnum"], **kwargs):
        """
        :keyword parameter: Required. Possible values include: "value1".
        :paramtype parameter: str or ~constants.models.ModelAsStringRequiredOneValueNoDefaultEnum
        """
        super(ModelAsStringRequiredOneValueNoDefault, self).__init__(**kwargs)
        self.parameter = parameter


class ModelAsStringRequiredTwoValueDefault(msrest.serialization.Model):
    """ModelAsStringRequiredTwoValueDefault.

    All required parameters must be populated in order to send to Azure.

    :ivar parameter: Required. Possible values include: "value1", "value2".
    :vartype parameter: str or ~constants.models.ModelAsStringRequiredTwoValueDefaultEnum
    """

    _validation = {
        "parameter": {"required": True},
    }

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(self, *, parameter: Union[str, "ModelAsStringRequiredTwoValueDefaultEnum"] = "value1", **kwargs):
        """
        :keyword parameter: Required. Possible values include: "value1", "value2".
        :paramtype parameter: str or ~constants.models.ModelAsStringRequiredTwoValueDefaultEnum
        """
        super(ModelAsStringRequiredTwoValueDefault, self).__init__(**kwargs)
        self.parameter = parameter


class ModelAsStringRequiredTwoValueNoDefault(msrest.serialization.Model):
    """ModelAsStringRequiredTwoValueNoDefault.

    All required parameters must be populated in order to send to Azure.

    :ivar parameter: Required. Possible values include: "value1", "value2".
    :vartype parameter: str or ~constants.models.ModelAsStringRequiredTwoValueNoDefaultEnum
    """

    _validation = {
        "parameter": {"required": True},
    }

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(self, *, parameter: Union[str, "ModelAsStringRequiredTwoValueNoDefaultEnum"], **kwargs):
        """
        :keyword parameter: Required. Possible values include: "value1", "value2".
        :paramtype parameter: str or ~constants.models.ModelAsStringRequiredTwoValueNoDefaultEnum
        """
        super(ModelAsStringRequiredTwoValueNoDefault, self).__init__(**kwargs)
        self.parameter = parameter


class NoModelAsStringNoRequiredOneValueDefault(msrest.serialization.Model):
    """NoModelAsStringNoRequiredOneValueDefault.

    :ivar parameter:  The only acceptable values to pass in are None and "value1". The default
     value is "value1".
    :vartype parameter: str
    """

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(self, *, parameter: Optional[str] = "value1", **kwargs):
        """
        :keyword parameter:  The only acceptable values to pass in are None and "value1". The default
         value is "value1".
        :paramtype parameter: str
        """
        super(NoModelAsStringNoRequiredOneValueDefault, self).__init__(**kwargs)
        self.parameter = parameter


class NoModelAsStringNoRequiredOneValueNoDefault(msrest.serialization.Model):
    """NoModelAsStringNoRequiredOneValueNoDefault.

    :ivar parameter:  The only acceptable values to pass in are None and "value1". The default
     value is None.
    :vartype parameter: str
    """

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(self, *, parameter: Optional[str] = None, **kwargs):
        """
        :keyword parameter:  The only acceptable values to pass in are None and "value1". The default
         value is None.
        :paramtype parameter: str
        """
        super(NoModelAsStringNoRequiredOneValueNoDefault, self).__init__(**kwargs)
        self.parameter = parameter


class NoModelAsStringNoRequiredTwoValueDefault(msrest.serialization.Model):
    """NoModelAsStringNoRequiredTwoValueDefault.

    :ivar parameter: Possible values include: "value1", "value2".
    :vartype parameter: str or ~constants.models.NoModelAsStringNoRequiredTwoValueDefaultEnum
    """

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(
        self, *, parameter: Optional[Union[str, "NoModelAsStringNoRequiredTwoValueDefaultEnum"]] = "value1", **kwargs
    ):
        """
        :keyword parameter: Possible values include: "value1", "value2".
        :paramtype parameter: str or ~constants.models.NoModelAsStringNoRequiredTwoValueDefaultEnum
        """
        super(NoModelAsStringNoRequiredTwoValueDefault, self).__init__(**kwargs)
        self.parameter = parameter


class NoModelAsStringNoRequiredTwoValueNoDefault(msrest.serialization.Model):
    """NoModelAsStringNoRequiredTwoValueNoDefault.

    :ivar parameter: Possible values include: "value1", "value2".
    :vartype parameter: str or ~constants.models.NoModelAsStringNoRequiredTwoValueNoDefaultEnum
    """

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(
        self, *, parameter: Optional[Union[str, "NoModelAsStringNoRequiredTwoValueNoDefaultEnum"]] = None, **kwargs
    ):
        """
        :keyword parameter: Possible values include: "value1", "value2".
        :paramtype parameter: str or ~constants.models.NoModelAsStringNoRequiredTwoValueNoDefaultEnum
        """
        super(NoModelAsStringNoRequiredTwoValueNoDefault, self).__init__(**kwargs)
        self.parameter = parameter


class NoModelAsStringRequiredOneValueDefault(msrest.serialization.Model):
    """NoModelAsStringRequiredOneValueDefault.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar parameter:  Has constant value: "value1".
    :vartype parameter: str
    """

    _validation = {
        "parameter": {"required": True, "constant": True},
    }

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    parameter = "value1"

    def __init__(self, **kwargs):
        """ """
        super(NoModelAsStringRequiredOneValueDefault, self).__init__(**kwargs)


class NoModelAsStringRequiredOneValueNoDefault(msrest.serialization.Model):
    """NoModelAsStringRequiredOneValueNoDefault.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar parameter:  Has constant value: "value1".
    :vartype parameter: str
    """

    _validation = {
        "parameter": {"required": True, "constant": True},
    }

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    parameter = "value1"

    def __init__(self, **kwargs):
        """ """
        super(NoModelAsStringRequiredOneValueNoDefault, self).__init__(**kwargs)


class NoModelAsStringRequiredTwoValueDefault(msrest.serialization.Model):
    """NoModelAsStringRequiredTwoValueDefault.

    All required parameters must be populated in order to send to Azure.

    :ivar parameter: Required. Possible values include: "value1", "value2".
    :vartype parameter: str or ~constants.models.NoModelAsStringRequiredTwoValueDefaultEnum
    """

    _validation = {
        "parameter": {"required": True},
    }

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(self, *, parameter: Union[str, "NoModelAsStringRequiredTwoValueDefaultEnum"] = "value1", **kwargs):
        """
        :keyword parameter: Required. Possible values include: "value1", "value2".
        :paramtype parameter: str or ~constants.models.NoModelAsStringRequiredTwoValueDefaultEnum
        """
        super(NoModelAsStringRequiredTwoValueDefault, self).__init__(**kwargs)
        self.parameter = parameter


class NoModelAsStringRequiredTwoValueNoDefault(msrest.serialization.Model):
    """NoModelAsStringRequiredTwoValueNoDefault.

    All required parameters must be populated in order to send to Azure.

    :ivar parameter: Required. Possible values include: "value1", "value2".
    :vartype parameter: str or ~constants.models.NoModelAsStringRequiredTwoValueNoDefaultEnum
    """

    _validation = {
        "parameter": {"required": True},
    }

    _attribute_map = {
        "parameter": {"key": "parameter", "type": "str"},
    }

    def __init__(self, *, parameter: Union[str, "NoModelAsStringRequiredTwoValueNoDefaultEnum"], **kwargs):
        """
        :keyword parameter: Required. Possible values include: "value1", "value2".
        :paramtype parameter: str or ~constants.models.NoModelAsStringRequiredTwoValueNoDefaultEnum
        """
        super(NoModelAsStringRequiredTwoValueNoDefault, self).__init__(**kwargs)
        self.parameter = parameter
