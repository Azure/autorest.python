# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import List, Optional

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class ArrayOptionalWrapper(msrest.serialization.Model):
    """ArrayOptionalWrapper.

    :keyword value:
    :paramtype value: list[str]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[str]"},
    }

    def __init__(self, *, value: Optional[List[str]] = None, **kwargs):
        super(ArrayOptionalWrapper, self).__init__(**kwargs)
        self.value = value


class ArrayWrapper(msrest.serialization.Model):
    """ArrayWrapper.

    All required parameters must be populated in order to send to Azure.

    :keyword value: Required.
    :paramtype value: list[str]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[str]"},
    }

    def __init__(self, *, value: List[str], **kwargs):
        super(ArrayWrapper, self).__init__(**kwargs)
        self.value = value


class ClassOptionalWrapper(msrest.serialization.Model):
    """ClassOptionalWrapper.

    :keyword value:
    :paramtype value: ~requiredoptional.models.Product
    """

    _attribute_map = {
        "value": {"key": "value", "type": "Product"},
    }

    def __init__(self, *, value: Optional["Product"] = None, **kwargs):
        super(ClassOptionalWrapper, self).__init__(**kwargs)
        self.value = value


class ClassWrapper(msrest.serialization.Model):
    """ClassWrapper.

    All required parameters must be populated in order to send to Azure.

    :keyword value: Required.
    :paramtype value: ~requiredoptional.models.Product
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "Product"},
    }

    def __init__(self, *, value: "Product", **kwargs):
        super(ClassWrapper, self).__init__(**kwargs)
        self.value = value


class Error(msrest.serialization.Model):
    """Error.

    :keyword status:
    :paramtype status: int
    :keyword message:
    :paramtype message: str
    """

    _attribute_map = {
        "status": {"key": "status", "type": "int"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, *, status: Optional[int] = None, message: Optional[str] = None, **kwargs):
        super(Error, self).__init__(**kwargs)
        self.status = status
        self.message = message


class IntOptionalWrapper(msrest.serialization.Model):
    """IntOptionalWrapper.

    :keyword value:
    :paramtype value: int
    """

    _attribute_map = {
        "value": {"key": "value", "type": "int"},
    }

    def __init__(self, *, value: Optional[int] = None, **kwargs):
        super(IntOptionalWrapper, self).__init__(**kwargs)
        self.value = value


class IntWrapper(msrest.serialization.Model):
    """IntWrapper.

    All required parameters must be populated in order to send to Azure.

    :keyword value: Required.
    :paramtype value: int
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "int"},
    }

    def __init__(self, *, value: int, **kwargs):
        super(IntWrapper, self).__init__(**kwargs)
        self.value = value


class Product(msrest.serialization.Model):
    """Product.

    All required parameters must be populated in order to send to Azure.

    :keyword id: Required.
    :paramtype id: int
    :keyword name:
    :paramtype name: str
    """

    _validation = {
        "id": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "int"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, *, id: int, name: Optional[str] = None, **kwargs):
        super(Product, self).__init__(**kwargs)
        self.id = id
        self.name = name


class StringOptionalWrapper(msrest.serialization.Model):
    """StringOptionalWrapper.

    :keyword value:
    :paramtype value: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "str"},
    }

    def __init__(self, *, value: Optional[str] = None, **kwargs):
        super(StringOptionalWrapper, self).__init__(**kwargs)
        self.value = value


class StringWrapper(msrest.serialization.Model):
    """StringWrapper.

    All required parameters must be populated in order to send to Azure.

    :keyword value: Required.
    :paramtype value: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "str"},
    }

    def __init__(self, *, value: str, **kwargs):
        super(StringWrapper, self).__init__(**kwargs)
        self.value = value
