# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
from typing import Any, Optional

from azure.core.rest import HttpRequest
from azure.core.utils import case_insensitive_dict

from ..._serialization import Serializer
from ..._vendor import _format_url_section

_SERIALIZER = Serializer()
_SERIALIZER.client_side_validation = False

# fmt: off

def build_put_no_model_as_string_no_required_two_value_no_default_request(
    *,
    input: Optional[str] = None,
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Known values are: "value1" and "value2". Default value is None.
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putNoModelAsStringNoRequiredTwoValueNoDefault"

    # Construct parameters
    if input is not None:
        _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_no_model_as_string_no_required_two_value_default_request(
    *,
    input: str = "value1",
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Known values are: "value1" and "value2". Default value is "value1".
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putNoModelAsStringNoRequiredTwoValueDefault"

    # Construct parameters
    if input is not None:
        _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_no_model_as_string_no_required_one_value_no_default_request(
    *,
    input: str = "value1",
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Known values are "value1" and None. Default value is "value1".
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putNoModelAsStringNoRequiredOneValueNoDefault"

    # Construct parameters
    if input is not None:
        _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_no_model_as_string_no_required_one_value_default_request(
    *,
    input: str = "value1",
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Known values are "value1" and None. Default value is "value1".
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putNoModelAsStringNoRequiredOneValueDefault"

    # Construct parameters
    if input is not None:
        _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_no_model_as_string_required_two_value_no_default_request(
    *,
    input: str,
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Known values are: "value1" and "value2". Required.
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putNoModelAsStringRequiredTwoValueNoDefault"

    # Construct parameters
    _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_no_model_as_string_required_two_value_default_request(
    *,
    input: str = "value1",
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Known values are: "value1" and "value2". Default value is "value1".
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putNoModelAsStringRequiredTwoValueDefault"

    # Construct parameters
    _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_no_model_as_string_required_one_value_no_default_request(
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Default value is "value1". Note that overriding this default value may result
     in unsupported behavior.
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    input = kwargs.pop('input', _params.pop('input', "value1"))  # type: str
    # Construct URL
    _url = "/constants/putNoModelAsStringRequiredOneValueNoDefault"

    # Construct parameters
    _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_no_model_as_string_required_one_value_default_request(
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Default value is "value1". Note that overriding this default value may result
     in unsupported behavior.
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    input = kwargs.pop('input', _params.pop('input', "value1"))  # type: str
    # Construct URL
    _url = "/constants/putNoModelAsStringRequiredOneValueDefault"

    # Construct parameters
    _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_model_as_string_no_required_two_value_no_default_request(
    *,
    input: Optional[str] = None,
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Known values are: "value1" and "value2". Default value is None.
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putModelAsStringNoRequiredTwoValueNoDefault"

    # Construct parameters
    if input is not None:
        _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_model_as_string_no_required_two_value_default_request(
    *,
    input: str = "value1",
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Known values are: "value1" and "value2". Default value is "value1".
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putModelAsStringNoRequiredTwoValueDefault"

    # Construct parameters
    if input is not None:
        _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_model_as_string_no_required_one_value_no_default_request(
    *,
    input: Optional[str] = None,
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: "value1" Default value is None.
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putModelAsStringNoRequiredOneValueNoDefault"

    # Construct parameters
    if input is not None:
        _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_model_as_string_no_required_one_value_default_request(
    *,
    input: str = "value1",
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: "value1" Default value is "value1".
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putModelAsStringNoRequiredOneValueDefault"

    # Construct parameters
    if input is not None:
        _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_model_as_string_required_two_value_no_default_request(
    *,
    input: str,
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Known values are: "value1" and "value2". Required.
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putModelAsStringRequiredTwoValueNoDefault"

    # Construct parameters
    _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_model_as_string_required_two_value_default_request(
    *,
    input: str = "value1",
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: Known values are: "value1" and "value2". Default value is "value1".
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putModelAsStringRequiredTwoValueDefault"

    # Construct parameters
    _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_model_as_string_required_one_value_no_default_request(
    *,
    input: str,
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: "value1" Required.
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putModelAsStringRequiredOneValueNoDefault"

    # Construct parameters
    _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_model_as_string_required_one_value_default_request(
    *,
    input: str = "value1",
    **kwargs: Any
) -> HttpRequest:
    """Puts constants to the testserver.

    Puts constants to the testserver.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword input: "value1" Default value is "value1".
    :paramtype input: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    # Construct URL
    _url = "/constants/putModelAsStringRequiredOneValueDefault"

    # Construct parameters
    _params['input'] = _SERIALIZER.query("input", input, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        **kwargs
    )


def build_put_client_constants_request(
    **kwargs: Any
) -> HttpRequest:
    """Pass constants from the client to this function. Will pass in constant path, query, and header
    parameters.

    See https://aka.ms/azsdk/dpcodegen/python/send_request for how to incorporate this request
    builder into your code flow.

    :keyword header_constant: Constant header property on the client that is a required parameter
     for operation 'constants_putClientConstants'. Default value is True. Note that overriding this
     default value may result in unsupported behavior.
    :paramtype header_constant: bool
    :keyword query_constant: Constant query property on the client that is a required parameter for
     operation 'constants_putClientConstants'. Default value is 100. Note that overriding this
     default value may result in unsupported behavior.
    :paramtype query_constant: int
    :keyword path_constant: Constant path property on the client that is a required parameter for
     operation 'constants_putClientConstants'. Default value is "path". Note that overriding this
     default value may result in unsupported behavior.
    :paramtype path_constant: str
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/dpcodegen/python/send_request for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest
    """

    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    header_constant = kwargs.pop('header_constant', _headers.pop('header-constant', True))  # type: bool
    query_constant = kwargs.pop('query_constant', _params.pop('query-constant', 100))  # type: int
    path_constant = kwargs.pop('path_constant', "path")  # type: str
    # Construct URL
    _url = "/constants/clientConstants/{path-constant}"
    path_format_arguments = {
        "path-constant": _SERIALIZER.url("path_constant", path_constant, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    _params['query-constant'] = _SERIALIZER.query("query_constant", query_constant, 'int')

    # Construct headers
    _headers['header-constant'] = _SERIALIZER.header("header_constant", header_constant, 'bool')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )
