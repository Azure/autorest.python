# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Optional

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class Error(msrest.serialization.Model):
    """Error.

    :param status:
    :type status: int
    :param message:
    :type message: str
    """

    _attribute_map = {
        'status': {'key': 'status', 'type': 'int'},
        'message': {'key': 'message', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        status: Optional[int] = None,
        message: Optional[str] = None,
        **kwargs
    ):
        super(Error, self).__init__(**kwargs)
        self.status = status
        self.message = message


class ModelFour(msrest.serialization.Model):
    """Used for testFour in OperationsGroupTwo.

    All required parameters must be populated in order to send to Azure.

    :param length: Required.
    :type length: long
    """

    _validation = {
        'length': {'required': True},
    }

    _attribute_map = {
        'length': {'key': 'length', 'type': 'long'},
    }

    def __init__(
        self,
        *,
        length: int,
        **kwargs
    ):
        super(ModelFour, self).__init__(**kwargs)
        self.length = length


class ModelOne(msrest.serialization.Model):
    """Used for testOne in OperationGroupOne.

    All required parameters must be populated in order to send to Azure.

    :param id: Required.
    :type id: int
    :param message:
    :type message: str
    """

    _validation = {
        'id': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'int'},
        'message': {'key': 'message', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: int,
        message: Optional[str] = None,
        **kwargs
    ):
        super(ModelOne, self).__init__(**kwargs)
        self.id = id
        self.message = message


class ModelThree(msrest.serialization.Model):
    """Used for testThree in OperationGroupOne.

    All required parameters must be populated in order to send to Azure.

    :param length: Required.
    :type length: long
    """

    _validation = {
        'length': {'required': True},
    }

    _attribute_map = {
        'length': {'key': 'length', 'type': 'long'},
    }

    def __init__(
        self,
        *,
        length: int,
        **kwargs
    ):
        super(ModelThree, self).__init__(**kwargs)
        self.length = length


class ModelTwo(msrest.serialization.Model):
    """Used for testTwo in OperationGroupOne.

    :param optional_property:
    :type optional_property: str
    """

    _attribute_map = {
        'optional_property': {'key': 'optionalProperty', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        optional_property: Optional[str] = None,
        **kwargs
    ):
        super(ModelTwo, self).__init__(**kwargs)
        self.optional_property = optional_property
